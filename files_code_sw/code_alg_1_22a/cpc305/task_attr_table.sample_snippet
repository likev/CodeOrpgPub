## CODE Sample Algorithm Version 1.15 (Build 9)
## After reorganization, became separate file named 
##      task_attr_table.sample_snippet
## Eliminated the 'id' attribute, replaced 'name' with 'filename' which is the
##      executable name.  Added the task name in first line.
## Used the new syntax of REGISTRATION_NAME(prod id) for the 'input_data' and 
## the 'output_data' attributes.

## CODE Sample Algorithm Version 1.17 (Build 10)
## Eliminated the "-v" option from the items in 'args'
## Replaced REFL_RAWDATA(66) with RECOMBINED_REFL_RAWDATA(71)

## CODE Sample Algorithm Version 1.18 (Build 10)
## Modified sample algorithm 1 to use super resolution inputs:
## SR_REFLDATA(78) and REFL_RAWDATA(66) and renamed outputs.
## NOTE: To display with CVG 8.5, the resolution configured for
## products 1990 and 1995 must be changed from 0.54 nm to 0.13 nm.

###Task_attr_table {

## Added for CODE
    Task sample1_base {  
        filename        sample1_dig
        input_data      SR_REFLDATA(78) 
        output_data     SR_DIGREFLBASE(1990)
        desc            "Create Sample 1 Product - 256-level Base Reflectivity"
        args
                        0 
    }

    Task sample1_raw {  
        filename        sample1_dig
        input_data      REFL_RAWDATA(66) 
        output_data     SR_DIGREFLRAW(1995)
        desc            "Create Sample 1 Product - 256-level Raw Reflectivity"
        args
                        0 
    }


    Task sample2_rad {  
        filename        sample2_rad
# REFLDATA(79)
        input_data      SAMPLE2IN(79) 
# DUALPOL_REFLDATA(307) the following used for testing Dual Pol data
#        input_data      SAMPLE2IN(307)
        output_data     RADREFL(1991)
        desc            "Create Sample 2 Product - 16-level Base Reflectivity"
        args
                        0 
    }

# CODE Sample Algorithm 3 Task 1
    Task sample3_t1 {  
        filename        sample3_t1
        input_data      REFLDATA(79) 
        output_data     SAMPLE3_IP(1989)
        desc            "Create Sample 3 Intermediate: 256 lvl/0.54 nm"
        args
                        0 
    }

# CODE Sample Algorithm 3 Task 2
    Task sample3_t2 {  
        filename        sample3_t2
        input_data      SAMPLE3_IP(1989)
        output_data     SAMPLE3_FP(1992)
        desc            "Create Sample 3 Final Product: 256 level/0.54 nm"
        args
                        0 
    }

# includeds optional input as a test
# CODE Sample Algorithm 4 Task 1
    Task sample4_t1 {
        filename        sample4_t1
        input_data      REFLDATA(79) SAMPLE3_IP(1989)
        output_data     SAMPLE4_IP1(1988) SAMPLE4_IP2(1987)
        desc            "Create Sample 4 Intermediate Products"
        args
                        0 
    }

# CODE Sample Algorithm 4 Task 2
    Task sample4_t2 {
        filename        sample4_t2
        input_data      SAMPLE4_IP1(1988) SAMPLE4_IP2(1987)
        output_data     SAMPLE4_FP1(1993) SAMPLE4_FP2(1994)
        desc            "Create Sample 4 Final Products"
        args
                        0 
    }


###}

