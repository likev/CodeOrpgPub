/*
 * RCS info
 * $Author: steves $
 * $Locker:  $
 * $Date: 2014/03/13 16:18:25 $
 * $Id: prfselect_buf.h,v 1.8 2014/03/13 16:18:25 steves Exp $
 * $Revision: 1.8 $
 * $State: Exp $
 */
#ifndef PRFSELECT_BUF_H
#define PRFSELECT_BUF_H

#include <vcp.h>

#define MAX_STORMS			10
#define MAX_TRACKED			5
#define MAX_CHARS			4

/* Commands and States */
#define PRF_COMMAND_UNKNOWN   		-1
#define PRF_COMMAND_MANUAL_PRF		0
#define PRF_COMMAND_AUTO_PRF		1
#define PRF_COMMAND_STORM_BASED		2
#define PRF_COMMAND_CELL_BASED		4

/* Defines the command structure for PRF Selection. */
typedef struct {

   int command;		/* See Commands and States.  Note:  For Storm-based 
                           and Cell-based PRF selection, Auto PRF is assumed 
                           enabled. */

   char storm_id[MAX_CHARS];
			/* For Cell-Based PRF Selection ... Cell ID. */

} Prf_command_t;

/* Possible Error Codes: */
#define PRF_STATUS_NO_ERRORS		 0
#define PRF_STATUS_NO_STORMS_FOUND	-1
#define PRF_STATUS_CELL_OUT_OF_RANGE	-2
#define PRF_STATUS_CELL_NOT_FOUND	-3
#define PRF_STATUS_COMMAND_FAILED	-4
#define PRF_STATUS_COMMAND_INVALID	-5

typedef struct {

   float storm_rng;		/* Range to storm/cell centroid, in km. */

   float storm_azm;		/* Azimuth to storm/cell centroid, in deg. */

   float storm_rng_proj;	/* Projected range to storm/cell centroid, in km. */

   float storm_azm_proj;	/* Projected azimuth to storm/cell centroid, in deg. */

   float storm_vil;		/* Cell-based VIL. */

   float storm_mx_refl;		/* Maximum reflectivity, in dBz. */

   float storm_ht_mx_refl;	/* Height of maximum reflectivity, in km. */

   float storm_ht_top;		/* Height of storm, in km. */

   char storm_id[MAX_CHARS];	/* Storm ID. */

} Storm_data_t;

typedef struct {

   int state;			/* Bit map:  see States. */

   int error_code;		/* See above. */

   int radius;			/* Radius of influence around storm centroid. */

   int num_storms;		/* Number of storms in storm_data. */

   Storm_data_t storm_data[MAX_STORMS];
                        	/* Storm location information. */

   int num_storms_tracked;	/* Number of storms/cells being tracked. */

   int ids_storms_tracked[MAX_TRACKED];
                        	/* Index values (into storm_data) of storms being tracked. */

} Prf_status_t;

/* The following defines the format of the output buffer 
   generated by prfselect. */
typedef struct {

   int disposition;
   int size;
   int change_to_vcp;
   Vcp_struct vcp;

} Prfselect_t;

typedef struct {

   int active;
   int num_in_seq;
   int vcps[10];

} Vcp_seq_t;

#endif
