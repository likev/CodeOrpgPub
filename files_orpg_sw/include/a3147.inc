XCOMM RCS info 
XCOMM $Author: steves $ 
XCOMM $Locker:  $ 
XCOMM $Date: 2006/07/12 17:43:07 $ 
XCOMM $Id: a3147.inc,v 1.6 2006/07/12 17:43:07 steves Exp $ 
XCOMM $Revision: 1.6 $ 
XCOMM $State: Exp $ 
*.********************************************************************
*.
*.           I N C L U D E    F I L E    P R O L O G U E
*.
*.  INCLUDE FILE NAME: A3147.INC
*.
*.  INCLUDE FILE VERSION: 00
*.
*.  INCLUDE FILE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.  DATE         RV   SPR#          PROGRAMMER         NOTES
*.  ---------    --   -----         ----------------   ---------------
*.  11/27/95     00   NA94-08462    EPF & CAS         NEW INCLUDE
*.  01/31/02     01   NA01-27501    Dennis A. Miller  **A3147C9
*.********************************************************************
**A3147P1
*VERSION:0
C ******************************************************************
      INTEGER*4   USP_CODE, USP_NTR, USP_EL_IDX
      PARAMETER   (USP_CODE = 31)
      PARAMETER   (USP_NTR  = 32)
      PARAMETER   (USP_EL_IDX = 1)
      INTEGER     END_HOUR, TIME_SPAN
      INTEGER     NULL_POS, HRS_POS, DUP_POS
      INTEGER     BEG_POS, END_POS, OVER_POS
      INTEGER     CUSTIDX, CCOPYNO
      INTEGER*2   DUP_FLAG
      PARAMETER   (END_HOUR = 2)
      PARAMETER   (TIME_SPAN = 3)
      PARAMETER   (NULL_POS = 4)
      PARAMETER   (HRS_POS  = 5)
      PARAMETER   (DUP_POS  = 5)
      PARAMETER   (BEG_POS  = 6)
      PARAMETER   (END_POS  = 7)
      PARAMETER   (OVER_POS = 8)
      PARAMETER   (CUSTIDX = 9)
      PARAMETER   (CCOPYNO = 10)
      PARAMETER   (DUP_FLAG = 99)
/*
**A3147P2
*VERSION: 0
      INTEGER*4  NROWS,NCOLS
      PARAMETER  (NROWS=40,NCOLS=55)
      INTEGER*2  SBLKID,GBLKID, DIVIDER
      INTEGER*4  NUMLYRS,FRSTI2WD,SCNDI2WD,MXLVLCOL
      INTEGER*4  GPOFF,GLOFF,GDOFF
      INTEGER*4  GUPLIM,GNOLNS

      PARAMETER  (DIVIDER=-1,GBLKID=2,SBLKID = 1)
      PARAMETER  (GPOFF=5,GLOFF=2)
      PARAMETER  (GDOFF=3,GUPLIM=8,GNOLNS=5)
      PARAMETER  (NUMLYRS =1, FRSTI2WD = 1)
      PARAMETER  (SCNDI2WD =2, MXLVLCOL = 16)
/*
**A3147P3
* VERSION: 0
      INTEGER BAD_FILE, MIN_HRS, ILL_REQ, CLEAR
      INTEGER END_INIT
      PARAMETER (BAD_FILE = 1)
      PARAMETER (MIN_HRS = 2)
      PARAMETER (ILL_REQ = 3)
      PARAMETER (END_INIT = 4)
      PARAMETER (CLEAR = 0)
/*
**A3147P4
* VERSION: 0
       INTEGER*2 INIT_VAL
       PARAMETER (INIT_VAL = -2)
       INTEGER*2 HRS_24,ONE_HR
       PARAMETER (HRS_24 = 24, ONE_HR = 1)
/*
**A3147P9
*VERSION:0
C ******************************************************************
C

c     include a3146p1.inc for KBINS and KRADS

C
C ******************************************************************
C
$INCLUDE orpgdat.inc,**ORPGDAT

      INTEGER USDB_DISK_LU
      INTEGER MAX_USDB_RECS,  USDB_HDR_RECNO
      INTEGER USDB_NEWEST,    USDB_OLDEST
      INTEGER MAX_USDB_HRS,   MAX_ADJU_HRS,    DFLT_24H_RECNO
      INTEGER NUM_HDR_BYTES,  NUM_POLAR_BYTES
      INTEGER NUM_HDR_SCTRS,  NUM_POLAR_SCTRS
      INTEGER NUM_ADJU_SCTRS, NUM_24H_SCTRS
      INTEGER USDB_HDR_SCTR,  DFLT_24H_SCTR,   USDB_SIZE
      INTEGER USDB_NO_DATA
C
C DISK FILE RECORD PARAMETERS
C
C     ORPG Issue 12
      PARAMETER (USDB_DISK_LU=HYUSRSEL)
C
      PARAMETER (USDB_HDR_RECNO=1)
      PARAMETER (MAX_USDB_HRS=30)
      PARAMETER (MAX_ADJU_HRS=MAX_USDB_HRS)
      PARAMETER (USDB_NEWEST = 1,  USDB_OLDEST = MAX_USDB_HRS)
      PARAMETER (DFLT_24H_RECNO  =
     +              USDB_HDR_RECNO + MAX_USDB_HRS + MAX_ADJU_HRS + 1)
      PARAMETER (MAX_USDB_RECS   = DFLT_24H_RECNO)
C
C SET NUM_HDR_BYTES SO THAT COMMON /A3147C9/ EQUALS SIX DISK SECTORS
C EXACTLY (I.E. 6*256 = 1536 BYTES) (SEE SEGMENT **A3147C9 IN A3147.INC)
C
      PARAMETER (NUM_HDR_BYTES=1536)
      PARAMETER (NUM_POLAR_BYTES = KBINS*KRADS*2)

      PARAMETER (NUM_HDR_SCTRS     = (NUM_HDR_BYTES-1)/256 + 1)
      PARAMETER (NUM_POLAR_SCTRS   = (NUM_POLAR_BYTES-1)/256 + 1)
      PARAMETER (NUM_ADJU_SCTRS    =  NUM_POLAR_SCTRS)
      PARAMETER (NUM_24H_SCTRS     =  NUM_POLAR_SCTRS)

      PARAMETER (USDB_HDR_SCTR     = 0)
      PARAMETER (DFLT_24H_SCTR     = USDB_HDR_SCTR + NUM_HDR_SCTRS +
     +                               (NUM_POLAR_SCTRS * MAX_USDB_HRS) +
     +                               (NUM_ADJU_SCTRS  * MAX_ADJU_HRS))
      PARAMETER (USDB_SIZE         = NUM_HDR_SCTRS +
     +                               (NUM_POLAR_SCTRS * MAX_USDB_HRS) +
     +                               (NUM_ADJU_SCTRS  * MAX_ADJU_HRS) +
     +                                                  NUM_24H_SCTRS)
      PARAMETER (USDB_NO_DATA      = -2)
/*
**A3147C1
*VERSION 0
**********************************************************************
      LOGICAL GC_RDFLAG
      INTEGER*4 NREQ, VOLN
      INTEGER*2 CA(10,10), LOC_HRDB_TIME
      COMMON/A3147C1/GC_RDFLAG
      COMMON/A3147C1/NREQ, VOLN, CA,  LOC_HRDB_TIME
/*
**A3147C2
* VERSION 0
      INTEGER SCALE, MAXVAL
      INTEGER*2 START_DATE, END_DATE, START_DATE_NULL
      INTEGER*2 START_TIME
      REAL BIAS_ESTM, BIAS_GRPSIZ, BIAS_MSPAN
      LOGICAL BIAS_TOGGLE ,NULL_PROD, SPOT_BLANK
      COMMON /A3147C2/ SCALE, MAXVAL, BIAS_ESTM
      COMMON/A3147C2/BIAS_GRPSIZ, BIAS_MSPAN, BIAS_TOGGLE
      COMMON/A3147C2/NULL_PROD, SPOT_BLANK
      COMMON/A3147C2/START_DATE, END_DATE, START_TIME
      COMMON/A3147C2/START_DATE_NULL
/*
**A3147C3
* VERSION 0
      INTEGER*2  TBUF(NROWS,NCOLS)
      INTEGER*2  PGNO,IPIX,JPIX
      INTEGER*2  TEMP_HRS(30)
      INTEGER*4  NDX,PNDX,N1,N2,K1,K2,KI,IT,NP
      INTEGER*4  GPHLNG,GPHOFF,SVGIDX
      COMMON/A3147C3/NDX,PNDX,N1,N2,K1,K2,KI,IT,NP
      COMMON/A3147C3/GPHLNG,GPHOFF,SVGIDX
      COMMON/A3147C3/PGNO,IPIX,JPIX,TEMP_HRS
      COMMON/A3147C3/TBUF
/*
**A3147C4
*VERSION 0
      INTEGER*2 AVAIL_HRS(MAX_USDB_HRS)
      INTEGER*2 HOURS_AVAIL ,PAD2
      LOGICAL  AVAIL_FLAG(MAX_USDB_HRS)
      INTEGER*2 NUM_HOURS,TIMESPAN,ENDHOUR
      COMMON/A3147C4/ AVAIL_FLAG, AVAIL_HRS, HOURS_AVAIL
      COMMON/A3147C4/ NUM_HOURS, TIMESPAN,ENDHOUR, PAD2
/*
**A3147C5
*VERSION:00
      REAL RTHRESH
      INTEGER MAX_ALLOW_VAL_PPHR, MAX_ALLOW_VAL_STM
      PARAMETER (MAX_ALLOW_VAL_PPHR = 3232)
      PARAMETER (MAX_ALLOW_VAL_STM = 6464)
      INTEGER*2 STMTOT_LOOKUP(6464), PPHRLY_LOOKUP(3232)
      COMMON/A3147C5/RTHRESH, STMTOT_LOOKUP, PPHRLY_LOOKUP
/*
**A3147C6
*VERSION 0
      INTEGER*2 ADJ_END_INDX, ADJ_BEG_INDX
      INTEGER*2 END_INDX, BEG_INDX
      COMMON/A3147C6/END_INDX,BEG_INDX
      COMMON/A3147C6/ADJ_END_INDX,ADJ_BEG_INDX
/*
**A3147C7
*VERSION 0
      INTEGER*4 SCN_DATE, SCN_TIME
      COMMON /A3147C7/ SCN_DATE,SCN_TIME
/*
**A3147C8
*VERSION:0
C
C ***************************************************************
C
C  THIS BLOCK CONTAINS LOCAL COMMON DATA TO THE TASK THAT DEFINES
C  THE GENERAL STATE OF THE TASK AT ANY TIME
C
      INTEGER USDB_FIL_STAT,USDB_LAST_OPER,USDB_LAST_RECNO
      COMMON /A3147C8/ USDB_FIL_STAT, USDB_LAST_OPER, USDB_LAST_RECNO
C
/*
**A3147C9
*VERSION:0000
C
C ***************************************************************
C
C ****** COMMON BLOCK THAT DEFINES THE DIRECTORY OF THE USER SELECTABLE
C ****** DATABASE DISK FILE THAT IS MAINTAINED BY THE PRODUCT TASK.

C ****** ANY ADDITIONS MUST BE MADE BETWEEN THE START AND END VARIABLES.
C ****** ALSO, PARAMETER NUM_HDR_BYTES DEFINED IN SEGMENT **A3147P9 IN
C ****** A3147.INC (AND REFERENCED BELOW) MUST BE CHANGED ACCORDINGLY.
C

C     User Selectable Database (USERSEL.DAT) File Structure            Rec No.
C     ---------------------------------------------------------        -------
C     Header_Record_Number                      USDB_HDR_RECNO         ( 1   )
C     Hourly_Record_Number  (MAX_USDB_HRS)      USDB_HRLY_RECNO        ( 2-31)
C     Adjusted_Record_Number(MAX_ADJU_HRS)      USDB_ADJU_RECNO        (32-61)
C     Dflt_24H_Record_Number                    DFLT_24H_RECNO         (   62)

C
C
C
      INTEGER USDB_START_DIR, USDB_END_DIR
C
      INTEGER*4 USDB_SCTR_OFFS (MAX_USDB_RECS)
      INTEGER*2 USDB_HRS_OLD (MAX_USDB_HRS)
      INTEGER*2 USDB_HRLY_RECNO (MAX_USDB_HRS)
      INTEGER*2 USDB_ADJU_RECNO (MAX_ADJU_HRS)
      INTEGER*2 USDB_HRLY_EDATE (MAX_USDB_HRS)
      INTEGER*2 USDB_HRLY_ETIME (MAX_USDB_HRS)
      INTEGER*4 USDB_HRLY_SCAN_TYPE (MAX_USDB_HRS)
      INTEGER*4 USDB_SB_STATUS_HRLY (MAX_USDB_HRS)
      INTEGER*4 USDB_FLG_ZERO_HRLY (MAX_USDB_HRS)
      INTEGER*4 USDB_FLG_NO_HRLY (MAX_USDB_HRS)
      REAL      USDB_CUR_BIAS (MAX_USDB_HRS)
      REAL      USDB_CUR_GRPSIZ (MAX_USDB_HRS)
      REAL      USDB_CUR_MSPAN (MAX_USDB_HRS)
      INTEGER*4 USDB_FLG_ADJUST (MAX_USDB_HRS)

      INTEGER*2 USDB_LAST_DATA_RECNO
      INTEGER*2 USDB_LAST_DATE
      INTEGER*2 USDB_LAST_TIME
      INTEGER*2 DATE_GCPROD
      INTEGER*2 TIME_GCPROD
      INTEGER*2 TIME_SPAN_GCPROD
      LOGICAL FLAG_NO_GCPROD
C
C** VARIABLE TO PREVENT ALIGNMENT COMPILER WARNING
C
      CHARACTER*2 C9PAD
C
C** SET I*2 ARRAY SO THAT COMMON EQUALS SIX DISK SECTORS EXACTLY AS
c** DEFINED IN SEGMENT **A3147P9 IN A3147.INC (I.E. 6*256 = 1536 BYTES)
C
      INTEGER*2 C9SECTOR (NUM_HDR_BYTES/2)
      EQUIVALENCE (USDB_START_DIR,C9SECTOR(1))
C
      COMMON /A3147C9/ USDB_START_DIR
C
      COMMON /A3147C9/ USDB_SCTR_OFFS,        USDB_HRS_OLD
      COMMON /A3147C9/ USDB_HRLY_RECNO,       USDB_ADJU_RECNO
      COMMON /A3147C9/ USDB_HRLY_EDATE,       USDB_HRLY_ETIME
      COMMON /A3147C9/ USDB_HRLY_SCAN_TYPE
      COMMON /A3147C9/ USDB_SB_STATUS_HRLY,   USDB_FLG_ZERO_HRLY
      COMMON /A3147C9/ USDB_FLG_NO_HRLY,      USDB_CUR_BIAS
      COMMON /A3147C9/ USDB_CUR_GRPSIZ,       USDB_CUR_MSPAN
      COMMON /A3147C9/ USDB_FLG_ADJUST,       USDB_LAST_DATA_RECNO
      COMMON /A3147C9/ USDB_LAST_DATE,        USDB_LAST_TIME
      COMMON /A3147C9/ DATE_GCPROD,           TIME_GCPROD
      COMMON /A3147C9/ TIME_SPAN_GCPROD,      FLAG_NO_GCPROD
C
      COMMON /A3147C9/ USDB_END_DIR
/*
