XCOMM RCS info 
XCOMM $Author: steves $ 
XCOMM $Locker:  $ 
XCOMM $Date: 2014/07/08 21:04:16 $ 
XCOMM $Id: a304.inc,v 1.24 2014/07/08 21:04:16 steves Exp $ 
XCOMM $Revision: 1.24 $ 
XCOMM $State: Exp $
*.********************************************************************
*.
*.           I N C L U D E    F I L E    P R O L O G U E
*.
*.  INCLUDE FILE NAME: A304.INC
*.
*.  INCLUDE FILE VERSION: 0009
*.
*.  INCLUDE FILE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.  DATE         RV   SPR#          PROGRAMMER         NOTES
*.  ---------    --   -----         ----------------   --------------
*.  06 01 90     00   90698         P. STALEY
*.  07 11 90     01   90819         G. JUBINSKI
*.  08 02 90     01   90869         STEVE ANDERSON
*.  08 29 90     01   90936         MARY LOU ECKERLE
*.  09 07 90     01   90952         PAUL JENDROWSKI
*.  11 10 90     02   90996         MARY LOU ECKERLE   **A304P5
*.  01 10 91     02   91395         CHARLIE BAUMHER    **A304P8
*.  02 08 91     02   91747         MARY LOU ECKERLE   **A304PA
*.  06 13 91     02   92083         DAVID ETRIS
*.  08 29 91     03   92372         D. ERICKSON        **A304DE
*.  03 10 92     04   92443         M. FRESCH          **A304P5
*.  04 08 92     04   92377         MARY LOU ECKERLE   **A304P7
*.  06 24 92     05   92751         MEI  OU            **A304C1
*.  06 25 93     06   NA93-17501    BRADLEY SUTKER     **A304C1
*.  04 29 94     07   NW-94-048-28  STEVE SMITH        **A304DH
*.  04 29 94     07   NW-94-060-17  STEVE SMITH        **A304P5
*.  06/12/94     07   NW-94-060-16  STEVE SMITH        **A304CE
*.  03/31/95     08   NA94-35402    STEVE SMITH        A304C2,A304CF
*.  03/31/95     08   NA94-32604    STEVE SMITH        **A304CM
*.  03/31/95     08   NA94-11252    STEVE SMITH        **A304CL
*.  03/31/95     08   NA94-29205    STEVE SMITH        **A304CL
*.  04/04/95     08   NA94-35301    C. STEPHENSON       A304P1,A304P4,A304P7,A304P8
*.  03/20/95     08   NA94-29203    R. RIERSON          A304DI
*.  04/18/97     09   NA96-20101    Brian Klein         A304P8
*.  08/14/97     09   NA96-31001    STEVE SMITH         A304DI
*.  10/06/97     09   NA95-33504    A. GAUTAM          **A304P5
*.  05/15/98     09   NA98-14101    C. STEPHENSON     **A304P5
*.********************************************************************
**A304P1
*VERSION: 5
C*******************************************************************
C
C     A304P1.PRM  -  DEFINE RDA TO RPG BASE RADIAL DATA
C
C*******************************************************************
C
C     BDMSIZ    -  MESSAGE SIZE
C     BDMTYP    -  MESSAGE TYPE
C     BDIDSEQ   -  ID SEQUENCE
C     BDJDAT    -  MESSAGE DATE
C     BDMILTIM  -  MESSAGE TIME (FIRST HALFWORD)
C     BDTOTSEG  -  TOTAL NUMBER OF SEGMENTS IN THIS MESSAGE
C     BDSEGNUM  -  SEGMENT NUMBER OF THIS MESSAGE
C     BDZULU    -  RADIAL TIME (FIRST HALFWORD)
C     BDCDAT    -  MODIFIED JULIAN DATE
C     BDUNAMBI  -  UNAMBIGUOUS RANGE
C     BDAZA     -  AZIMUTH ANGLE
C     BDAZN     -  AZIMUTH NUMBER
C     BDRSTAT   -  RADIAL STATUS
C     BDEANG    -  ELEVATION ANGLE
C     BDENUM    -  ELEVATION NUM
C     BDSRANG   -  SURVEILLANCE RANGE
C     BDDRANG   -  DOPPLER RANGE
C     BDSINT    -  SURVEILLANCE RANGE SAMPLE INTERVAL
C     BDDINT    -  DOPPLER RANGE SAMPLE INTERVAL
C     BDNSB     -  NUMBER OF SURVEILLANCE BINS
C     BDNDB     -  NUMBER OF DOPPLER BINS
C     BDSPP     -  SCAN PROFILE POINTER
C     BDCC      -  CALIBRATION CONSTANT (FIRST HALFWORD)
C     BDSP      -  SURVEILLANCE POINTER
C     BDVP      -  VELOCITY POINTER
C     BDSWP     -  SPECTRUN WIDTH POINTER
C     BDDVR     -  DOPPLER VELOCITY RESOLUTION
C     BDVCP     -  VOLUME COVERAGE PATTERN NUMBER
C     BDSPTBLNK -  SPOT BLANK STATUS
C
C--------------------------------------------------------------------
C
C     MSGHDRSZ  -  SIZE OF RDA TO RPG MESSAGE HEADER (HALFWORDS)
C
C--------------------------------------------------------------------
C
C     VOL_SB_BIT  - POSITION OF BIT WHICH INDICATES VOLUME IS SPOT BLANKED
C     ELEV_SB_BIT - POSITION OF BIT WHICH INDICATES ELEVATION IS SPOT BLANKED
C     RAD_SB_BIT  - POSITION OF BIT WHICH INDICATES RADIAL IS SPOT BLANKED
C
C*******************************************************************
C
      INTEGER*4 BDMSIZ
      INTEGER*4 BDMTYP
      INTEGER*4 BDIDSEQ
      INTEGER*4 BDJDAT
      INTEGER*4 BDMILTIM
      INTEGER*4 BDTOTSEG
      INTEGER*4 BDSEGNUM
      INTEGER*4 BDZULU
      INTEGER*4 BDCDAT
      INTEGER*4 BDUNAMBI
      INTEGER*4 BDAZA
      INTEGER*4 BDAZN
      INTEGER*4 BDRSTAT
      INTEGER*4 BDEANG
      INTEGER*4 BDENUM
      INTEGER*4 BDSRANG
      INTEGER*4 BDDRANG
      INTEGER*4 BDSINT
      INTEGER*4 BDDINT
      INTEGER*4 BDNSB
      INTEGER*4 BDNDB
      INTEGER*4 BDSPP
      INTEGER*4 BDCC
      INTEGER*4 BDSP
      INTEGER*4 BDVP
      INTEGER*4 BDSWP
      INTEGER*4 BDDVR
      INTEGER*4 BDVCP
      INTEGER*4 BDATMOS
      INTEGER*4 BDTOVER
      INTEGER*4 BDNQVEL
      INTEGER*4 BDSPTBLNK
C
      PARAMETER (BDMSIZ = 1)
      PARAMETER (BDMTYP = 2)
      PARAMETER (BDIDSEQ = 3)
      PARAMETER (BDJDAT = 4)
      PARAMETER (BDMILTIM = 5)
      PARAMETER (BDTOTSEG = 7)
      PARAMETER (BDSEGNUM = 8)
      PARAMETER (BDZULU = 9)
      PARAMETER (BDCDAT = 11)
      PARAMETER (BDUNAMBI = 12)
      PARAMETER (BDAZA = 13)
      PARAMETER (BDAZN = 14)
      PARAMETER (BDRSTAT = 15)
      PARAMETER (BDEANG = 16)
      PARAMETER (BDENUM = 17)
      PARAMETER (BDSRANG = 18)
      PARAMETER (BDDRANG = 19)
      PARAMETER (BDSINT = 20)
      PARAMETER (BDDINT = 21)
      PARAMETER (BDNSB = 22)
      PARAMETER (BDNDB = 23)
      PARAMETER (BDSPP = 24)
      PARAMETER (BDCC = 25)
      PARAMETER (BDSP = 27)
      PARAMETER (BDVP = 28)
      PARAMETER (BDSWP = 29)
      PARAMETER (BDDVR = 30)
      PARAMETER (BDVCP = 31)
      PARAMETER (BDNQVEL = 39)
      PARAMETER (BDATMOS = 40)
      PARAMETER (BDTOVER = 41)
      PARAMETER (BDSPTBLNK = 42)
C
      INTEGER*4 MSGHDRSZ
C
      PARAMETER (MSGHDRSZ = 8)
C
      INTEGER*4 VOL_SB_BIT, ELEV_SB_BIT, RAD_SB_BIT
      PARAMETER (VOL_SB_BIT = 13, ELEV_SB_BIT = 14, RAD_SB_BIT = 15)
/*
**A304P4
*VERSION: 3
C******************************************************************C
C
C    A304P4.PRM  -  PARAMETER FILE DEFINING LENGTHS AND OFFSETS    C
C                   FOR PREPROCESSED BASE RADIAL DATA              C
C                                                                  C
C******************************************************************C
C                                                                  C
C    LENGTHS OF PREPROCESSED RADIAL DATA BUFFERS (IN HALFWORDS)    C
C    ---------------------------------------------------------     C
C    PHEDSIZE - PREPROCESSED BASE RADIAL HEADER                    C
C    PREFSIZE - PREPROCESSED BASE REFLECTIVITY                     C
C    PVELSIZE - PREPROCESSED BASE VELOCITY                         C
C    PSPWSIZE - PREPROCESSED BASE SPECTRUM WIDTH                   C
C                                                                  C
C******************************************************************C
C                                                                  C
C    OFFSETS INTO BASE RADIAL DATA INPUT BUFFER (IN WORDS,         C
C    RELATIVE 0 FROM 'MEM(PTR)')                                   C
C    -----------------------------------------------------         C
C    HEDO - PREPROCESSED BASE RADIAL HEADER                        C
C    REFO - PREPROCESSED BASE REFLECTIVITY                         C
C    VELO - PREPROCESSED BASE VELOCITY                             C
C    SPWO - PREPROCESSED BASE SPECTRUM WIDTH                       C
C                                                                  C
C******************************************************************C
C                                                                  C
C    RADIAL HEADER OFFSETS (IN HALFWORDS, RELATIVE 1 FROM          C
C    THE BEGINNING OF THE PREPROCESSED RADIAL HEADER)              C
C    -----------------------------------------------------         C
C    MSOFFSET - MESSAGE SIZE                                       C
C    MTOFFSET - MESSAGE TYPE                                       C
C    MVOFFSET - MESSAGE VERSION NUMBER                             C
C    RNOFFSET - RADAR NAME OFFSET                                  C
C    TOFFSET1 - GENERATION TIME OF RADIAL (1ST HALF OF I*4 WORD)   C
C    TOFFSET2 - GENERATION TIME OF RADIAL (2ND HALF OF I*4 WORD)   C
C    VOFFSET1 - BEGINNING OF VOLUME SCAN TIME (IN WHICH THIS       C
C                RADIAL WAS GENERATED - 1ST HALF OF I*4 WORD)      C
C    VOFFSET2 - BEGINNING OF VOLUME SCAN TIME (IN WHICH THIS       C
C                RADIAL WAS GENERATED - 2ND HALF OF I*4 WORD)      C
C    DAOFFSET - GENERATION DATE OF RADIAL (JULIAN DAYS)            C
C    VDOFFSET - BEGGINING OF VOLUME SCAN START DATA (JULIAN)       C
C    LTOFFST1 - LATITUDE OF RADAR, IN DEG*1000 (1ST HALF OF        C
C                I*4 WORD)                                         C
C    LTOFFST2 - LATITUDE OF RADAR, IN DEG*1000 (2ND HALF OF        C
C                I*4 WORD)                                         C
C    LNOFFST1 - LONGITUDE OF RADAR, IN DEG*1000 (1ST HALF OF       C
C                I*4 WORD)                                         C
C    LNOFFST2 - LONGITUDE OF RADAR, IN DEG*1000 (2ND HALF OF       C
C                I*4 WORD)                                         C
C    HGTOFFST - HEIGHT OF RADAR, IN FEET MSL                       C 
C    FHTOFFST - FEEDHORN HEIGHT, IN FEET MSL                       C
C    WMOFFSET - WEATHER MODE                                       C
C    VCOFFSET - VOLUME COVERAGE PATTERN NUMBER                     C
C    AOFFSET1 - AZIMUTH ANGLE MEASUREMENT (1ST HALF OF R*4 WORD)   C
C    AOFFSET2 - AZIMUTH ANGLE MEASUREMENT (2ND HALF OF R*4 WORD)   C
C    EOFFSET1 - ELEVATION ANGLE MEASUREMENT (1ST HALF OF R*4 WORD) C
C    EOFFSET2 - ELEVATION ANGLE MEASUREMENT (2ND HALF OF R*4 WORD) C
C    ANOFFSET - AZIMUTH NUMBER                                     C
C    EIOFFSET - ELEVATION CUT NUMBER                               C
C    LEOFFSET - LAST ELEVATION IN VOLUME SCAN FLAG                 C
C    STOFFSET - START ANGLE MEASUREMENT                            C
C    DTOFFSET - DELTA ANGLE MEASUREMENT                            C
C    SINAOFS1 - SIN OF AZIMUTH ANGLE (1ST HALF OF R*4 WORD)        C
C    SINAOFS2 - SIN OF AZIMUTH ANGLE (2ND HALF OF R*4 WORD)        C
C    COSAOFS1 - COSINE OF AZIMUTH ANGLE (1ST HALF OF R*4 WORD)     C
C    COSAOFS2 - COSINE OF AZIMUTH ANGLE (2ND HALF OF R*4 WORD)     C
C    SINEOFS1 - SIN OF ELEVATION ANGLE (1ST HALF OF R*4 WORD)      C
C    SINEOFS2 - SIN OF ELEVATION ANGLE (2ND HALF OF R*4 WORD)      C
C    COSEOFS1 - COSINE OF ELEVATION ANGLE (1ST HALF OF R*4 WORD)   C
C    COSEOFS2 - COSINE OF ELEVATION ANGLE (2ND HALF OF R*4 WORD)   C
C    RSOFFSET - RADIAL STATUS                                      C
C    ATMOSOFF - OFFSET TO THE ATMOSPHERIC ATENUATION               C
C    SBOFFSET - OFFSET TO THE SPOT BLANKING STATUS                 C
C    POFFSET1 - PSP SCALING CONSTANT (1ST HALF OF R*4 WORD)        C
C    POFFSET2 - PSP SCALING CONSTANT (2ND HALF OF R*4 WORD)        C
C    NDOFFSET - NUMBER OF DOPPLER BINS                             C
C    DIOFFSET - DOPPLER RANGE SAMPLE INTERVAL (METERS)             C
C    RGFDBOFF - RANGE TO 1ST DOPPLER BIN (IN BINS)                 C
C    DROFFSET - DOPPLER VELOCITY RESOLUTION                        C
C    UROFFSET - UNAMBIGUOUS RANGE INTERVAL SIZE                    C
C    TOVEROFF - OFFSET TO THE OVERLAY COEFFICIANT                  C
C    NYOFFSET - OFFSET TO THE NYQUIST VELOCITY
C    NSOFFSET - NUMBER OF SURVEILLANCE BINS                        C
C    SIOFFSET - SURVEILANCE RANGE SAMPLE INTERVAL (METERS)         C
C    RGFSBOFF - RANGE TO 1ST SURVEILLANCE BIN (IN BINS)            C
C                                                                  C
C******************************************************************C
C                                                                  C
C     ADDITIONAL PARAMETERS                                        C
C     ---------------------                                        C
C     LASTELVOL - TEST LEOFFSET FOR LAST ELEVATION IN VOLUME SCAN  C
C     RDBLTH    - TEST VALUE FOR BIN BELOW THRESHOLD               C
C     RDRNGF    - TEST VALUE FOR BIN RANGE FOLDED                  C
C     RDMSNG    - TEST VALUE FOR BIN MISSING                       C
C                                                                  C
C******************************************************************C
C
      INTEGER PHEDSIZE
      INTEGER PREFSIZE, MAX_PREFSIZE
      INTEGER PVELSIZE
      INTEGER PSPWSIZE
C
      INTEGER HEDO
      INTEGER REFO
      INTEGER VELO
      INTEGER SPWO
C
      INTEGER MSOFFSET
      INTEGER MTOFFSET
      INTEGER MVOFFSET
      INTEGER RNOFFSET
      INTEGER TOFFSET1
      INTEGER TOFFSET2
      INTEGER VOFFSET1
      INTEGER VOFFSET2
      INTEGER DAOFFSET
      INTEGER VDOFFSET
      INTEGER LTOFFST1
      INTEGER LTOFFST2
      INTEGER LNOFFST1
      INTEGER LNOFFST2
      INTEGER HGTOFFST
      INTEGER FHTOFFST
      INTEGER WMOFFSET
      INTEGER VCOFFSET
      INTEGER AOFFSET1
      INTEGER AOFFSET2
      INTEGER EOFFSET1
      INTEGER EOFFSET2
      INTEGER ANOFFSET
      INTEGER EIOFFSET
      INTEGER LEOFFSET
      INTEGER STOFFSET
      INTEGER DTOFFSET
      INTEGER SINAOFS1
      INTEGER SINAOFS2
      INTEGER COSAOFS1
      INTEGER COSAOFS2
      INTEGER SINEOFS1
      INTEGER SINEOFS2
      INTEGER COSEOFS1
      INTEGER COSEOFS2
      INTEGER RSOFFSET
      INTEGER ATMOSOFF
      INTEGER SBOFFSET
      INTEGER POFFSET1
      INTEGER POFFSET2
      INTEGER NDOFFSET
      INTEGER DIOFFSET
      INTEGER RGFDBOFF
      INTEGER RBFDOFF
      INTEGER DROFFSET
      INTEGER UROFFSET
      INTEGER NYOFFSET
      INTEGER TOVEROFF
      INTEGER NSOFFSET
      INTEGER SIOFFSET
      INTEGER RGFSBOFF
      INTEGER RBRSOFF
C
      PARAMETER (PHEDSIZE = 140)
      PARAMETER (PREFSIZE = 460)
      PARAMETER (MAX_PREFSIZE = 1840)
      PARAMETER (PVELSIZE = 1200)
      PARAMETER (PSPWSIZE = 1200)
C
      PARAMETER (HEDO = 0)
      PARAMETER (VELO = HEDO + (PHEDSIZE+1)/2 )
      PARAMETER (SPWO = VELO + (PVELSIZE+1)/2 )
      PARAMETER (REFO = SPWO + (PVELSIZE+1)/2 )
C
      PARAMETER (MSOFFSET = 1)
      PARAMETER (MTOFFSET = MSOFFSET+1)
      PARAMETER (MVOFFSET = MSOFFSET+2)
      PARAMETER (RNOFFSET = MSOFFSET+3)
      PARAMETER (TOFFSET1 = MSOFFSET+6)
      PARAMETER (TOFFSET2 = MSOFFSET+7)
      PARAMETER (VOFFSET1 = MSOFFSET+8)
      PARAMETER (VOFFSET2 = MSOFFSET+9)
      PARAMETER (DAOFFSET = MSOFFSET+10)
      PARAMETER (VDOFFSET = MSOFFSET+11)
      PARAMETER (LTOFFST1 = MSOFFSET+12)
      PARAMETER (LTOFFST2 = MSOFFSET+13)
      PARAMETER (LNOFFST1 = MSOFFSET+14)
      PARAMETER (LNOFFST2 = MSOFFSET+15)
      PARAMETER (HGTOFFST = MSOFFSET+16)
      PARAMETER (FHTOFFST = MSOFFSET+17)
      PARAMETER (WMOFFSET = MSOFFSET+18)
      PARAMETER (VCOFFSET = MSOFFSET+19)
      PARAMETER (AOFFSET1 = MSOFFSET+22)
      PARAMETER (AOFFSET2 = MSOFFSET+23)
      PARAMETER (EOFFSET1 = MSOFFSET+24)
      PARAMETER (EOFFSET2 = MSOFFSET+25)
      PARAMETER (ANOFFSET = MSOFFSET+26)
      PARAMETER (EIOFFSET = MSOFFSET+28)
      PARAMETER (LEOFFSET = MSOFFSET+30)
      PARAMETER (STOFFSET = MSOFFSET+31)
      PARAMETER (DTOFFSET = MSOFFSET+32)
      PARAMETER (SINAOFS1 = MSOFFSET+34)
      PARAMETER (SINAOFS2 = MSOFFSET+35)
      PARAMETER (COSAOFS1 = MSOFFSET+36)
      PARAMETER (COSAOFS2 = MSOFFSET+37)
      PARAMETER (SINEOFS1 = MSOFFSET+38)
      PARAMETER (SINEOFS2 = MSOFFSET+39)
      PARAMETER (COSEOFS1 = MSOFFSET+40)
      PARAMETER (COSEOFS2 = MSOFFSET+41)
      PARAMETER (RSOFFSET = MSOFFSET+42)
      PARAMETER (ATMOSOFF = MSOFFSET+44)
      PARAMETER (SBOFFSET = MSOFFSET+45)
      PARAMETER (POFFSET1 = MSOFFSET+52) 
      PARAMETER (POFFSET2 = MSOFFSET+53) 
      PARAMETER (NDOFFSET = MSOFFSET+68) 
      PARAMETER (DIOFFSET = MSOFFSET+69) 
      PARAMETER (RGFDBOFF = MSOFFSET+70) 
      PARAMETER (RBFDOFF  = MSOFFSET+71) 
      PARAMETER (DROFFSET = MSOFFSET+72)
      PARAMETER (UROFFSET = MSOFFSET+73) 
      PARAMETER (NYOFFSET = MSOFFSET+74) 
      PARAMETER (TOVEROFF = MSOFFSET+76)
      PARAMETER (NSOFFSET = MSOFFSET+78)
      PARAMETER (SIOFFSET = MSOFFSET+79)
      PARAMETER (RGFSBOFF = MSOFFSET+80) 
      PARAMETER (RBRSOFF  = MSOFFSET+81)
C
      INTEGER LASTELVOL
      INTEGER RDBLTH
      INTEGER RDRNGF
      INTEGER RDMSNG
C
      PARAMETER (LASTELVOL = 1)
      PARAMETER (RDBLTH    = 0)
      PARAMETER (RDRNGF    = 1)
      PARAMETER (RDMSNG    = 256)
C
/*
**A304P7
*VERSION: 2
C*******************************************************************
C
C     A304P7.PRM  -  DEFINE RPG TO RDA MESSAGES
C
C*******************************************************************
C
      INTEGER*4 QUE4_RESTART
      INTEGER*4 QUE4_SHUTDOWN
      INTEGER*4 QUE4_BDINHIBIT
      INTEGER*4 QUE4_BDPERMIT
      INTEGER*4 COM4_LBTEST
      INTEGER*4 COM4_WBMSG
      INTEGER*4 COM4_WBENABLE
      INTEGER*4 COM4_WBDISABLE
      INTEGER*4 COM4_SWAPRDA
      INTEGER*4 COM4_WMVCPCHG
      INTEGER*4 COM4_RDACOM
      INTEGER*4 COM4_REQRDADATA
      INTEGER*4 COM4_DLOADVCP
      INTEGER*4 COM4_SENDEDCLBY
      INTEGER*4 COM4_SENDCLCZ
      INTEGER*4 COM4_ENVWND
      INTEGER*4 QUE4_ACTIVATE
      INTEGER*4 QUE4_ENVWNDVAD
      INTEGER*4 COM4_CHGMODE
      INTEGER*4 COM4_SB_ENAB
      INTEGER*4 COM4_SB_DIS
C
      PARAMETER (QUE4_RESTART = 400)
      PARAMETER (QUE4_SHUTDOWN = 401)
      PARAMETER (QUE4_BDINHIBIT = 402)
      PARAMETER (QUE4_BDPERMIT = 403)
      PARAMETER (COM4_LBTEST = 404)
      PARAMETER (COM4_WBMSG = 406)
      PARAMETER (COM4_WBENABLE = 407)
      PARAMETER (COM4_WBDISABLE = 408)
      PARAMETER (COM4_SWAPRDA = 409)
      PARAMETER (COM4_WMVCPCHG = 410)
      PARAMETER (COM4_RDACOM = 411)
      PARAMETER (COM4_REQRDADATA = 412)
      PARAMETER (COM4_DLOADVCP = 413)
      PARAMETER (COM4_SENDEDCLBY = 414)
      PARAMETER (COM4_SENDCLCZ = 415)
      PARAMETER (COM4_ENVWND = 416)
      PARAMETER (QUE4_ENVWNDVAD = 417)
      PARAMETER (QUE4_ACTIVATE = 418)
      PARAMETER (COM4_CHGMODE = 419)
      PARAMETER (COM4_SB_ENAB = 420)
      PARAMETER (COM4_SB_DIS = 421)
C
      INTEGER*4 CPC4M_COMMAND
      INTEGER*4 CPC4M_LINENO
      INTEGER*4 CPC4M_P1
      INTEGER*4 CPC4M_P2
      INTEGER*4 CPC4M_P3
      INTEGER*4 CPC4M_MSGDATA
C
      PARAMETER (CPC4M_COMMAND = 1)
      PARAMETER (CPC4M_LINENO = 2)
      PARAMETER (CPC4M_P1 = 3)
      PARAMETER (CPC4M_P2 = 4)
      PARAMETER (CPC4M_P3 = 5)
      PARAMETER (CPC4M_MSGDATA = 5)
C
      INTEGER*4 RDC_STATE
      INTEGER*4 RDC_BDENABLE
      INTEGER*4 RDC_AUXGEN
      INTEGER*4 RDC_CONTROL
      INTEGER*4 RDC_RESCAN
      INTEGER*4 RDC_SELVCP
      INTEGER*4 RDC_AUTOCAL
      INTEGER*4 RDC_CTLICU
      INTEGER*4 RDC_SELOPMODE
      INTEGER*4 RDC_CCTL_STATUS
      INTEGER*4 RDC_ARCH_CONTROL
      INTEGER*4 RDC_ARCH_NUM_SCANS
      INTEGER*4 RDC_ARCH_START_TIME
      INTEGER*4 RDC_ARCH_START_TIME2
      INTEGER*4 RDC_ARCH_START_DATE
      INTEGER*4 RDC_ARCH_STOP_DATE
      INTEGER*4 RDC_ARCH_STOP_TIME
      INTEGER*4 RDC_ARCH_STOP_TIME2
      INTEGER*4 RDC_SB
C
      PARAMETER (RDC_STATE=1)
      PARAMETER (RDC_BDENABLE=2)
      PARAMETER (RDC_AUXGEN=3)
      PARAMETER (RDC_CONTROL=4)
      PARAMETER (RDC_RESCAN=5)
      PARAMETER (RDC_SELVCP=6)
      PARAMETER (RDC_AUTOCAL=7)
      PARAMETER (RDC_CTLICU=10)
      PARAMETER (RDC_SELOPMODE = 11)
      PARAMETER (RDC_CCTL_STATUS = 12)
      PARAMETER (RDC_ARCH_CONTROL = 13)
      PARAMETER (RDC_ARCH_NUM_SCANS = 14)
      PARAMETER (RDC_ARCH_START_TIME = 15)
      PARAMETER (RDC_ARCH_START_TIME2 = 16)
      PARAMETER (RDC_ARCH_START_DATE = 17)
      PARAMETER (RDC_ARCH_STOP_DATE = 18)
      PARAMETER (RDC_ARCH_STOP_TIME = 19)
      PARAMETER (RDC_ARCH_STOP_TIME2 = 20)
      PARAMETER (RDC_SB = 21)
C
      INTEGER*4 CRDA_STANDBY
      INTEGER*4 CRDA_OFFOPER
      INTEGER*4 CRDA_OPERATE
      INTEGER*4 CRDA_RESTART
      INTEGER*4 CRDA_BDENABLE
      INTEGER*4 CRDA_BDENABLEN
      INTEGER*4 CRDA_BDENABLER
      INTEGER*4 CRDA_BDENABLEV
      INTEGER*4 CRDA_BDENABLEW
      INTEGER*4 CRDA_REQREMOTE
      INTEGER*4 CRDA_ACCREMOTE
      INTEGER*4 CRDA_ENALOCAL
      INTEGER*4 CRDA_AUTOCAL
      INTEGER*4 CRDA_CTLISU
      INTEGER*4 CRDA_AUXGEN
      INTEGER*4 CRDA_RESTART_VCP
      INTEGER*4 CRDA_RESTART_ELEV
      INTEGER*4 CRDA_SELECT_VCP
      INTEGER   CRDA_UTIL
      INTEGER   CRDA_ARCH_COLLECT
      INTEGER   CRDA_ARCH_REPLAY
      INTEGER   CRDA_ARCH_STOP
      INTEGER*4 CRDA_FORCE_RED_STANDBY
      INTEGER*4 CRDA_MODE_OP
      INTEGER*4 CRDA_MODE_MNT
      INTEGER*4 CRDA_SB_ENAB
      INTEGER*4 CRDA_SB_DIS
C
      PARAMETER (CRDA_STANDBY = 1)
      PARAMETER (CRDA_OFFOPER = 2)
      PARAMETER (CRDA_OPERATE = 3)
      PARAMETER (CRDA_RESTART = 4)
      PARAMETER (CRDA_BDENABLE = 5)
      PARAMETER (CRDA_BDENABLEN = 6)
      PARAMETER (CRDA_BDENABLER = 7)
      PARAMETER (CRDA_BDENABLEV = 8)
      PARAMETER (CRDA_BDENABLEW = 9)
      PARAMETER (CRDA_REQREMOTE = 10)
      PARAMETER (CRDA_ACCREMOTE = 11)
      PARAMETER (CRDA_ENALOCAL  = 12)
      PARAMETER (CRDA_AUTOCAL   = 13)
      PARAMETER (CRDA_CTLISU    = 14)
      PARAMETER (CRDA_AUXGEN    = 15)
      PARAMETER (CRDA_RESTART_VCP = 16)
      PARAMETER (CRDA_RESTART_ELEV = 17)
      PARAMETER (CRDA_SELECT_VCP = 18)
      PARAMETER (CRDA_UTIL = 20)
      PARAMETER (CRDA_ARCH_COLLECT = 21)
      PARAMETER (CRDA_ARCH_REPLAY = 22)
      PARAMETER (CRDA_ARCH_STOP = 23)
      PARAMETER (CRDA_FORCE_RED_STANDBY = 24)
      PARAMETER (CRDA_MODE_OP = 25)
      PARAMETER (CRDA_MODE_MNT = 26)
      PARAMETER (CRDA_SB_ENAB = 29)
      PARAMETER (CRDA_SB_DIS = 30)
C
      INTEGER*4 RCOM_STANDBY
      INTEGER*4 RCOM_OFFOPER
      INTEGER*4 RCOM_OPERATE
      INTEGER*4 RCOM_RESTART
      INTEGER*4 RCOM_PLAYBACK
      INTEGER*4 RCOM_BDENABLE
      INTEGER*4 RCOM_BDENABLEN
      INTEGER*4 RCOM_BDENABLER
      INTEGER*4 RCOM_BDENABLEV
      INTEGER*4 RCOM_BDENABLEW
      INTEGER*4 RCOM_REQREMOTE
      INTEGER*4 RCOM_ACCREMOTE
      INTEGER*4 RCOM_ENALOCAL
      INTEGER*4 RCOM_RESTART_VCP
      INTEGER*4 RCOM_RESTART_ELEV
      INTEGER*4 RCOM_AUXGEN
      INTEGER   RCOM_UTIL
      INTEGER*4 RCOM_CTLISUE
      INTEGER*4 RCOM_CTLISUD
      INTEGER   RCOM_ARCH_START
      INTEGER   RCOM_ARCH_STOP
      INTEGER RCOM_FORCE_RED_STANDBY
      INTEGER RCOM_CHAN_CONTRL
      INTEGER RCOM_CHAN_NONCONTRL
      INTEGER RCOM_SB_ENAB
      INTEGER RCOM_SB_DIS
C
      PARAMETER (RCOM_STANDBY = X'8001')
      PARAMETER (RCOM_OFFOPER = X'8002')
      PARAMETER (RCOM_OPERATE = X'8004')
      PARAMETER (RCOM_RESTART = X'8008')
      PARAMETER (RCOM_PLAYBACK = X'8010')
      PARAMETER (RCOM_BDENABLE = X'8007')
      PARAMETER (RCOM_BDENABLEN = X'8000')
      PARAMETER (RCOM_BDENABLER = X'8001')
      PARAMETER (RCOM_BDENABLEV = X'8002')
      PARAMETER (RCOM_BDENABLEW = X'8004')
      PARAMETER (RCOM_REQREMOTE = 16)
      PARAMETER (RCOM_ACCREMOTE = 8)
      PARAMETER (RCOM_ENALOCAL = 4)
      PARAMETER (RCOM_RESTART_VCP = X'8000')
      PARAMETER (RCOM_RESTART_ELEV = X'8000')
      PARAMETER (RCOM_AUXGEN = X'8004')
      PARAMETER (RCOM_UTIL = X'8002')
      PARAMETER (RCOM_CTLISUE = 2)
      PARAMETER (RCOM_CTLISUD = 4)
      PARAMETER (RCOM_ARCH_START = X'8001')
      PARAMETER (RCOM_ARCH_STOP = X'8002')
      PARAMETER (RCOM_FORCE_RED_STANDBY = 2)
      PARAMETER (RCOM_CHAN_CONTRL = 1)
      PARAMETER (RCOM_CHAN_NONCONTRL = 2)
      PARAMETER (RCOM_SB_ENAB = 2)
      PARAMETER (RCOM_SB_DIS = 4)
C
      INTEGER*4 RDDR_REQUEST
      INTEGER*4 RDDR_STRDATE
      INTEGER*4 RDDR_STPDATE
C
      PARAMETER (RDDR_REQUEST = 1)
      PARAMETER (RDDR_STRDATE = 2)
      PARAMETER (RDDR_STPDATE = 5)
C
      INTEGER*4 RDDR_DATELEN
      INTEGER*4 DREQ_STATUS
      INTEGER*4 DREQ_PERFMAINT
      INTEGER*4 DREQ_CLUTMAP
      INTEGER*4 DREQ_NOTCHMAP
C
      PARAMETER (RDDR_DATELEN = 3)
      PARAMETER (DREQ_STATUS  = X'0081')
      PARAMETER (DREQ_PERFMAINT = X'0082')
      PARAMETER (DREQ_CLUTMAP = X'0084')
      PARAMETER (DREQ_NOTCHMAP = X'0088')
/*
**A304P8
*VERSION: 5
C*******************************************************************
C
C     A304P8.PRM  -  DEFINE RDA TO RPG MESSAGES
C
C*******************************************************************
C
      INTEGER*4 RDS_STATE
      INTEGER*4 RDS_OPERABILITY
      INTEGER*4 RDS_CONTROL
      INTEGER*4 RDS_AUXGEN
      INTEGER*4 RDS_XMITTER
      INTEGER*4 RDS_CALCOR
      INTEGER*4 RDS_BDENABLE
      INTEGER*4 RDS_VCP
      INTEGER*4 RDS_CTLAUTH
      INTEGER*4 RDS_INTRATE
      INTEGER*4 RDS_OPMODE
      INTEGER*4 RDS_ISUSTAT
      INTEGER*4 RDS_CMDACK
      INTEGER*4 RDS_CCTL_STATUS
      INTEGER*4 RDS_BGENDATE
      INTEGER*4 RDS_BGENTIME
      INTEGER*4 RDS_NGENDATE
      INTEGER*4 RDS_NGENTIME
      INTEGER*4 RDS_ALARM
      INTEGER*4 RDS_NUMALARM
      INTEGER*4 RDS_SB
C
      PARAMETER (RDS_STATE = 1)
      PARAMETER (RDS_OPERABILITY = 2)
      PARAMETER (RDS_CONTROL = 3)
      PARAMETER (RDS_AUXGEN = 4)
      PARAMETER (RDS_XMITTER = 5)
      PARAMETER (RDS_CALCOR = 6)
      PARAMETER (RDS_BDENABLE = 7)
      PARAMETER (RDS_VCP = 8)
      PARAMETER (RDS_CTLAUTH = 9)
      PARAMETER (RDS_INTRATE = 10)
      PARAMETER (RDS_OPMODE = 11)
      PARAMETER (RDS_ISUSTAT = 12)
      PARAMETER (RDS_CMDACK = 16 )
      PARAMETER (RDS_CCTL_STATUS = 17)
      PARAMETER (RDS_SB = 18)
      PARAMETER (RDS_BGENDATE = 19)
      PARAMETER (RDS_BGENTIME = 20)
      PARAMETER (RDS_NGENDATE = 21)
      PARAMETER (RDS_NGENTIME = 22)
      PARAMETER (RDS_ALARM = 27)
C
      PARAMETER (RDS_NUMALARM = 14)
C
      INTEGER*4 RDST_STARTUP
      INTEGER*4 RDST_STANDBY
      INTEGER*4 RDST_RESTART
      INTEGER*4 RDST_OPERATE
      INTEGER*4 RDST_PLAYBACK
      INTEGER*4 RDST_OFFOPER
      INTEGER*4 RDOP_OPERABLE
      INTEGER*4 RDOP_MAINTREQD
      INTEGER*4 RDOP_DEGRADED
      INTEGER*4 RDOP_SHUTTING_DOWN
      INTEGER*4 RDOP_INOPERABLE
      INTEGER*4 RDCON_LOCAL
      INTEGER*4 RDCON_REMOTE
      INTEGER*4 RDCON_EITHER
      INTEGER*4 RDCONA_LOCAL
      INTEGER*4 RDCONA_REMOTE
      INTEGER*4 RDISU_ENABLED
      INTEGER*4 RDISU_DISABLED
      INTEGER*4 RDCACK_NO
      INTEGER*4 RDSB_NOTIMP
      INTEGER*4 RDSB_ENAB
      INTEGER*4 RDSB_DIS
      INTEGER*4 RDTP_OFF
      INTEGER*4 RDTP_OK
      INTEGER*4 RDTP_NOT
C
      INTEGER*4 RDMOD_OPERATIONAL,RDMOD_MAINTENANCE
C
      PARAMETER (RDMOD_OPERATIONAL=4,RDMOD_MAINTENANCE=2)
      PARAMETER (RDST_STARTUP = 2)
      PARAMETER (RDST_STANDBY = 4)
      PARAMETER (RDST_RESTART = 8)
      PARAMETER (RDST_OPERATE = 16)
      PARAMETER (RDST_PLAYBACK = 32)
      PARAMETER (RDST_OFFOPER = 64)
      PARAMETER (RDOP_OPERABLE = 2)
      PARAMETER (RDOP_MAINTREQD = 4)
      PARAMETER (RDOP_DEGRADED = 8)
      PARAMETER (RDOP_SHUTTING_DOWN = 16)
      PARAMETER (RDOP_INOPERABLE = 32)
      PARAMETER (RDCON_LOCAL = 2)
      PARAMETER (RDCON_REMOTE = 4)
      PARAMETER (RDCON_EITHER = 8)
      PARAMETER (RDCONA_LOCAL = 2)
      PARAMETER (RDCONA_REMOTE = 4)
      PARAMETER (RDISU_ENABLED = 2)
      PARAMETER (RDISU_DISABLED = 4)
      PARAMETER (RDCACK_NO = 0 )
      PARAMETER (RDSB_NOTIMP = 0)
      PARAMETER (RDSB_ENAB = 2)
      PARAMETER (RDSB_DIS = 4)
      PARAMETER (RDTP_OFF = 1)
      PARAMETER (RDTP_OK  = 3)
      PARAMETER (RDTP_NOT = 0)
C
      INTEGER*4 RDML_SIZE
      INTEGER*4 RDML_MAXMSG
      INTEGER*4 RDML_MSGSEC
      INTEGER*4 RDML_FSIZE
C
      PARAMETER (RDML_SIZE = 1)
      PARAMETER (RDML_MAXMSG = 20)
      PARAMETER (RDML_MSGSEC = (2380+255)/256)
      PARAMETER (RDML_FSIZE  = RDML_MAXMSG*RDML_MSGSEC)
C
      INTEGER*4 RDLB_SIZE
      INTEGER*4 RDLB_DATA
C
      PARAMETER (RDLB_SIZE = 1)
      PARAMETER (RDLB_DATA = 2)
/*
**A304P9
*VERSION: 1
C*********************************************************************
C
C     A304P9  -  Volume Coverage Pattern Information
C
C*********************************************************************
C
      INTEGER*4 WAV_UNKNOWN
      INTEGER*4 WAV_CS
      INTEGER*4 WAV_CD
      INTEGER*4 WAV_CDBATCH
      INTEGER*4 WAV_BATCH
C
      PARAMETER (WAV_UNKNOWN = 0)
      PARAMETER (WAV_CS = 1)
      PARAMETER (WAV_CD = 2)
      PARAMETER (WAV_CDBATCH = 3)
      PARAMETER (WAV_BATCH = 4)
/*            
**A304C2
*VERSION: 0
********************************************************************
*
*    SUPPORTS CLUTTER FILTER CONTROL PRODUCT GENERATION
*
********************************************************************
C
C...  Queued parameters used in Clutter Filter Control Product task.
C
      INTEGER*4 BM_RECEIVED
      PARAMETER (BM_RECEIVED = 1000)
C
      INTEGER*4 NW_RECEIVED
      PARAMETER (NW_RECEIVED = 2000)
C
C...  Clutter Filter Control Product task name.
C
      CHARACTER*8 CLUTPROD_NAME
      PARAMETER (CLUTPROD_NAME = 'CLUTPROD')
C
C...  Define various flags used.
C
      LOGICAL NW_MAP_REQUEST_PENDING, BYPASS_MAP_REQUEST_PENDING
      LOGICAL PRODUCT_REQUEST_PENDING, GENERATE_ALL_PRODUCTS
      LOGICAL UNSOLICITED_NW_RECEIVED
C
      COMMON/CLUTINFO/ NW_MAP_REQUEST_PENDING
      COMMON/CLUTINFO/ BYPASS_MAP_REQUEST_PENDING
      COMMON/CLUTINFO/ PRODUCT_REQUEST_PENDING
      COMMON/CLUTINFO/ GENERATE_ALL_PRODUCTS
      COMMON/CLUTINFO/ UNSOLICITED_NW_RECEIVED
/*
**A304CA
*VERSION: 0
C*********************************************************************
C
C     A304CA  -  Message log generation information
C
C*********************************************************************
      CHARACTER*60 ERRPHR
      INTEGER UCP_REQ_STATMSG
      COMMON /A304CA/ERRPHR,UCP_REQ_STATMSG
/*
**A304CF
*VERSION: 0
*.******************************************************************
*.
*.     CLUTTER FILTER CONTROL PRODUCT TASK COMMON
*.
*.******************************************************************
C
C...  Timers used in Clutter Filter Control Product task.
C
      INTEGER*4 NW_MAP_NOT_COMING
      PARAMETER (NW_MAP_NOT_COMING = 100)
C
      INTEGER*4 BYPASS_MAP_NOT_COMING
      PARAMETER (BYPASS_MAP_NOT_COMING = 200)
C
      INTEGER*4 WAIT_FOR_MAP
      PARAMETER (WAIT_FOR_MAP = 660000)
C
C...  Define Request/Response reason codes.
C
      INTEGER*4 PROD_NOT_GENERATED
      PARAMETER (PROD_NOT_GENERATED = 2)
C
      INTEGER*4 ILLEGAL_REQUEST
      PARAMETER (ILLEGAL_REQUEST = 5)
C
      INTEGER*4 MEMORY_LOADSHED
      PARAMETER (MEMORY_LOADSHED = 6)
C
      INTEGER*4 ORPGRDA_TYPE_CONFIG
      INTEGER*4 ORPGRDA_LEGACY_CONFIG
      PARAMETER (ORPGRDA_LEGACY_CONFIG = 0)
      INTEGER*4 ORPGRDA_ORDA_CONFIG
      PARAMETER (ORPGRDA_ORDA_CONFIG = 1)
      INTEGER*4 ORPGRDA_DATA_NOT_FOUND
      PARAMETER (ORPGRDA_DATA_NOT_FOUND = -9999)
C
C...  Define error messages for STATMON.
C
      INTEGER*4    ERRORPHR_I4(16,2)
      CHARACTER*64 ERRORPHR(2)
      CHARACTER*60 ERROR_TEXT1, ERROR_TEXT2
      EQUIVALENCE (ERRORPHR_I4(1,1), ERRORPHR(1))
      EQUIVALENCE (ERROR_TEXT1, ERRORPHR(1)(5:5))
      EQUIVALENCE (ERROR_TEXT2, ERRORPHR(2)(5:5))
      DATA ERROR_TEXT1
     >     /'Clutter Filter Notchwidth Map is Currently UNAVAILABLE'/
      DATA ERROR_TEXT2
     >     /'Clutter Filter Bypass Map is Currently UNAVAILABLE'/
C
      LOGICAL FILTER_STATUS(2)
C
C...  Product buffer size in words.
C
      INTEGER*4 PROD_BUFSIZE
      PARAMETER (PROD_BUFSIZE = 8000)
C
C...  Define the channel types.
C
      INTEGER*4 SURVEILLANCE_CHANNEL, DOPPLER_CHANNEL
      PARAMETER (SURVEILLANCE_CHANNEL = 0, DOPPLER_CHANNEL = 1)
C
C...  Define Product Request List.
C
      INTEGER*4 MIN_REQUEST, MAX_REQUEST, REQUEST_BIAS
      INTEGER*4 LARGEST_REQUEST
      PARAMETER (MIN_REQUEST = 2, MAX_REQUEST = 5)
      PARAMETER (REQUEST_BIAS = 3000, LARGEST_REQUEST = 32)
C
      INTEGER*4 MAX_PRODUCTS
      PARAMETER (MAX_PRODUCTS = 4)

      INTEGER*4 MAX_PRODUCTS_ORDA
      PARAMETER (MAX_PRODUCTS_ORDA = 5)
C
C     DEFINE LOCAL COPIES OF DATE/TIME AND HEADER DATA
C
      INTEGER*4 LOC_RPGWMODE, LOC_RPGVCP, LOC_RPGVSNUM
      INTEGER*4 LOC_NWM_GENTIME, LOC_NWM_GENDATE
      INTEGER*4 LOC_CLM_GENTIME, LOC_CLM_GENDATE
      INTEGER*4 LOC_BPM_GENTIME, LOC_BPM_GENDATE
      INTEGER*4 LOC_BPM_GENTIME_ORDA, LOC_BPM_GENDATE_ORDA
C
      INTEGER*2 REQUEST_LIST(MIN_REQUEST:MAX_REQUEST)
C
      COMMON/REQUEST/ REQUEST_LIST
C
      COMMON/LOC_HDR_DATA/ LOC_RPGWMODE, LOC_RPGVCP, LOC_RPGVSNUM
      COMMON/LOC_HDR_DATA/ LOC_NWM_GENTIME, LOC_NWM_GENDATE
      COMMON/LOC_HDR_DATA/ LOC_CLM_GENTIME, LOC_CLM_GENDATE
      COMMON/LOC_HDR_DATA/ LOC_BPM_GENTIME, LOC_BPM_GENDATE
      COMMON/LOC_HDR_DATA/ LOC_BPM_GENTIME_ORDA, LOC_BPM_GENDATE_ORDA
C
      COMMON/STATUS/ FILTER_STATUS
C
      COMMON/ORPGRDA_CONFIG/ ORPGRDA_TYPE_CONFIG
/*
**A304CNWM
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304CNWM
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/25/00     0             S. SMITH        
*.    07/30/03     1             CHRIS CALVERT   ADDED ORDA        
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   THE CLUTTER FILTER MAP 
*.
*.  INTERNAL TABLES/WORK SPACE:
*.
*.     NAME              TYPE        DESCRIPTION
*.     ---------------   ------     -----------------------------------
*.     NWM_RADHW_LEGACY   I*4        HALFWORDS PER RADIAL SEGMENT (LEGACY)
*.     CLM_RADHW_ORDA     I*4        HALFWORDS PER RADIAL SEGMENT (ORDA)
*.     NWM_MAXRAD_LEGACY  I*4        MAXIMUM NUMBER RADIAL SEGMENTS (LEGACY)
*.     CLM_MAXRAD_ORDA    I*4        MAXIMUM NUMBER RADIAL SEGMENTS (ORDA)
*.     NWM_MAXSEG_LEGACY  I*4        MAXIMUM NUMBER ELEVATION SEGMENTS (LEGACY)
*.     CLM_MAXSEG_ORDA    I*4        MAXIMUM NUMBER ELEVATION SEGMENTS (ORDA)
*.     NWM_ASEGHW_LEGACY  I*4        HALFWORDS IN CLUTTER MAP (LEGACY)
*.     CLM_ASEGHW_ORDA    I*4        HALFWORDS IN CLUTTER MAP (ORDA)
*.     NWM_MAP_LEGACY     I*2        CLUTTER CLUTTER MAP (LEGACY)
*.     CLM_MAP_ORDA       I*2        CLUTTER CLUTTER MAP (ORDA)
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.********************************************************************
      INTEGER*4 READ_CLUTTER_MAP
      PARAMETER (READ_CLUTTER_MAP = 0 )

C
C...  SUPPORT UP TO 16 RANGE ZONES
C
      INTEGER*4 NWM_RADHW_LEGACY
      PARAMETER (NWM_RADHW_LEGACY = 32)
C
C...  SUPPORT UP TO 20 RANGE ZONES
C
      INTEGER*4 CLM_RADHW_ORDA, CLM_MAXZONES_ORDA
      PARAMETER (CLM_RADHW_ORDA = 40)
      PARAMETER (CLM_MAXZONES_ORDA = 20)
C
      INTEGER*4 NWM_MAXRAD_LEGACY
      PARAMETER (NWM_MAXRAD_LEGACY = 256)
      INTEGER*4 CLM_MAXRAD_ORDA
      PARAMETER (CLM_MAXRAD_ORDA = 360)
C
      INTEGER*4 NWM_MAXSEG_LEGACY
      PARAMETER (NWM_MAXSEG_LEGACY = 2)
      INTEGER*4 CLM_MAXSEG_ORDA
      PARAMETER (CLM_MAXSEG_ORDA = 5)
C
      INTEGER*4 NWM_ASEGHW_LEGACY
      PARAMETER (NWM_ASEGHW_LEGACY = NWM_RADHW_LEGACY *
     >           NWM_MAXRAD_LEGACY * NWM_MAXSEG_LEGACY)
      INTEGER*4 CLM_ASEGHW_ORDA
      PARAMETER (CLM_ASEGHW_ORDA = (1+CLM_RADHW_ORDA) *
     >   CLM_MAXRAD_ORDA * CLM_MAXSEG_ORDA)
C
      INTEGER*2 NWM_GENDATE, NWM_GENTIME
      INTEGER*2 CLM_GENDATE, CLM_GENTIME
      INTEGER*2 NWM_MAP_LEGACY(NWM_ASEGHW_LEGACY)  
      INTEGER*2 CLM_MAP_ORDA(CLM_ASEGHW_ORDA)  
      LOGICAL   NWM_AVAIL_LEGACY, CLM_AVAIL_ORDA

      COMMON /CNWM/ NWM_AVAIL_LEGACY, NWM_GENDATE
      COMMON /CNWM/ NWM_GENTIME, NWM_MAP_LEGACY
      COMMON /CLM/  CLM_AVAIL_ORDA, CLM_GENDATE
      COMMON /CLM/  CLM_GENTIME, CLM_MAP_ORDA
/*
**A304CBPM
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304CBPM
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/25/00     0             S. SMITH        
*.    07/30/03     1             CHRIS CALVERT   ADDED ORDA        
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   THE CLUTTER FILTER BYPASS MAP.
*.
*.  INTERNAL TABLES/WORK SPACE:
*.
*.
*.     NAME              TYPE        DESCRIPTION
*.     ---------------   ------     -----------------------------------
*.     CLBY_HDRHW_LEGACY  I*4        HALFWORDS IN HEADER (LEGACY)
*.     CLBY_HDRHW_ORDA    I*4        HALFWORDS IN HEADER (ORDA)
*.     CLBY_RADHW_LEGACY  I*4        HALFWORDS PER RADIAL SEGMENT (LEGACY)
*.     CLBY_RADHW_ORDA    I*4        HALFWORDS PER RADIAL SEGMENT (ORDA)
*.     CLBY_MAXRAD_LEGACY I*4        MAXIMUM NUMBER RADIAL SEGMENTS (LEGACY)
*.     CLBY_MAXRAD_ORDA   I*4        MAXIMUM NUMBER RADIAL SEGMENTS (ORDA)
*.     CLBY_MAXSEG_LEGACY I*4        MAXIMUM NUMBER ELEVATION SEGMENTS (LEGACY)
*.     CLBY_MAXSEG_ORDA   I*4        MAXIMUM NUMBER ELEVATION SEGMENTS (ORDA)
*.     CLBY_ASEGHW_LEGACY I*4        HALFWORDS IN CLUTTER MAP (LEGACY)
*.     CLBY_ASEGHW_ORDA   I*4        HALFWORDS IN CLUTTER MAP (ORDA)
*.     CLBY_MAXKM         i*4        NUMBER KM PER RADIAL SEGMENT
*.     CLBY_MAP_LEGACY    I*2        CLUTTER CLUTTER MAP
*.     CLBY_MAP_ORDA      I*2        CLUTTER CLUTTER MAP
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.********************************************************************
      INTEGER*4 READ_BYPASS_MAP
      PARAMETER (READ_BYPASS_MAP = 1 )

      INTEGER*4 CLBY_HDRHW_LEGACY
      PARAMETER (CLBY_HDRHW_LEGACY = 1)

      INTEGER*4 CLBY_HDRHW_ORDA
      PARAMETER (CLBY_HDRHW_ORDA = 3)

      INTEGER*4 CLBY_RADHW_LEGACY
      PARAMETER (CLBY_RADHW_LEGACY = 32)
      INTEGER*4 CLBY_RADHW_ORDA
      PARAMETER (CLBY_RADHW_ORDA = 32)
C
      INTEGER*4 CLBY_MAXRAD_LEGACY
      PARAMETER (CLBY_MAXRAD_LEGACY = 256)
      INTEGER*4 CLBY_MAXRAD_ORDA
      PARAMETER (CLBY_MAXRAD_ORDA = 360)
C
      INTEGER*4 CLBY_MAXSEG_LEGACY
      PARAMETER (CLBY_MAXSEG_LEGACY = 2)
C
      INTEGER*4 CLBY_MAXSEG_ORDA
      PARAMETER (CLBY_MAXSEG_ORDA = 5)
C
      INTEGER*4 CLBY_MAXKM 
      PARAMETER (CLBY_MAXKM = 512)
C
      INTEGER*4 CLBY_SEGHW_LEGACY
      PARAMETER (CLBY_SEGHW_LEGACY =
     >           CLBY_RADHW_LEGACY * CLBY_MAXRAD_LEGACY)
      INTEGER*4 CLBY_SEGHW_ORDA
      PARAMETER (CLBY_SEGHW_ORDA = CLBY_RADHW_ORDA * CLBY_MAXRAD_ORDA)
C
      INTEGER*4 CLBY_ASEGHW_LEGACY
      PARAMETER (CLBY_ASEGHW_LEGACY = 
     >           CLBY_SEGHW_LEGACY*CLBY_MAXSEG_LEGACY)
      INTEGER*4 CLBY_ASEGHW_ORDA
      PARAMETER (CLBY_ASEGHW_ORDA = 
     >           CLBY_SEGHW_ORDA*CLBY_MAXSEG_ORDA)
C
      INTEGER*2 BPM_GENDATE_LEGACY, BPM_GENTIME_LEGACY
      INTEGER*2 BPM_GENDATE_ORDA, BPM_GENTIME_ORDA
      INTEGER*2 CLBY_MAP_LEGACY(CLBY_HDRHW_LEGACY+
     >                          CLBY_MAXSEG_LEGACY+CLBY_ASEGHW_LEGACY)  
      INTEGER*2 CLBY_MAP_ORDA(CLBY_HDRHW_ORDA+
     >                        CLBY_MAXSEG_ORDA+CLBY_ASEGHW_ORDA)  
      LOGICAL   BPM_AVAIL_LEGACY, BPM_AVAIL_ORDA
C
      COMMON /CBPM_LEGACY/ BPM_AVAIL_LEGACY, BPM_GENDATE_LEGACY
      COMMON /CBPM_LEGACY/ BPM_GENTIME_LEGACY, CLBY_MAP_LEGACY
      COMMON /CBPM_ORDA/   BPM_AVAIL_ORDA, BPM_GENDATE_ORDA
      COMMON /CBPM_ORDA/   BPM_GENTIME_ORDA, CLBY_MAP_ORDA
/*
**A304DA
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DA
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   DATA RELEVANT TO THE NINE-POINT AVERAGE COMPUT-
*.                   ATION IN THE EILTS APPROACH TO VELOCITY
*.                   DEALIASING
*.
*.  INTERNAL TABLES/WORK SPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     NUM_IN_AVG       I*2        NUMBER IN NINE-POINT AVERAGE
*.     AVG_VEL          REAL       AVERAGE OF THE VELOCITIES
*.     SAVE_GD_VEL      I*2        VELOCITIES USED IN THE AVERAGE
*.     NUM9PT_LKBK      I*4        SEE A309ADPT.INC,  **A3CD70_RADAZVD
*.     NUM9PT_LKAHD     I*4        SEE A309ADPT.INC,  **A3CD70_RADAZVD
*.     INTEGER_AVERAGE  I*2        THE 9 POINT CONVERTED TO TYPE
*.                                 INTEGER
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.********************************************************************
      INTEGER*2  NUM_IN_AVG,SAVE_GD_VEL(NUM9PT_LKBK+NUM9PT_LKAHD)
      INTEGER*2  INTEGER_AVERAGE
      REAL      AVG_VEL
      COMMON  /A304DA/ AVG_VEL,NUM_IN_AVG,SAVE_GD_VEL
/*
**A304DB
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DB
*.
*.    INCLUDE FILE VERSION: 1
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.    04/03/95     1             S. SMITH        CCR NA94-29203
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   PREVIOUS AZIMUTH INFORMATION USED IN THE EILTS
*.                   APPROACH TO VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.     NAME                 TYPE   DESCRIPTION
*.     -------------------  ----   ---------------------------------
*.     LSTGD_DPBIN_PREVAZ   I*4    LAST GOOD VELOCITY ON THE PREVIOUS
*.                                 SAVED RADIAL
*.     FSTGD_DPBIN_PREVAZ   I*4    FIRST GOOD VELOCITY ON THE PREVIOUS
*.                                 SAVED RADIAL
*.     MAX_SIZE             I*4    MAXIMUM SIZE OF PREVIOUS SAVED
*.                                 RADIAL
*.     VEL_PREVAZ           I*2    PREVIOUS SAVED RADIAL VELOCITY DATA
*.     GOOD_PREV_RADIAL    I*4     INDEX INTO THE VEL_PREVAZ TABLE
*.                                 INDICATING GOOD RADIAL DATA
*.     BAD_PREV_RADIAL     I*4     INDEX INTO THE VEL_PREVAZ TABLE
*.                                 INDICATING BAD RADIAL DATA
*.     STATUS              I*4     INDEX CONTAINING WHETHER THE
*.                                 THE RADIAL DATA IS GOOD OR BAD
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.********************************************************************
      INTEGER*4  MAX_SIZE,LSTGD_DPBIN_PREVAZ,FSTGD_DPBIN_PREVAZ
      INTEGER*4  GOOD_PREV_RADIAL,BAD_PREV_RADIAL,STATUS
      INTEGER*4  OPTIMAL_LENGTH
      PARAMETER (GOOD_PREV_RADIAL=2,BAD_PREV_RADIAL=1)
      PARAMETER(MAX_SIZE=1200)
      INTEGER*2 VEL_PREVAZ(MAX_SIZE,2)
      COMMON  /A304DB/ VEL_PREVAZ,FSTGD_DPBIN_PREVAZ,
     >                 LSTGD_DPBIN_PREVAZ,STATUS
/*
**A304DC
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DC
*.
*.    INCLUDE FILE VERSION: 1
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.    04/18/95     1             S. SMITH        CCR NA94-29203
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   NYQUIST CO-INTERVAL DEFINITIONS USED IN EILTS
*.                   APPROACH TO VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     NUM_INTRVL       I*2         MAXIMUM NUMBER OF NYQUIST
*.                                  INTERVALS ALLOWED
*.     NYQ_INTRVL       I*2         THE NYQUIST INTERVAL
*.     NYVEL            I*2         THE NYQUIST VELOCITY
*.     OLD_NYVEL        I*2         THE PREVIOUS RADIAL NYQUIST
*.                                  VELOCITY
*.     NUM_INTRVL_CHK   I*2         NUMBER OF NYQUIST INTERVALS
*.                                  USED FOR DEALIASING
*.     NYQ_MULT         I*2         ARRAY OF NYQUIST VELOCITIES
*.                                  IN EACH NYQUIST CO-INTERVAL
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.********************************************************************
      INTEGER*2  NUM_INTRVL,NYQ_INTRVL,NUM_INTRVL_CHK
      PARAMETER(NUM_INTRVL=6)
      INTEGER*2  NYVEL, OLD_NYVEL, NYQ_MULT(NUM_INTRVL)
      COMMON  /A304DC/ NYQ_MULT,NYQ_INTRVL,NUM_INTRVL_CHK
      COMMON  /A304DC/ NYVEL, OLD_NYVEL
/*
**A304DD
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DD
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   RADIAL BIN INFORMATION USED IN EILTS APPROACH TO
*.                   VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     BINNUM           I*4        CURRENT SAMPLE BIN LOCATION ALONG
*.                                 THE RADIAL
*.     LST_BIN_GDVEL    I*4        BIN LOCATION OF LAST GOOD VELOCITY
*.                                 ON THE CURRENT RADIAL
*.     BAD              I*4        VALUE INDICATING VELOCITY IS BAD
*.     BELOW_THR        I*4        VALUE INDICATING VELOCITY IS BELOW
*.                                 SNR THRESHOLD
*.     FST_GOOD_DPBIN   I*4        FIRST GOOD BIN ON THE CURRENT
*.                                 RADIAL
*.     LST_GOOD_DPBIN   I*4        LAST GOOD BIN ON THE CURRENT RADIAL
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICITIONS: NONE
*.
*.********************************************************************
      INTEGER  BINNUM,LST_BIN_GDVEL,BAD,BELOW_THR
      PARAMETER(BAD=1,BELOW_THR=0)
      INTEGER  FST_GOOD_DPBIN,LST_GOOD_DPBIN
      COMMON  /A304DD/ FST_GOOD_DPBIN,LST_GOOD_DPBIN,BINNUM,
     >                 LST_BIN_GDVEL
/*
**A304DE
*VERSION: 1
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DE
*.
*.    INCLUDE FILE VERSION: 1
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.    08/29/91     1    92372    D. ERICKSON
*.
*.  CALLING SEQUENCE: N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   REJECTED VELOCITY DATA USING IN EILTS APPROACH TO
*.                   VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     CON_BINS_REJ     I*4        NUMBER OF CONSECUTIVE BINS REJECTED
*.     MAX_CON_REJ      I*4        MAXIMUM NUMBER OF BINS REJECTED
*.                                 ALLOWED
*.     SAVE_VELTMP      I*2        ARRAY OF REJECTED VELOCITIES
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.
*.********************************************************************
      INTEGER  CON_BINS_REJ,MAX_CON_REJ
      PARAMETER(MAX_CON_REJ=10)
      INTEGER*2  SAVE_VELTMP(MAX_CON_REJ)

      INTEGER  MAX_BINS_DELETED, BIN_NUMBER, VELOCITY
      PARAMETER( BIN_NUMBER = 1 )
      PARAMETER( VELOCITY = 2 )
      PARAMETER( MAX_BINS_DELETED = 1024)
      INTEGER*2  DELETED_VEL(VELOCITY, MAX_BINS_DELETED)
      INTEGER*2  NUM_DELETED
      COMMON  /A304DE/ CON_BINS_REJ,SAVE_VELTMP,DELETED_VEL
      COMMON  /A304DE/ NUM_DELETED
/*
**A304DF
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DF
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.
*.  CALLING SEQUENCE:  N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   VELOCITY JUMP INFORMATION USED IN EILTS APPROACH
*.                   TO VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     BIN_LRG_AZJUMP   I*4        STARTING BIN LOCATION OF LARGE
*.                                 VELOCITY JUMP IN AZIMUTH
*.     NUM_JUMP_CONRAD  I*4        NUMBER OF RADIAL WITH LARGE
*.                                 VELOCITY JUMPS
*.     VEL_JUMP         LOG        FLAG INDICATING WHETHER A LARGE
*.                                 VELOCITY JUMP EXISTS ON THE CURRENT
*.                                 RADIAL
*.     JMP_STBIN        I*4        VELOCITY JUMP STARTING BIN
*.     OLD_JMPDIR       I*4        DIRECTION OF VELOCITY JUMP
*.     NEW_JMPDIR       I*4        DIRECTION OF VELOCITY JUMP
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.********************************************************************
      INTEGER  BIN_LRG_AZJUMP,NUM_JUMP_CONRAD
      INTEGER  JMP_STBIN, NEW_JMPDIR, OLD_JMPDIR
      LOGICAL  VEL_JUMP
      COMMON  /A304DF/ BIN_LRG_AZJUMP,VEL_JUMP,NUM_JUMP_CONRAD
      COMMON  /A304DF/ JMP_STBIN, OLD_JMPDIR, NEW_JMPDIR
/*
**A304DG
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DG
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.
*.  CALLING SEQUENCE:  N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE COMMON BLOCK CONTAINING
*.                   DERIVED THRESHOLD DATA USED IN EILTS APPROACH
*.                   TO VELOCITY DEALIASING
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     VELJMP_MXAZ      I*4        THE MAXIMUM VELOCITY DIFFERENCE
*.                                 IN AZIMUTH ALLOWED IN THE FINAL
*.                                 JUMP CHECK
*.     VELJMP_MXRAD     I*4        THE MAXIMUM VELOCITY DIFFERENCE
*.                                 IN RANGE ALLOWED IN THE FINAL
*.                                 JUMP CHECK
*.     TH_DEF_VEL_DIFF  I*4        HAS SAME VALUE AS TH_MAX_STDEV
*.     TH_MAX_STDEV     I*4        THE MAXIMUM STANDARD DEVIATION OF
*.                                 VELOCITIES IN THE NINE-POINT
*.                                 AVERAGE
*.     TH_DIFF_UNFOLD_RELAX I*4    THRESHOLD DERIVED FROM
*.                                 TH_DIFF_UNFOLD
*.     SOUNDING_AVAIL   LOG        FLAG INDICATING WIND INFORMATION
*.                                 AVAILABLE FOR DEALIASING
*.     TOL_FSTCHK       I*4        TH_DIFF_UNFOLD SCALED BY DOPPLER
*.                                 RESOLUTION
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.
*.********************************************************************
      INTEGER  TH_DIFF_UNF_RELAX,TH_MAX_STDEV,TOL_FSTCHK
      INTEGER  VELJMP_MXAZ,VELJMP_MXRAD,TH_DEF_VEL_DIFF
      LOGICAL  SOUNDING_AVAIL
      COMMON /A304DG/ TH_DIFF_UNF_RELAX,TH_MAX_STDEV,TH_DEF_VEL_DIFF
      COMMON /A304DG/ VELJMP_MXAZ,VELJMP_MXRAD,SOUNDING_AVAIL
      COMMON /A304DG/ TOL_FSTCHK
/*
**A304DH
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DH
*.
*.    INCLUDE FILE VERSION: 1
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    09/15/89     0             S. SMITH        ITWR BUILD 1
*.    04/29/94     1             S. SMITH        INCREASE ARRAY SIZES
*.
*.  CALLING SEQUENCE:  N/A
*.
*.  MODULE FUNCTION: DECLARES AND DEFINES THE MINIMUM AND MAXIMUM
*.                   DATA LEVELS FOR CLIPPING.  ALSO DEFINES THE
*.                   SQUARED VALUE OF EACH DATA LEVEL
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.
*.
*.     NAME             TYPE        DESCRIPTION
*.     ---------------  ------     -----------------------------------
*.     SQUARE           I*4        ARRAY CONTAINING THE SQUARE OF THE
*.                                 VELOCITY
*.     BIAS_VEL         I*2        BIASED RAW VELOCITY DATA
*.     UNBIAS_VEL       I*2        UNBIASED RAW VELOCITY DATA
*.     BIASED_ZERO      I*4        ZERO VELOCITY IN BIASED UNITS
*.     I                I*4        LOCAL LOOP COUNTER
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.********************************************************************

      INTEGER*2 BIAS_VEL(0:256),UNBIAS_VEL(0:722)
      INTEGER BIASED_ZERO, SQUARE(0:722)
      PARAMETER (BIASED_ZERO = 362)
      COMMON/A304DH/ SQUARE, BIAS_VEL, UNBIAS_VEL
/*
**A304DI
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DI
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    02/16/95     0  NA94-29203 R. RIERSON      LOCAL COPY OF ADAPT
*.
*.  CALLING SEQUENCE:  N/A
*.
*.  MODULE FUNCTION: PROVIDES LOCAL COPY OF ADAPTATION DATA FOR
*.                   VELOCITY DEALIASING MODULES.
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.********************************************************************
      INTEGER  NUM_BIN_FSTCHK,
     +         NUM_REP_LKAHD,
     +         NUM_REP_LKBK,
     +         NUM_LKBK,
     +         NUM_LKFOR,
     +         TH_CONBIN_REJ,
     +         TH_MAX_CONAZJMP,
     +         TH_MXMISS,
     +         NUM_REUNF_PRAZS,
     +         TH_MXBINS_JMP
      REAL     TH_DIFF_UNFOLD
      INTEGER  TH_BINS_LRG_AZJMP,
     +         NUM_REUNF_CAZS
      REAL     TH_VEL_JMP_FRAD,
     +         TH_VEL_JMP_FAZ
      REAL     TH_SCL_STDEV,
     +         TH_SCL_DIFF_UNFOLD
      INTEGER ENV_SOUND_TO
      LOGICAL USE_SOUNDINGS_FLAG
      LOGICAL REP_REJECTED_VEL
      LOGICAL DISABLE_RADAZ_DEALIASING
C
      COMMON /A304DI/ NUM_REP_LKAHD,NUM_REP_LKBK
      COMMON /A304DI/ NUM_LKBK,NUM_LKFOR,TH_CONBIN_REJ
      COMMON /A304DI/ TH_MXMISS,NUM_REUNF_PRAZS,NUM_REUNF_CAZS
      COMMON /A304DI/ TH_DIFF_UNFOLD,TH_MXBINS_JMP
      COMMON /A304DI/ TH_VEL_JMP_FRAD,TH_VEL_JMP_FAZ,TH_SCL_STDEV
      COMMON /A304DI/ TH_MAX_CONAZJMP,TH_SCL_DIFF_UNFOLD
      COMMON /A304DI/ TH_BINS_LRG_AZJMP,NUM_BIN_FSTCHK
      COMMON /A304DI/ ENV_SOUND_TO,USE_SOUNDINGS_FLAG
      COMMON/ A304DI/ REP_REJECTED_VEL,DISABLE_RADAZ_DEALIASING
/*
**A304DJ
*VERSION: 0
*.  ****************************************************************
*.          I N C L U D E   F I L E   P R O L O G U E
*.
*.
*.    INCLUDE FILE NAME: A304DJ
*.
*.    INCLUDE FILE VERSION: 0
*.
*.    INCLUDE FILE LANGUAGE: FORTRAN
*.
*.    CHANGE HISTORY:
*.
*.    DATE        RV    SPR#     PROGRAMMER      NOTES
*.    -------     --    ----     -------------   -------------------
*.    02/16/95     0  NA94-29203 S. SMITH
*.
*.  CALLING SEQUENCE:  N/A
*.
*.  MODULE FUNCTION: COMMON AREA FOR COMMONLY USED FLAGS IN SUPPORT
*.                   OF VELOCITY DEALIASING.
*.
*.  INTERNAL TABLES/WORKSPACE:
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  NONE
*.
*.********************************************************************
      LOGICAL  NO_CHK_FLG, NOT_WIBINS_FLG, JMPCHK
C
      COMMON /A304DJ/ NO_CHK_FLG, NOT_WIBINS_FLG, JMPCHK
/*
