# RCS info
# $Author: ccalvert $
# $Locker:  $
# $Date: 2012/07/31 15:41:45 $
# $Id: make.cflib,v 1.9 2012/07/31 15:41:45 ccalvert Exp $
# $Revision: 1.9 $
# $State: Exp $

# This is the generic "include" make description file for building a
# library, using C source files, Fortran source files, or a combination
# of C and Fortran source files.
#
# The library-specific makefile that includes this file must define the
# usual make variables (refer to a template file), but especially 
# the LIB_CSRCS, LIB_FSRCS, and LIB_TARGET variables.  For example:
#
# LIB_CSRCS =	en_lib.c \
#		en_libevts.c \
#		en_libsock.c
#
#
# LIB_TARGET = en
#
# For a Fortran-only library, define the DEPENDFILE make variable to be
# empty:
#
# DEPENDFILE =
#
ifndef LIBT_TARGET

LIB_OBJS = $(patsubst %.c, $(ARCH)/%.$(SHROBJ_EXT), $(LIB_CSRCS)) \
	$(patsubst %.ftn, $(ARCH)/%.$(SHROBJ_EXT), $(LIB_FSRCS))   \
	$(patsubst %.cpp, $(ARCH)/%.$(SHROBJ_EXT), $(LIB_CPPSRCS)) \

LIB_DEBUGOBJS = $(patsubst %.$(SHROBJ_EXT), %.$(DBGOBJ_EXT), $(LIB_OBJS))

liball:: $(ARCH)/lib$(LIB_TARGET).$(LIB_EXT)
liball:: $(ARCH)/lib$(LIB_TARGET).a


$(LIB_TARGET): liball

# NOTE: use SHRDLIBLD_SEARCHLIBS to specify additional libraries to be
#       searched when resolving references (e.g., networking libraries)
$(ARCH)/lib$(LIB_TARGET).$(LIB_EXT): $(LIB_OBJS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(LD) -o $@~ $(SHRDLIBLDFLAGS) $(LIB_OBJS) $(SHRDLIBLD_SEARCHLIBS) ;\
	$(RM) $@ ;\
	$(MV) $@~ $@

clean::
	$(RM) $(ARCH)/lib$(LIB_TARGET).$(LIB_EXT) $(ARCH)/*.$(SHROBJ_EXT)

$(ARCH)/lib$(LIB_TARGET).a: $(LIB_DEBUGOBJS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(RM) $@ ;\
	$(AR) $@ $(LIB_DEBUGOBJS) ;\
	$(RANLIB) $@

clean::
	$(RM) $(ARCH)/lib$(LIB_TARGET).a $(ARCH)/*.$(DBGOBJ_EXT)

# shared library ...
libinstall:: $(ARCH)/lib$(LIB_TARGET).$(LIB_EXT) 
	@if [ -d $(LIBDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(LIBDIR)); fi
	$(INSTALL) $(INSTSHLIBFLAGS) $< $(LIBDIR)/$(<F)

libinstall:: $(ARCH)/lib$(LIB_TARGET).a
	@if [ -d $(LIBDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(LIBDIR)); fi
	$(INSTALL) $(INSTLIBFLAGS) $< $(LIBDIR)/$(<F) ;\
	$(RANLIB) $(LIBDIR)/$(<F)

# We cannot "makedepend" Fortran source files ... a Fortran-only
# library should have no DEPENDFILE defined ...
depend::
ifdef DEPENDFILE
	touch $(DEPENDFILE)
	$(DEPEND) $(SYS_DEPENDFLAGS) $(DEPENDFLAGS) -f $(DEPENDFILE) -s "# DO NOT DELETE generated by makedepend" -- $(CCFLAGS) -- $(LIB_CSRCS)
endif


#  Threaded targets
else    

#   Threaded objects
LIB_OBJS = $(patsubst %.c, $(ARCH)/%.$(SHROBJT_EXT), $(LIB_CSRCS)) \
	$(patsubst %.ftn, $(ARCH)/%.$(SHROBJT_EXT), $(LIB_FSRCS))   \
	$(patsubst %.cpp, $(ARCH)/%.$(SHROBJT_EXT), $(LIB_CPPSRCS)) \

LIB_DEBUGOBJS = $(patsubst %.$(SHROBJT_EXT), %.$(DBGOBJT_EXT), $(LIB_OBJS))

liball:: $(ARCH)/lib$(LIBT_TARGET).$(LIB_EXT)
liball:: $(ARCH)/lib$(LIBT_TARGET).a

$(LIBT_TARGET): liball

# NOTE: use SHRDLIBLD_SEARCHLIBS to specify additional libraries to be
#       searched when resolving references (e.g., networking libraries)
#       threaded versions
$(ARCH)/lib$(LIBT_TARGET).$(LIB_EXT): $(LIB_OBJS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(LD) -o $@~ $(SHRDLIBLDFLAGS) $(LIB_OBJS) $(SHRDLIBLD_SEARCHLIBS) ;\
	$(RM) $@ ;\
	$(MV) $@~ $@

clean::
	$(RM) $(ARCH)/lib$(LIBT_TARGET).$(LIB_EXT) $(ARCH)/*.$(SHROBJT_EXT)	

# NOTE: we do not "ranlib" HP-UX archive libraries ...
$(ARCH)/lib$(LIBT_TARGET).a: $(LIB_DEBUGOBJS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(RM) $@ ;\
	$(AR) $@ $(LIB_DEBUGOBJS) ;\
	$(RANLIB) $@

clean::
	$(RM) $(ARCH)/lib$(LIBT_TARGET).a $(ARCH)/*.$(DBGOBJT_EXT)	


# shared library ... (threaded)
libinstall:: $(ARCH)/lib$(LIBT_TARGET).$(LIB_EXT)
	@if [ -d $(LIBDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(LIBDIR)); fi
	$(INSTALL) $(INSTSHLIBFLAGS) $< $(LIBDIR)/$(<F)

libinstall:: $(ARCH)/lib$(LIBT_TARGET).a
	@if [ -d $(LIBDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(LIBDIR)); fi
	$(INSTALL) $(INSTLIBFLAGS) $< $(LIBDIR)/$(<F) ;\
	$(RANLIB) $(LIBDIR)/$(<F)

endif



