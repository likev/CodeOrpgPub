# RCS info
# $Author: steves $
# $Locker:  $
# $Date: 2014/02/28 19:55:45 $
# $Id: make.fbin,v 1.11 2014/02/28 19:55:45 steves Exp $
# $Revision: 1.11 $
# $State: Exp $
#

# This is the generic "include" make description file for building a
# Fortran binary file.  This description file supports mixed C/Fortran
# code (i.e., C object files linked into a Fortran binary).
#
# The binary-specific makefile that includes this file must define the
# usual make variables (refer to a template file), but especially 
# the FSRCS, CSRCS, and TARGET variables.  For example:
#
#FSRCS =  viletalg.ftn \
#        a313a1.ftn \
#        a313d1.ftn \
#        a313e1.ftn \
#        a313f1.ftn \
#        a313g1.ftn \
#        a313h1.ftn \
#        a313i1.ftn \
#        a313j1.ftn \
#        a313s1.ftn \
#        a313t1.ftn
#
# CSRCS = one_c_source.c \
#	two_c_source.c
#
# TARGET = mixedlangbin
#
# If the binary is Fortran-only, define DEPENDFILE to be empty:
#
# DEPENDFILE =
#

OBJS = $(patsubst %.ftn, $(ARCH)/%.o, $(FSRCS)) \
	$(patsubst %.c, $(ARCH)/%.o, $(CSRCS)) \
	$(ADDITIONAL_OBJS)

DEBUGOBJS = $(patsubst %.o, %.$(DBGOBJ_EXT), $(OBJS))

all:: $(ARCH)/$(TARGET)
$(TARGET): all

$(ARCH)/$(TARGET): $(OBJS) $(DEPLIBS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(FC_LD) -o $@ $(OBJS) $(FCLDOPTIONS) $(FC_EXTRA_LDOPTIONS) $(FC_LOCAL_LIBRARIES) $(FC_SYS_LIBS) $(FC_$(ARCH)_LDFLAGS) $(FC_$(ARCH)_LIBS)

clean::
	$(RM) $(ARCH)/*.o $(ARCH)/*.f $(ARCH)/$(TARGET)

install:: $(ARCH)/$(TARGET)
	@if [ -d $(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(BINDIR)); fi
	$(INSTALL) $(INSTPGMFLAGS) $< $(BINDIR)/$(TARGET)

debugall:: $(ARCH)/$(TARGET)_d

$(ARCH)/$(TARGET)_d: $(DEBUGOBJS) $(DEBUG_DEPLIBS)
	@if [ -d $(ARCH) ]; then set +x; \
	else (set -x; $(MKDIR) $(ARCH)); fi
	$(FC_DEBUGLD) -o $@ $(DEBUGOBJS) $(FC_DEBUG_LOC_LDOPTS) $(FC_DEBUG_LOCALLIBS) $(FC_DEBUG_SYS_LDOPTS) $(FC_SYS_LIBS) $(FC_$(ARCH)_LDFLAGS) $(FC_$(ARCH)_LIBS)

clean::
	$(RM) $(ARCH)/$(TARGET)_d $(ARCH)/*.$(DBGOBJ_EXT)

debuginstall:: $(ARCH)/$(TARGET)_d
	@if [ -d $(DEBUGBINDIR) ]; then set +x; \
	else (set -x; $(MKDIR) $(DEBUGBINDIR)); fi
	$(INSTALL) $(INSTBINFLAGS) $< $(DEBUGBINDIR)/$(TARGET) 

# We cannot "makedepend" Fortran source files ... a Fortran-only
# binary should have no DEPENDFILE defined ...
depend::
ifdef DEPENDFILE
	touch $(DEPENDFILE)
	$(DEPEND) $(SYS_DEPENDFLAGS) $(DEPENDFLAGS) -f $(DEPENDFILE) -s "# DO NOT DELETE generated by makedepend" -- $(CCFLAGS) -- $(CSRCS)
endif

