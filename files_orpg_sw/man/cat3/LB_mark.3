LB_mark(3) 		   ORPG SDD Manpage   		LB_mark(3)

NAME
LB_mark - attach a mark to a given message of a Linear Buffer (LB) file

SYNOPSIS
#include <lb.h>
int LB_mark (int lbd, LB_id_t id, int mark)

DESCRIPTION
This function attaches a mark "mark" to the message of "id" in the
LB "lbd". The mark is not used by the LB module. It can be 
retrieved by an LB_list call. Currently acceptable values of "mark" 
are 0 and 1. When a message is first written to LB, its mark is 
always set to 0.

LB_mark does not need a LB_WRITE permission. It, however, needs
an exclusive lock and the LB write access permission. Thus LB_mark 
will fail if another user opened the LB with LB_SINGLE_WRITER.

LB_mark returns LB_SUCCESS on success or one of the following 
negative number to indicate an error.

	LB_NOT_FOUND:		The message of "id" was not found.
	LB_BAD_ARGUMENT:	Illegal id is used.
	LB_BAD_DESCRIPTOR:	Unopened or closed LB descriptor is 
				used.
	LB_INTERNAL_ERROR:	An internal inconsistency is found. 
				The LB is damaged due to unknown reason.
	LB_PARITY_ERROR:	The user's LB data structure (not the 
				LB) is corrupted by 
				the caller due to a memory leak.
	LB_SHMDT_FAILED:	Failed in shmdt system call.
	LB_LOCK_FAILED:		Failed in a lock system call.
	LB_MMAP_FAILED:		Failed in mmap system call.
	LB_MPROTECT_FAILED:	Failed in mprotect system call.

SEE ALSO
LB_clear(3), LB_close(3), LB_direct(3), LB_list(3), LB_open(3),
LB_previous_msgid(3), LB_read(3), LB_remove(3), LB_seek(3), LB_size(3),
LB_stat(3), LB_write(3), lb(3), lb_create(1), lb_info(1), lb_rm(1)
