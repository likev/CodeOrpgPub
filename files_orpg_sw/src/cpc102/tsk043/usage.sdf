# RCS info
# $Author: ccalvert $
# $Locker:  $
# $Date: 2005/06/02 19:32:42 $
# $Id: usage.sdf,v 1.2 2005/06/02 19:32:42 ccalvert Exp $
# $Revision: 1.2 $
# $State: Exp $

Software Development File for "diskstat"

Entry Data:  07/20/00
Name:  Diane Crow
Reason for SDF Entry:  Initial

Software Development Activity:
[X]  Requirements Analysis
[X]  Design
[X]  Implementation
[X]  Unit Test
[X]  Integration Test

Name of SU's:  usage, user.awk, root.awk, daemon.awk, whole.awk

Author(s):  Diane Crow

Description:  A Korn shell script tool for monitoring CPU processing capability.

Inputs:  None

Outputs:  Screen print and selectable timestamped log file

Reuse:  30% reused from a similar tool for RPG software version prior to code
redesign.  A major portion of the RPG software underwent redesign, rendering
most of the test tools obsolete.  New test tools had to be developed to work on
this new code.

Trouble Report Information:

Considerations/Rationale:  Provides a means of obtaining a snapshot of CPU
usage for all processing activities.

Constraints:  Must be run from a Unix command line on an RPG workstation.

References:

Schedule:  Refer to ORPG Master Schedule

Status:  100% complete.  

                ### Design and Coding Notes  ###

Design Notes:

- Description of Script(s):

usage - executable script is located in /export/home/tools/toolsets
directory.  When used with an "s" parameter, output will simultaneously print on 
the screen and to a timestamped log file.

This script does the following for any system that runs the RPG software -

Selectively creates a directory for storing output log files, if one does not 
already exist.
Selectively creates a timestamped output log file at the time the script is 
initially executed.
When used with "s" parameter, records the type of test that the tool is being 
used with.
When used with "s" parameter, records the version of the software that the tool 
is being used with.
Executes the Unix utility "ps -A" with specific parameters and processes
its output to separate the owners of active processes to isolate CPU usage data.
Executes the awk scripts "user.awk", "root.awk", "daemon.awk", "whole.awk"
from the /export/home/tools directory, which calculates the total percentage of
CPU usage.
Executes the RPG utility "rpg_ps" and reports on failed RPG tasks.


user.awk - executable script is located in /export/home/tools/toolsets
directory.

This script does the following for the "usage" script -

Executed by "usage" using input provided by "usage".
Calculates the total percentage of CPU usage attributed to user processes,
allowing for floating point math.
Contains print statement for printing results of calculation to the screen.

root.awk - executable script is located in /export/home/tools/toolsets
directory.

This script does the following for the "usage" script -

Executed by "usage" using input provided by "usage".
Calculates the total percentage of CPU usage attributed to root processes,
allowing for floating point math.
Contains print statement for printing results of calculation to the screen.

daemon.awk - executable script is located in /export/home/tools/toolsets
directory.

This script does the following for the "usage" script -

Executed by "usage" using input provided by "usage".
Calculates the total percentage of CPU usage attributed to daemon processes,
allowing for floating point math.
Contains print statement for printing results of calculation to the screen.

whole.awk - executable script is located in /export/home/tools/toolsets
directory.

This script does the following for the "usage" script -

Executed by "usage" using input provided by "usage".
Calculates the total percentage of CPU usage for all processes,
allowing for floating point math.
Contains print statement for printing results of calculation to the screen.

                ### Testing ###

Test Requirements:  To evaluate the CPU processing capacity on demand without
interfering with the normal execution of the RPG software under a variety of
operating conditions.

Objective:  Execute usage in a normal manner.

Environment:  Need a Sun Ultra 5 for MSCF or BDDS installations with correct
hardware, SunOS and RPG software build already installed (See Tech Manuals for
details).  Need a Sun Ultra 10 for an ORPG installation with correct hardware,
SunOS and RPG software build already installed (See Tech Manuals for details).

Methodology:  Unit testing of a "Normal" execution.

Test cases:  Show the normal execution (Average Unit Test) of the script on any
RPG system.

                ### Test Procedure 1 ###

Test Case Name or Id:  Average Unit Test of an MSCF

Environment:  Need a Sun Ultra 5/10 correct software and SunOS
already installed (See Tech Manuals for details).

Inputs (Screen Capture):

usage
usage s

Expected Results for usage:  the script will print the output to the screen.  
Once the script finishes, the terminal window will return to the command line.

Expected Results for usage s:  the script will simultaneously print the output 
to the screen and to the output log file.  Once the script finishes, the
terminal window will return to the command line.

Sample screen output from usage:

Current software build    :   v1.99
Host is                   :   os88dj
Total CPU usage           :   2.5  %
Root processes CPU usage  :   0.4  %
Daemon processes CPU usage:   0  %

FAILED RPG tasks:
    basrflct   701     FAIL  330m  369k    0s basrflct -v
    basspect   703     FAIL  480m  369k    0s basspect -v
    basvlcty   702     FAIL  350m  369k    0s basvlcty -v
    cmprfape   711     FAIL  150m  180k    0s cmprfape -v
     cmprfcg   709     FAIL  160m  180k    0s cmprfcg -v
    cmprfcg2 20709     FAIL  190m  180k    0s cmprfcg2 -v
    vwindpro  1702     FAIL  760m  475k    0s vwindpro -v

Sample screen output from usage s:

What is the test being performed?  :unit test
Timestamped output file is:  /export/home/v1.99data/testing/usage_Aug2_17:45.rpt
Current software build    :   v1.99
Host is                   :   os88dj
Total CPU usage           :   3.5  %
Root processes CPU usage  :   0.6  %
Daemon processes CPU usage:   0  %

FAILED RPG tasks:
    basrflct   701     FAIL  330m  369k    0s basrflct -v
    basspect   703     FAIL  480m  369k    0s basspect -v
    basvlcty   702     FAIL  350m  369k    0s basvlcty -v
    cmprfape   711     FAIL  150m  180k    0s cmprfape -v
     cmprfcg   709     FAIL  160m  180k    0s cmprfcg -v
    cmprfcg2 20709     FAIL  190m  180k    0s cmprfcg2 -v
    vwindpro  1702     FAIL  760m  475k    0s vwindpro -v


Step-by-step for usage:

Step 1:  Type at the command line:  'usage'
Step 2:  Allow it to run until the command line is returned.

Evaluation Criteria:  Determine that failed tasks match those provided by in 
ouput from the rpg_ps command.  

                ### Unit Test Results ###

Test Case:  Normal test using test procedure on an MSCF.
Pass/Fail:
Date:

Test Case:  Normal test using test procedure on an RPG with a Jaz drive.
Pass/Fail:
Date:

Test Case:  Normal test using test procedure on a BDDS.
Pass/Fail:
Date:

Test Case:  Normal test using test procedure on stand-alone RPG with tape drive.
Pass/Fail:
Date:

Step-by-step for usage s:

Step 1:  Type at the command line:  'usage s'
Step 2:  When prompted, enter the type of test being performed.
Step 3:  Allow it to run until the command line is returned.
Step 4:  Verify the contents of the output log file.

Evaluation Criteria:  Determine that failed tasks match those provided in output 
from the rpg_ps command.  Determine if screen-printed output matches the 
contents of the output log file.

                ### Unit Test Results ###

Test Case:  Normal test using test procedure on an RPG with a Jaz drive.
Pass/Fail:  Pass
Date:       01/10/01

Test Case:  Normal test using test procedure on stand-alone RPG with tape drive.
Pass/Fail:  Pass
Date:       01/10/01

                ### Miscellaneous ###

