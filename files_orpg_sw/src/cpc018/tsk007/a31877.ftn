C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/17 18:26:32 $
C $Id: a31877.ftn,v 1.3 2002/12/17 18:26:32 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A31877__MAX_LEVELS(VADBUF)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A31877__MAX_LEVELS
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE:  FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       09 09 88      0000      VALERIE HOLDEN       SPR # 80273
*.       05 18 90      0001      BILL EIDSON          SPR # 90664
*.       08 07 90      0002      MIKE ISTOK           SPR # 90928
*.       11 07 90      0003      CHARLIE BAUMHER      SPR # 91259
*.       10 15 91      0004      EDWARD WENDOWSKI     SPR # 92410
*.       12 03 91      0005      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0006      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0007      Toolset              SPR 91895
*.       03/25/93      0008      Toolset              SPR NA93-06801
*.       01/28/94      0009      Toolset              SPR NA94-01101
*.       03/03/94      0010      Toolset              SPR NA94-05501
*.       04/11/96      0011      Toolset              CCR NA95-11802
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A31877__MAX_LEVELS(VADBUF)
*.
*.  MODULE FUNCTION:
*.
*.     STORES MAXIMUM DATA LEVELS FOR VERSION 2 VAD PRODUCT HEADER
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT      TYPE        DESCRIPTION
*.    -   -----      ----        -----------
*.    G   EAZALOFF   I*4         (CONSTANT)Product header offset: Elevation,
*.                               Azimuth, or Altitude.
*.    G   MDL1OFF    I*4         (CONSTANT)Product header offset: Maximum Data
*.                               Level 1.
*.    G   MDL2OFF    I*4         (CONSTANT)Product header offset: Maximum Data
*.                               Level 2.
*.    G   MDL3OFF    I*4         (CONSTANT)Product header offset: Maximum Data
*.                               Level 3.
*.    G   MDL4OFF    I*4         (CONSTANT)Product header offset: Maximum Data
*.                               Level 4.
*.    G   MPS_TO_KTS R*4         (CONSTANT)SCALING FACTOR FOR METERS PER
*.                               SECOND TO KNOTS
*.    G   NM_TO_KM   R*4         (CONSTANT)SCALING FACTOR FOR NAUTICAL MILES
*.                               TO KILOMETERS
*.    G   STSPDOFF   I*4         (CONSTANT)Product header offset: Data Storm
*.                               speed.
*.    C   AHWS       R*4         HORIZONTAL WIND SPEED FROM VAD WIND PROFILE
*.    C   ELANG      I*4         Elevation Angle.
*.    C   HWD        R*4         Horizontal wind direction.
*.    C   MISSING    R*4         The missing data value for current run (e.g.
*.                               velocity; elevation angle).
*.    C   RMS        R*4         Root mean square error.
*.    C   SLRAN      R*4         Slant range.
*.    C   V2_ALT     I*4         Current requested altitude.
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   VADBUF  I*2         VERSION 2 VAD OUTPUT BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME         TYPE        DESCRIPTION
*.    ----         ----        -----------
*.    FTTKFT       I*4         CONVERSION FROM FEET TO KFT
*.    MSGFLAG      I*2         MISSING PRODUCT PARAMETER VALUE
*.    SCALE_BY_TEN R*4         SCALING FACTOR
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A318C7
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  NONE
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.    THIS MODULE IS COMPILED USING COMP18.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.    THIS MODULE IS LINKED USING LINK18.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C*
      IMPLICIT NONE
C
$INCLUDE A309ADPT.INC/G,**A3CD70CA     (NEND NLIST)
$INCLUDE A318.INC,**A318C7 (NLIST)
$INCLUDE A309.INC/G,**A3PM01           (NEND NLIST)
$INCLUDE            **A3PM50           (NLIST)
C*
C$DELETE
      INTEGER*2 VADBUF(*), MSGFLAG, I
C$ENDDELETE
C$INSERT      INTEGER*2 VADBUF(*), MSGFLAG
      REAL      SCALE_BY_TEN
      INTEGER FTTKFT
      PARAMETER (FTTKFT=1000, MSGFLAG = -9999)
      PARAMETER (SCALE_BY_TEN = 10.0)
C
X     LOGICAL PRINTED
X     DATA PRINTED /.FALSE./
C*
C********************************************************************
X     TYPE *,'77: ENTERED A31877; AHWS,RMS,SLRAN = ',AHWS,RMS,SLRAN
C*    IF MAXIMUM WIND SPEED IS MISSING; SET WIND SPEED, DIRECTION
C*    TO MISSING
C*
      IF (AHWS.LE.MISSING) THEN
         VADBUF(MDL1OFF ) = MSGFLAG
         VADBUF(MDL2OFF ) = MSGFLAG
X        TYPE *,'77: AHWS LE MISSING '
      ELSE
         VADBUF(MDL1OFF ) = NINT(AHWS*MPS_TO_KTS)
C
X     IF (.NOT. PRINTED) THEN
X     WRITE(14,*)'A31877: VALUES IN CALCULATION LINE 167 '
X     WRITE(14,*)'VADBUF(MDL1OFF) = NINT(AHWS * MPS_TO_KTS) '
X     WRITE(14,*)'AHWS EQUALS ',AHWS
X     WRITE(14,*)'MPS_TO_KTS EQUALS ',MPS_TO_KTS
X     WRITE(14,*)'A31877: RESULTS OF CALCULATION 1 ',VADBUF(MDL1OFF)
X     PRINTED = .TRUE.
X     ENDIF
C
         VADBUF(MDL2OFF ) = NINT(HWD)
X        TYPE *,'77: AHWS GT MISSING '
      END IF
C
C*  IF RMS IS MISSING, THEN SET STORM SPEED FIELD TO MISSING
C
      IF (RMS .LE. MISSING) THEN
         VADBUF(STSPDOFF) = MSGFLAG
X        TYPE *,'77: RMS LE MISSING '
      ELSE
         VADBUF(STSPDOFF) = NINT(RMS * MPS_TO_KTS)
C
X     IF (.NOT. PRINTED) THEN
X     WRITE(14,*)'A31877: VALUES IN CALCULATION LINE 188 '
X     WRITE(14,*)'VADBUF(STSPDOFF) = NINT(RMS * MPS_TO_KTS) '
X     WRITE(14,*)'RMS EQUALS ',RMS
X     WRITE(14,*)'MPS_TO_KTS EQUALS ',MPS_TO_KTS
X     WRITE(14,*)'A31877: RESULTS OF CALCULATION 2 ',VADBUF(STSPDOFF)
X     PRINTED = .TRUE.
X     ENDIF
C
X        TYPE *,'77: RMS GT MISSING '
      END IF
C
C* IF REQUESTED HEIGHT IS VALID (I.E. NOT BELOW GROUND LEVEL) FILL IN
C* SLANT RANGE AND ELEVATION ANGLE DATA
C
      IF (SLRAN .LE. MISSING) THEN
         VADBUF(MDL3OFF ) = MSGFLAG
         VADBUF(MDL4OFF ) = MSGFLAG
X        TYPE *,'77: SLRAN LE MISSING '
      ELSE
         VADBUF(MDL3OFF ) = ELANG
         VADBUF(MDL4OFF ) = (SLRAN / NM_TO_KM) * SCALE_BY_TEN
C
X     IF (.NOT. PRINTED) THEN
X     WRITE(14,*)'A31877: VALUES IN CALCULATION LINE 211 '
X     WRITE(14,*)'VADBUF(MDL4OFF)=(SLRAN/NM_TO_KM)*SCALE_BY_TEN '
X     WRITE(14,*)'SLRAN EQUALS ',SLRAN
X     WRITE(14,*)'NM_TO_KM EQUALS ',NM_TO_KM
X     WRITE(14,*)'SCALE_BY_TEN EQUALS ',SCALE_BY_TEN
X     WRITE(14,*)'(SLRAN/NM_TO_KM) EQUALS ',SLRAN/NM_TO_KM
X     WRITE(14,*)'A31877: RESULTS OF CALCULATION 3 ',VADBUF(MDL4OFF)
X     PRINTED = .TRUE.
X     ENDIF
C
X        TYPE *,'77: SLRAN GT MISSING '
      END IF
C
C*   SET HEIGHT DATA
C
      VADBUF(EAZALOFF) = V2_ALT/FTTKFT
X     TYPE *,'77: PRINTING OUT PRODUCT DEPENDENT VALUES.'
X     WRITE (5,10) VADBUF(EAZALOFF),VADBUF(STSPDOFF),
X    +(VADBUF(I),I=MDL1OFF,MDL4OFF)
X10   FORMAT(' ALTITUDE =',I5,' (KFT), RMS =',I5,/,
X    +       ' HORIZONTAL WIND SPEED =',I5,/,
X    +       ' HORIZONTAL WIND DIRECTION =',I5,/,
X    +       ' ELEVATION ANGLE ',I5,' SCALED BY TEN ',/,
X    +       ' SLANT RANGE USED ',I5,' NAUTICAL MILES (TRUNCATED)')
X     TYPE *,'77:  EXIT HERE'
      RETURN
      END
