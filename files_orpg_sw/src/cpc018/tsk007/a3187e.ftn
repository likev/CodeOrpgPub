C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/17 18:26:39 $
C $Id: a3187e.ftn,v 1.3 2002/12/17 18:26:39 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3187E__CHECK_VER2_ALT( VAD_DATA_HTS, VAD_MISS,
     +RETSTAT)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3187E__CHECK_VER2_ALT
*.
*.  MODULE VERSION: 0011
*.
*.  MODULE LANGUAGE:  FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       10 27 89      0000      BILL EIDSON          SPR # 80273
*.       05 18 90      0001      BILL EIDSON          SPR # 90664
*.       11 07 90      0002      CHARLIE BAUMHER      SPR # 91259
*.       12 03 91      0003      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0004      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0005      Toolset              SPR 91895
*.       03/25/93      0006      Toolset              SPR NA93-06801
*.       01/28/94      0007      Toolset              SPR NA94-01101
*.       03/03/94      0008      Toolset              SPR NA94-05501
*.       04/11/96      0009      Toolset              CCR NA95-11802
*.       12/23/96      0010      Toolset              CCR NA95-11807
*.       03/16/99      0011      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A3187E__CHECK_VER2_ALT( VAD_DATA_HTS,
*.                                                 VAD_MISS,RETSTAT )
*.
*.  MODULE FUNCTION:
*.
*.       THIS MODULE CHECKS THE REQUESTED ALTITUDE FROM THE
*.    CUSTOMIZING DATA.  IF THE REQUESTED ALTITUDE IS FOUND, THEN
*.    THE ELEVATION CUT AND SLANT RANGE USED ARE EXTRACTED FROM
*.    VADTMHGT BUFFER. THEY WERE USED BY THE VAD ALGORITHM FOR
*.    SAVING DATA AT THIS HEIGHT.  THE ELEVATION CUT NUMBER AND
*.    CURRENT VOLUME COVERAGE PATTERN ARE USED TO GET THE ELEVATION
*.    ANGLE USED.
*.
*.  MODULES CALLED: A3CM56__GET_ELEV_ANGLE 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT        TYPE        DESCRIPTION
*.    -   -----        ----        -----------
*.    G   MAX_VAD_HTS  I*4         (CONSTANT)Total user selected VAD heights.
*.    G   VAD_HTG      I*4         (CONSTANT)Row position in height base data
*.                                 (VAD_DATA_HTS) of the altitude used.
*.    G   VAD_LCN      I*4         (CONSTANT)Row position in height based data
*.                                 (VAD_DATA_HTS) of the elevation cut number.
*.    G   VAD_RMS      I*4         (CONSTANT)Row position in height base date
*.                                 (VAD_DATA_HTS) of confidence level.
*.    G   VAD_SHW      I*4         (CONSTANT)Row position in height based data
*.                                 (VAD_DATA_HTS) of horizontal wind speed.
*.    G   VAD_SLR      I*4         (CONSTANT)Row position in height based data
*.                                 (VAD_DATA_HTS) of the slant range.
*.    C   CURVCP       I*4         Current volume coverage pattern.
*.    C   ELANG        I*4         Elevation Angle.
*.    C   HTIDX        I*4         Index into VAD altitude table of the
*.                                 current requested height.
*.    C   MISSING      R*4         The missing data value for current run
*.                                 (e.g. velocity; elevation angle).
*.    C   V2_ALT       I*4         Current requested altitude.
*.    P   VAD_DATA_HTS R*4         Table of height based VAD algorithm data.
*.    P   VAD_MISS     R*4         Missing data value.
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    C   AHWS    R*4         HORIZONTAL WIND SPEED FROM VAD WIND PROFILE
*.    C   ELANG   I*4         Elevation Angle.
*.    C   HTIDX   I*4         Index into VAD altitude table of the current
*.                            requested height.
*.    C   MISSING R*4         The missing data value for current run (e.g.
*.                            velocity; elevation angle).
*.    C   RMS     R*4         Root mean square error.
*.    C   SLRAN   R*4         Slant range.
*.    P   RETSTAT I*4         RETURNED STATUS OF CALLING THIS MODULE
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    C   CURVCP            I*4         Current volume coverage pattern.
*.    C   ELANG             I*4         Elevation Angle.
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME        TYPE        DESCRIPTION
*.    ----        ----        -----------
*.    BAD_STATUS  I*4         CONSTANT VALUE OF ONE RETURNED TO TO INDICATE
*.                            THE ALTITUDE REQUESTED WAS NOT USED BY THE VAD
*.                            ALGORITHM
*.    ELCN        I*4         ELEVATION CUT NUMBER USED BY VAD ALGORITHM AT
*.                            THE REQUESTED HEIGHT
*.    FOUND       L*4         FLAG VALUE RETURNED FROM CALLING A3CM56. TRUE
*.                            CONDITION INDICATES ANGLE RETURNED IS VALID,
*.                            OTHERWISE ANGLE IS SET TO A DEFAULT.
*.    GOOD_STATUS I*4         CONSTANT VALUE OF 0 INDICATING ALTITUDE SELECTED
*.                            WAS USED BY THE VAD ALGORITHM
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A318C7
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  NONE
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.    THIS MODULE IS COMPILED USING COMP18.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.    THIS MODULE IS LINKED USING LINK18.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE
C
C* GLOBAL DECLARATIONS:
C
$INCLUDE A309ADPT.INC/G,**A3CD70C7 (NLIST)
$INCLUDE A317BUF.INC/G,**A317VP (NLIST)
$INCLUDE **A317VD (NLIST)
$INCLUDE A318.INC,**A318C7 (NLIST)
C
C* LOCAL DECLARATIONS:
C
      INTEGER*4 RETSTAT, GOOD_STATUS, BAD_STATUS, ELCN
      PARAMETER (GOOD_STATUS = 0, BAD_STATUS = 1)
      LOGICAL FOUND
C
C* SET MISSING FLAG VALUE
C
      MISSING = VAD_MISS
X     TYPE *,'7E: ENTERED HERE ... V2_ALT=',V2_ALT
C
C* DO FOR ALL HEIGHTS IN THE VADTMHGT BUFFER, CHECK FOR CONTROL DATA
C* ALTITUDE
C
      DO 1000 HTIDX = 1, MAX_VAD_HTS
X     TYPE *,'7E: CHECKING HEIGHT =',VAD_DATA_HTS(VAD_HTG,HTIDX),HTIDX
         IF (V2_ALT .EQ. VAD_DATA_HTS(VAD_HTG,HTIDX)) THEN
C
C* FOUND THE HEIGHT.  EXTRACT THE RMS ERROR, THE SLANT RANGE USED,
C* AND ELEVATION CUT NUMBER.
C
            RMS = VAD_DATA_HTS(VAD_RMS, HTIDX)
            SLRAN = VAD_DATA_HTS(VAD_SLR, HTIDX)
            ELCN  = VAD_DATA_HTS(VAD_LCN, HTIDX)
            AHWS  = VAD_DATA_HTS(VAD_SHW, HTIDX)
C
C* USING THE ELEVATION CUT NUMBER AND VOLUME COVERAGE PATTERN USED,
C* CALL A3CM56__GET_ELEV_ANGLE TO RETURN THE ACTUAL ANGLE USED.
C
            CALL A3CM56__GET_ELEV_ANGLE(CURVCP,ELCN,ELANG,FOUND)
C
C* CHECK IF ANGLE WAS FOUND.
C
            IF (.NOT. FOUND) THEN
              ELANG = MISSING
            ENDIF
C
C* SET RETURN STATUS TO GOOD.
C
            RETSTAT = GOOD_STATUS
X           TYPE *,'7E: RMS,SLRAN,ELCN,ELANG=',RMS,SLRAN,ELCN,ELANG
C
C* CYCLE OUT OF THE LOOP AND EXIT THE ROUTINE
C
            GOTO 5000
         ENDIF
 1000 CONTINUE
C
C* DIDN'T FIND THE HEIGHT, SET RETURN STATUS TO BAD.
C
      RETSTAT = BAD_STATUS
 5000 CONTINUE
C
C* EXIT THE ROUTINE
C
      RETURN
      END
