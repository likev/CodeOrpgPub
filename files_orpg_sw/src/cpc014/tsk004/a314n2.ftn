C 
C RCS info 
C $Author: steves $ 
C $Locker:  $ 
C $Date: 2011/05/06 16:00:30 $ 
C $Id: a314n2.ftn,v 1.7 2011/05/06 16:00:30 steves Exp $ 
C $Revision: 1.7 $ 
C $State: Exp $ 
C 
      SUBROUTINE A314N2__VIL_HEADER(VILPAR,VIL_BUF,IPTR,
     1                              VILINDX,CDATE,CTIME)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A314N2__VIL_HEADER
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE:  FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       05 14 85      0000      Ze'ev Rivlin         rpg build 2
*.       02 02 87      0001      Bradley Sutker       SPR # 70069
*.       08 24 88      0002      BILL EIDSON          SPR # 80248
*.       02 14 91      0003      PENNY J YELSHIN      SPR # 91255
*.       12 03 91      0004      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0005      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0006      Toolset              SPR 91895
*.       03/25/93      0007      Toolset              SPR NA93-06801
*.       01/28/94      0008      Toolset              SPR NA94-01101
*.       03/03/94      0009      Toolset              SPR NA94-05501
*.       04/01/95      0010      Toolset              CCR NA95-11802
*.       06/02/95      0011      R. RIERSON           CCR NA94-35301
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A314N2__VIL_HEADER (VILPAR,VIL_BUF,IPTR,
*.                                 VILINDX,CDATE,CTIME)
*.
*.  MODULE FUNCTION:
*.
*.     This module sets all the header fields in the VIL
*.     Product, i.e. - everything in the product except for the
*.     actual run-length encoding and the product length and any
*.     other fields that can be determined only at the end.
*.
*.  MODULES CALLED: A31218__BUF_VOL 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT          TYPE        DESCRIPTION
*.    -   -----          ----        -----------
*.    G   SIRDAHGT       I*4         Site Adaptation - RDA Height.
*.    G   SIRDALAT       I*4         Site Adaptation - RDA Latitude.
*.    G   SIRDALON       I*4         Site Adaptation - RDA Longitude.
*.    G   SIRPGID        I*4         Site Adaptation - RPG ID Number.
*.    G   SUMMARY        I*4         Volume Scan Summary Table
*.    G   THRESH         I*2         Adaptation Data for Color Data Table
*.                                   Thresholds (color-level code, color table
*.                                   number).
*.    G   BLKOVRHD       I*4         (CONSTANT)SIZE OF OVERHEAD PORTION OF
*.                                   PRODUCT SYMBOLOGY BLOCK, IN BYTES
*.    G   BLOCKIDOFF     I*4         (CONSTANT)Product block ID offset.
*.    G   DIV1OFF        I*4         (CONSTANT)Product header offset: First
*.                                   divider.
*.    G   DIV2OFF        I*4         (CONSTANT)Product block offset: Second
*.                                   divider.
*.    G   DL1OFF         I*4         (CONSTANT)Product header offset: data
*.                                   level 1.
*.    G   FLAGSOF1       I*4         (CONSTANT)Display header offset (for
*.                                   raster formatted products): first
*.                                   opcode/flags offset.
*.    G   FLAGSOF2       I*4         (CONSTANT)Display header offset (for
*.                                   raster formatted products):seconds
*.                                   opcod/flags offset.
*.    G   FLAGSOF3       I*4         (CONSTANT)Display header offset (for
*.                                   raster formatted products):Third
*.                                   opcode/flags offset.
*.    G   GDPRDOFF       I*4         (CONSTANT)Product header offset:
*.                                   generation date of product.
*.    G   GTLSWOFF       I*4         (CONSTANT)Product header
*.                                   offset:Generation time of product (LSW).
*.    G   GTMSWOFF       I*4         (CONSTANT)Product header offset.
*.                                   Generation time of product (MSW).
*.    G   LNLSWOFF       I*4         (CONSTANT)Product header offset:
*.                                   Longitude of radar (LSW).
*.    G   LNMSWOFF       I*4         (CONSTANT)Product header offset:
*.                                   Longitude of radar (MSW).
*.    G   LTLSWOFF       I*4         (CONSTANT)Product header offset: Latitude
*.                                   of radar (LSW).
*.    G   LTMSWOFF       I*4         (CONSTANT)Product header offset: Latitude
*.                                   of radar (MSW)
*.    G   LYRDIVOFF      I*4         (CONSTANT)PRODUCT BLOCK OFFSET: LAYER
*.                                   DIVIDER
*.    G   MDL1OFF        I*4         (CONSTANT)Product header offset: Maximum
*.                                   Data Level 1.
*.    G   MESCDOFF       I*4         (CONSTANT)Product header offset: Message
*.                                   code.
*.    G   NBLKSOFF       I*4         (CONSTANT)Product header offset: Number
*.                                   of blocks in product.
*.    G   NCOL           I*4         (CONSTANT)Number of analysis box columns.
*.    G   NETSIZ         I*4         (CONSTANT)Size of the ECHO TOPS
*.                                   supplemental variable array.
*.    G   NLYROFF        I*4         (CONSTANT)Product block offsets: Number
*.                                   of layers.
*.    G   NMAPSOFF       I*4         (CONSTANT)Product header offset
*.                                   descriptions: Number of maps.
*.    G   NROW           I*4         (CONSTANT)Number of analysis box rows.
*.    G   NRWSOFF        I*4         (CONSTANT)Display header offset (For
*.                                   raster formatted products): Number of
*.                                   rows offset.
*.    G   OMVI           I*4         (CONSTANT)Pointer into VIL supplemental
*.                                   array to maximum VIL value.
*.    G   OPRLSWOFF      I*4         (CONSTANT)Product header offset
*.                                   descriptions: Offset to product length
*.                                   (LSW)
*.    G   OPRMSWOFF      I*4         (CONSTANT)Product header offset
*.                                   descriptions: Offset to product length
*.                                   (MSW)
*.    G   PACKDESC       I*4         (CONSTANT)Display header offset (For
*.                                   raster formatted products): Packing
*.                                   descriptor offset.
*.    G   PHEADLNG       I*4         (CONSTANT)Number of half words in product
*.                                   header (its length).
*.    G   PRDCODOFF      I*4         (CONSTANT)Product header offset
*.                                   descriptions: Product code.
*.    G   RADHGTOFF      I*4         (CONSTANT)Product header offset
*.                                   descriptions: Height of radar.
*.    G   RASFLG1        I*4         (CONSTANT)Raster flag for first word in
*.                                   raster header.
*.    G   RASFLG2        I*4         (CONSTANT)Raster flag for second word in
*.                                   raster header.
*.    G   RASFLG3        I*4         (CONSTANT)Raster flag for third word in
*.                                   raster header.
*.    G   RASTER_HEADER  I*4         (CONSTANT)Number of half words in raster
*.                                   packet header.
*.    G   RAS_PACK_DES   I*4         (CONSTANT)Preset to raster packing
*.                                   description.
*.    G   SBON           I*2         (CONSTANT)Spot Blanking flag indicating
*.                                   it is enabled in product
*.    G   SCAN_DATE      I*4         (CONSTANT)Volume Scan Date index into
*.                                   Scan Summary Table
*.    G   SCAN_MODE      I*4         (CONSTANT)Weather Mode index into Scan
*.                                   Summary Table
*.    G   SCAN_SB        I*4         (CONSTANT)Spot Blanking Flag index into
*.                                   Volume Scan Summary Table
*.    G   SCAN_TIME      I*4         (CONSTANT)Volume Scan Time index into
*.                                   Scan Summary Table
*.    G   SCAN_VCP       I*4         (CONSTANT)Volume Coverage Pattern index
*.                                   into Scan Summary Table
*.    G   SRCIDOFF       I*4         (CONSTANT)Product header offset: Source
*.                                   ID-Number.
*.    G   VCPOFF         I*4         (CONSTANT)Product header offset:  Volume
*.                                   coverage pattern.
*.    G   VOL_SPOT_BLANK I*2         (CONSTANT)Spot Blank field in Scan
*.                                   Summary table definition
*.    G   VSDATOFF       I*4         (CONSTANT)Product header offset: Volume
*.                                   scan date.
*.    G   VSNUMOFF       I*4         (CONSTANT)Product header offset
*.                                   descriptions: Volume scan number.
*.    G   VSTLSWOFF      I*4         (CONSTANT)Product header offset: Volume
*.                                   scan time (LSW).
*.    G   VSTMSWOFF      I*4         (CONSTANT)Product header offset:  Volume
*.                                   scan time (MSW).
*.    G   WTMODOFF       I*4         (CONSTANT)Product header offset:  Weather
*.                                   mode.
*.    G   XSCFACINT      I*4         (CONSTANT)Display header offset (For
*.                                   raster formatted products): X Scale
*.                                   factor integer.
*.    G   YSCFACINT      I*4         (CONSTANT)Display header offset (For
*.                                   raster formatted products): Y Scale
*.                                   factor integer.
*.    P   CDATE          I*4         Generation date
*.    P   CTIME          I*4         generation time
*.    P   IPTR           I*4         Input buffer pointer.
*.    P   VILINDX        I*4         VIL color threshold table index
*.    P   VILPAR         I*4         VIL Parameter Array contained in the VIL
*.                                   Algorithm Output Buffer
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   VIL_BUF I*2         VIL Product Output Buffer
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   IPTR              I*4         Input buffer pointer.
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME              TYPE        DESCRIPTION
*.    ----              ----        -----------
*.    DIVIDER           I*2         Parameter used to seperate the blocks in
*.                                  the product (=-1)
*.    IDX               I*4         Loop control variable.
*.    INIT_VAL          I*2         parameter used to initialize header fields
*.    LEVEL16           I*4         16; there are 16 data threshold values
*.    MAX_ROUND         I*4         used to "ROUND" off the vil product size
*.                                  to 50% of maximum size. It's equal to 2,
*.                                  and we divide by it when calculating
*.                                  VILSIZ
*.    NRLEW1            I*4         1 i*2 word to store Number of Run Length
*.                                  Encoded Words for each row. used to
*.                                  calculate VILSIZ.
*.    NUMLYRS           I*2         NUMber of LaYeRS = 1 for vil product
*.    NUM_BLOCKS        I*2         Number of blocks in vil product
*.    PROD_CODE         I*2         Product CODE value assigned to BLOCK_ID to
*.                                  signify product block.
*.    RUNS_PERI2        I*4         number of RUNS PER I*2 word of vil product
*.                                  buffer, = 2 since the run information can
*.                                  be stored in 1 byte. used to calculate
*.                                  VILSIZ
*.    SCALE_FAC         I*2         scale factor
*.    TOTAL_HEADER_INFO I*4         Total number of header fields in product,
*.                                  i.e.- everything except the actual
*.                                  run-length encoded data.
*.    VILSIZ            I*4         VIL product SIZe in i*2 words - used to
*.                                  dimension VIL_BUF to 50% of worst case
*.                                  size
*.    VIL_CODE          I*2         Message code for vil product.
*.    VOLNO             I*4         Volume scan number.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A3CD05
*.    COLRTBL
*.    SITEADP
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.    THIS MODULE IS COMPILED USING COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.    THIS MODULE IS LINKED USING LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************


      IMPLICIT NONE

C* Include predecessor task output buffer definition:
$INCLUDE A313BUF.INC/G,**A313P0 (NEND NLIST)

C* include product offsets:
$INCLUDE A309.INC/G,**A3PM00 (NEND NLIST)
$INCLUDE            **A3PM01 (NEND NLIST)
$INCLUDE            **A3PM04 (NEND NLIST)
$INCLUDE            **A3PM06 (NEND NLIST)
$INCLUDE            **A3CD05 (NEND NLIST)
C* include site adaptation data definitions:
$INCLUDE A309ADPT.INC/G,**A3CD70CA (NEND NLIST)

C* include color tables' definitions:
$INCLUDE A309ADPT.INC/G,**A3CD70C5 (NEND NLIST)


      INTEGER*4 RUNS_PERI2,NRLEW1,MAX_ROUND,IPTR,
     1          A31218__BUF_VOL,CDATE,CTIME,VOLNO

      PARAMETER(RUNS_PERI2=2,NRLEW1=1,MAX_ROUND=2)

      INTEGER*4 VILSIZ,VILINDX,SAM,IDX,TOTAL_HEADER_INFO,LEVEL16
      PARAMETER(LEVEL16=16,SAM=2)
      PARAMETER(TOTAL_HEADER_INFO=PHEADLNG+BLKOVRHD/2+RASTER_HEADER)

      PARAMETER(VILSIZ=(NROW*(NCOL/RUNS_PERI2+NRLEW1))
     1          / MAX_ROUND + TOTAL_HEADER_INFO)
C ***** ABOVE:  calculating VIL product length in I*2 words -
C *****         assuming 50% of worst case length (all runs of size 1)


      INTEGER*2 VIL_BUF(VILSIZ),VIL_CODE,NUM_BLOCKS,DIVIDER,
     1          ALL_ONES,SCALE_FAC,INIT_VAL,PROD_CODE,NUMLYRS,
     >          PARAM_30

      PARAMETER(VIL_CODE=57,NUM_BLOCKS=3,DIVIDER=-1,
     1          ALL_ONES=X'FFFF',SCALE_FAC=4,
     2          INIT_VAL=0,
     3          PROD_CODE=1,NUMLYRS=1)

      INTEGER*4 VILPAR(NETSIZ)
      LOGICAL OS32BTESTS

C initialize product header to zeros:

      DO 101 IDX=1,TOTAL_HEADER_INFO
         VIL_BUF(IDX) = INIT_VAL
 101  CONTINUE


C* assign values to product header:


C** get volume scan number:
      VOLNO = A31218__BUF_VOL(IPTR)


C** header block:
      VIL_BUF(MESCDOFF) = VIL_CODE
      VIL_BUF(SRCIDOFF) = SIRPGID
      VIL_BUF(NBLKSOFF) = NUM_BLOCKS

C** product description block:
      VIL_BUF(DIV1OFF) = DIVIDER
      call RPG_set_product_int( VIL_BUF(LTMSWOFF), SIRDALAT )
      call RPG_set_product_int( VIL_BUF(LNMSWOFF), SIRDALON )
      VIL_BUF(RADHGTOFF) = SIRDAHGT
      VIL_BUF(PRDCODOFF) = VIL_CODE
      VIL_BUF(WTMODOFF) = SUMMARY(SCAN_MODE,VOLNO)
      VIL_BUF(VCPOFF) = SUMMARY(SCAN_VCP,VOLNO)
      VIL_BUF(VSNUMOFF) = VOLNO
      VIL_BUF(VSDATOFF) = SUMMARY(SCAN_DATE,VOLNO)
      call RPG_set_product_int( VIL_BUF(VSTMSWOFF),
     1                          SUMMARY(SCAN_TIME,VOLNO) )

C*** store the generation date of product:
      VIL_BUF(GDPRDOFF) = CDATE

C*** store the generation time of product:
      call RPG_set_product_int( VIL_BUF(GTMSWOFF), CTIME )
 
C**** SET SPOT BLANK STATUS
      IF (OS32BTESTS(SUMMARY(SCAN_SB,VOLNO),VOL_SPOT_BLANK))
     >    VIL_BUF(NMAPSOFF)= SBON

C**** set the top elevation angle if AVSET active
      CALL RPG_avset_last_elev(SUMMARY(SCAN_DATE,VOLNO), PARAM_30)
      VIL_BUF(EAZALOFF) = PARAM_30

C*** to display color threshold values:
      DO 102 IDX=1,LEVEL16
         VIL_BUF(DL1OFF+IDX-1) = THRESH(IDX,VILINDX)
 102  CONTINUE

      VIL_BUF(MDL1OFF) = VILPAR(OMVI)

      call RPG_set_product_int( VIL_BUF(OPRMSWOFF), PHEADLNG )

C ** product symbology block:
      VIL_BUF(DIV2OFF) = DIVIDER
      VIL_BUF(BLOCKIDOFF) = PROD_CODE
      VIL_BUF(NLYROFF) = NUMLYRS
C
C ** RASTER HEADER DATA
      VIL_BUF(LYRDIVOFF) = DIVIDER
      VIL_BUF(NRWSOFF) = NROW
      VIL_BUF(FLAGSOF1)=RASFLG1
      VIL_BUF(FLAGSOF2)=RASFLG2
      VIL_BUF(FLAGSOF3)=RASFLG3
      VIL_BUF(PACKDESC)=RAS_PACK_DES
      VIL_BUF(XSCFACINT)=SCALE_FAC
      VIL_BUF(YSCFACINT)=SCALE_FAC

C return to buffer control routine:

      RETURN
      END
