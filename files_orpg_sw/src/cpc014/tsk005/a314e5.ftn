C 
C RCS info 
C $Author: nolitam $ 
C $Locker:  $ 
C $Date: 2002/11/27 15:15:06 $ 
C $Id: a314e5.ftn,v 1.3 2002/11/27 15:15:06 nolitam Exp $ 
C $Revision: 1.3 $ 
C $State: Exp $ 
C 
      SUBROUTINE A314E5__ELEV_CONST ( HDR,COSEL,AZ,EL,XAZFUNC,
     $  YAZFUNC )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A314E5__ELEV_CONST
*.
*.  MODULE VERSION: 0014
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       09 25 85      0000      Bradley Sutker       RPG Build 3
*.       10 17 88      0001      VALERIE HOLDEN       SPR # 80266
*.       01 09 90      0002      STACY RONALD         SPR # 90697
*.       11 02 90      0003      MARK FRESCH          SPR# 91255
*.       04 01 91      0003      MARK FRESCH          SPR # 91827
*.       10 14 91      0004      EDWARD WENDOWSKI     SPR # 92598
*.       12 03 91      0005      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0006      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0007      Toolset              SPR 91895
*.       03/25/93      0008      Toolset              SPR NA93-06801
*.       01/28/94      0009      Toolset              SPR NA94-01101
*.       03/03/94      0010      Toolset              SPR NA94-05501
*.       04/11/96      0011      Toolset              CCR NA95-11802
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       08/27/97      0013      Cheryl Stephenson    CCR NA97-25502
*.       03/16/99      0014      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A314E5__ELEV_CONST(HDR,COSEL,
*.                                AZ,EL,XAZFUNC,YAZFUNC)
*.
*.  MODULE FUNCTION:
*.
*.     Compute layer boundaries when elevation angle or
*.     range sample interval changes.  Compute Cartesian
*.     mapping parameters that depend on elevation.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT    TYPE        DESCRIPTION
*.    -   -----    ----        -----------
*.    G   AOFFSET1 I*4         (CONSTANT)Offset to angle measurement (first
*.                             half of R*4) in preprocessed radial header.
*.    G   AOFFSET2 I*4         (CONSTANT)Offset to angle measurement (second
*.                             half of R*4) in preprocessed radial header.
*.    G   EOFFSET1 I*4         (CONSTANT)Offset to elevation angle measurement
*.                             (first half of R*4) in preprocessed radial
*.                             header.
*.    G   EOFFSET2 I*4         (CONSTANT)Offset to elevation angle measurement
*.                             (second half of R*4) in preprocessed radial
*.                             header.
*.    G   FT_TO_KM R*4         (CONSTANT)DEFINES THE SCALING FACTOR FOR FEET
*.                             TO KILOMETERS PARAMETERS
*.    G   PHEDSIZE I*4         (CONSTANT)Size of preprocessed base radial
*.                             header.
*.    G   SIOFFSET I*4         (CONSTANT)Offset to surveillance range sample
*.                             interval (meters) in preprocessed radial header
*.                             (relative 1 from beginning).
*.    C   AZRAD    R*4         AZIMUTH ANGLE IN RADIANS
*.    C   INVRSSKM R*4         INVERSE OF RSSKM, IN 1/KM
*.    C   LAYBND0  I*4         The bottom boundary of layer 1
*.    C   LAYBND1  I*4         The top boundary of layer #1 (positive
*.                             Integers).
*.    C   LAYBND2  I*4         The top boundary of layer #2 (positive
*.                             Integers).
*.    C   LAYBND3  I*4         The top boundary of layer #3 (positive
*.                             Integers).
*.    C   RADHGT   I*4         The height of the radar site.
*.    C   RSS      I*4         REFLECTIVITY SAMPLE RANGE INTERVAL IN METERS
*.    C   RSSKM    R*4         REFLECTIVITY SAMPLE RANGE INTERVAL IN KM
*.    C   BOXHGHT  I*4         (CONSTANT)The height (y-direction) of a layer
*.                             composite reflectivity analysis box.
*.    C   BOXWDTH  I*4         (CONSTANT)The width (x-direction) of a layer
*.                             composite reflectivity analysis box.
*.    P   AZ       R*4         AZIMUTH ANGLE IN DEGREES
*.    P   COSEL    R*4         COSINE OF CURRENT ELEVATION ANGLE
*.    P   EL       R*4         ELEVATION ANGLE IN DEGREES
*.    P   HDR      I*2         BASE DATA RADIAL HEADER
*.
*.    *   OUTPUT    TYPE        DESCRIPTION
*.    -   ------    ----        -----------
*.    C   AZRAD     R*4         AZIMUTH ANGLE IN RADIANS
*.    C   INVRSSKM  R*4         INVERSE OF RSSKM, IN 1/KM
*.    C   L1BIN_END I*4         LAST BIN NUMBER IN LAYER 1
*.    C   L1BIN_ST  I*4         First bin number in Layer 1
*.    C   L2BIN_END I*4         LAST BIN NUMBER IN LAYER 2
*.    C   L2BIN_ST  I*4         1ST BIN NUMBER IN LAYER 2
*.    C   L3BIN_END I*4         LAST BIN NUMBER IN LAYER 3
*.    C   L3BIN_ST  I*4         1ST BIN NUMBER IN LAYER 3
*.    C   RSS       I*4         REFLECTIVITY SAMPLE RANGE INTERVAL IN METERS
*.    C   RSSKM     R*4         REFLECTIVITY SAMPLE RANGE INTERVAL IN KM
*.    P   AZ        R*4         AZIMUTH ANGLE IN DEGREES
*.    P   COSEL     R*4         COSINE OF CURRENT ELEVATION ANGLE
*.    P   EL        R*4         ELEVATION ANGLE IN DEGREES
*.    P   XAZFUNC   I*4         ONE OF THE X AXIS CARTESIAN MAPPING PARAMETERS
*.    P   YAZFUNC   I*4         ONE OF THE Y AXIS CARTESIAN MAPPING PARAMETERS
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME      TYPE        DESCRIPTION
*.    ----      ----        -----------
*.    AZE       I*2         DUMMY ARRAY TO RETRIEVE AZIMUTH ANGLE
*.    AZX       R*4         DUMMY AZIMUTH ANGLE IN DEGREES
*.    BENCHEL   R*4         BENCH MARK ELEVATION ANGLE IN DEGREES
*.    BENCHRSS  I*2         BENCH MARK SAMPLE RANGE INTERVAL IN METERS
*.    CONMTOKM  R*4         CONVERSION FACTOR FROM METERS TO KILOMETERS
*.                          (0.001)
*.    CONSTHT   I*4         CART. BOX HEIGHT MAPPING VARIABLE.
*.    CONSTWD   I*4         CART. BOX WIDTH MAPPING VARIABLE.
*.    DEGTORAD  R*4         CONVERSION FACTOR DEGREES TO RADIANS (.0174532)
*.    ELE       I*2         DUMMY ARRAY TO RETRIEVE ELEVATION ANGLE
*.    ELX       R*4         DUMMY ELEVATION ANGLE IN DEGREES
*.    HALFDEG   R*4         PARAMETER VALUE OF 0.5 DEGREES
*.    INREXINR  R*4         INVERSE OF THE EARTH'S RADIUS TIMES THE
*.                          ATMOSPHERIC INDEX OF REFRACTION (.000064860), IN
*.                          1/KM
*.    L0BNDKM   R*4         Bottom of first layer in KM
*.    L1BNDKM   R*4         TOP OF 1ST LAYER, IN KM.
*.    L1KM_END  R*4         SLANT RANGE TO THE LAST BIN IN THE 1ST LAYER IN KM
*.    L1KM_ST   R*4         Slant range to the first bin in Layer 1 in km
*.    L2BNDKM   R*4         TOP OF 2ND LAYER, IN KM.
*.    L2KM_END  R*4         SLANT RANGE TO THE LAST BIN IN THE 2ND LAYER IN KM
*.    L2KM_ST   R*4         SLANT RANGE TO THE 1ST BIN IN THE 2ND LAYER IN KM
*.    L3BNDKM   R*4         TOP OF THE 3RD LAYER, IN KM.
*.    L3KM_END  R*4         SLANT RANGE TO THE LAST BIN IN THE 3RD LAYER IN KM
*.    L3KM_ST   R*4         SLANT RANGE TO THE 1ST BIN IN THE 3RD LAYER IN KM
*.    ONE       I*4         Program parameter value for one used as lower
*.                          index in do loop.
*.    QCNST1    I*4         QUADRATIC EQUATION CONSTANT.
*.    RADHGTKM  R*4         RADAR ALTITUDE IN KM
*.    REX2INR   R*4         RADIUS OF THE EARTH TIMES 2 * THE INDEX OF
*.                          REFRACTION
*.    SCALEFAC  I*4         SCALE FACTOR USED IN CARTESIAN MAPPING
*.    SINEL_MAX R*4         SINE OF THE ELEVATION ANGLE + 0.5 DEG
*.    SINEL_MIN R*4         SINE OF THE ELEVATION ANGLE - 0.5 DEG
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A314C5
*.    A314C6
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
      IMPLICIT NONE
C
$INCLUDE A304.INC/G,**A304P4           (NLIST)
$INCLUDE A309.INC/G,**A3PM50           (NLIST)
$INCLUDE A314.INC,**A314P5             (NLIST)
$INCLUDE A314.INC,**A314C5             (NLIST)
$INCLUDE A314.INC,**A314C6             (NLIST)

C
C Local variable definitions
C
      INTEGER*2 ELE(2),AZE(2)
      INTEGER*2 BENCHRSS/0/,HDR(PHEDSIZE)
      INTEGER QCNST1,XAZFUNC,YAZFUNC
      INTEGER CONSTWD/0/,CONSTHT/0/,SCALEFAC,ONE
      PARAMETER (SCALEFAC=65536)
      REAL COSEL,INREXINR,HALFDEG
      REAL BENCHEL/-1.0/,EL,RADHGTKM,ELX,AZX
      REAL REX2INR,AZ,L1BNDKM,L2BNDKM,L3BNDKM,SINEL_MAX,SINEL_MIN
      REAL L0BNDKM
      REAL L1KM_ST
      REAL L1KM_END,L2KM_ST,L2KM_END,L3KM_ST,L3KM_END
      PARAMETER (INREXINR=0.00006486)
      PARAMETER (HALFDEG = .5)
      PARAMETER (QCNST1=4,REX2INR=7716.049,ONE=1)
C
C
      EQUIVALENCE (ELE(1),ELX),(AZE(1),AZX)
C
C MOVE ELEVATION AND AZIMUTH ANGLES FROM RADIAL HEADER INTO LOCAL
C STORAGE. [STORED IN HEADER AS I*2 - MOVE CONVERTS VALUES TO REAL]
C
      RSS=HDR(SIOFFSET)
      AZE(1)=HDR(AOFFSET1)
      AZE(2)=HDR(AOFFSET2)
      ELE(1)=HDR(EOFFSET1)
      ELE(2)=HDR(EOFFSET2)
C
C CONVERT RSS INTO KILOMETERS AND
C CONVERT AZIMUTH TO RADIANS AND SET ELEVATION ANGLE INTO
C COMMON
C
      RSSKM=RSS*CONMTOKM
      AZ=AZX
      AZRAD=AZ*DEGTORAD
      EL=ELX
C
C Check to see if the elevation angle or the sample interval
C has changed...if either has...re-compute variables
C
      IF ( RSS.NE.BENCHRSS.OR.EL.NE.BENCHEL ) THEN
C
C Convert the radar height above mean sea level, in feet
C to kilometers and the layer boundary also...
C
        RADHGTKM=RADHGT*FT_TO_KM
C
C
        L0BNDKM=LAYBND0*FT_TO_KM

        L1BNDKM=LAYBND1*FT_TO_KM
C
C
        L2BNDKM=LAYBND2*FT_TO_KM
C
C
        L3BNDKM=LAYBND3*FT_TO_KM
C
C
C Compute inverse of reflectivity sample range
C
        INVRSSKM=ONE/(RSSKM)
C
C Convert elevation angle from degrees to radians
C
        SINEL_MAX=SIN((EL + HALFDEG) * DEGTORAD)
        SINEL_MIN=SIN((EL - HALFDEG) * DEGTORAD)
        COSEL=COS(EL*DEGTORAD)
C
        CONSTWD = ((RSS*CONMTOKM*COSEL)/BOXWDTH)*SCALEFAC
        CONSTHT = ((RSS*CONMTOKM*COSEL)/BOXHGHT)*SCALEFAC

C
C Compute the bin number of the 1st bin in the
C first layer
C
        L1KM_ST = ( SQRT((SINEL_MAX*SINEL_MAX)+(QCNST1*INREXINR*
     $            (L0BNDKM-RADHGTKM)))-SINEL_MAX )*REX2INR
        L1BIN_ST = L1KM_ST * INVRSSKM
C
C Compute the bin number of the last bin in the
C first layer
C
        L1KM_END = ( SQRT((SINEL_MIN*SINEL_MIN)+(QCNST1*INREXINR*
     $            (L1BNDKM-RADHGTKM)))-SINEL_MIN )*REX2INR
        L1BIN_END = L1KM_END * INVRSSKM
C
C Compute the bin number of the 1st bin in the
C second layer
C
        L2KM_ST = ( SQRT((SINEL_MAX*SINEL_MAX)+(QCNST1*INREXINR*
     $            (L1BNDKM-RADHGTKM)))-SINEL_MAX )*REX2INR
        L2BIN_ST = L2KM_ST * INVRSSKM
C
C Compute the bin number of the last bin in the
C second layer
C
        L2KM_END = ( SQRT((SINEL_MIN*SINEL_MIN)+(QCNST1*INREXINR*
     $            (L2BNDKM-RADHGTKM)))-SINEL_MIN )*REX2INR
        L2BIN_END = L2KM_END * INVRSSKM
C
C COMPUTE THE BIN NUMBER OF THE FIRST BIN IN THE THIRD LAYER
C
        L3KM_ST = ( SQRT((SINEL_MAX*SINEL_MAX)+(QCNST1*INREXINR*
     $              (L2BNDKM-RADHGTKM)))-SINEL_MAX )*REX2INR
        L3BIN_ST = L3KM_ST * INVRSSKM
C
C COMPUTE THE BIN NUMBER OF THE LAST BIN IN THE THIRD LAYER
C
        L3KM_END = ( SQRT((SINEL_MIN*SINEL_MIN)+(QCNST1*INREXINR*
     $              (L3BNDKM-RADHGTKM)))-SINEL_MIN)*REX2INR
        L3BIN_END = L3KM_END * INVRSSKM
C
C Set current elevation to the "bench-mark" elevation
C and the current slant range spacing to "bench-mark"
C
        BENCHEL=EL
        BENCHRSS=RSS
      END IF
X     IF(AZ.GT.0..AND.AZ.LT.2.)THEN
X        WRITE(14,*)'E5:RADHGT = ',RADHGT,' RADHGT IN KM =',RADHGTKM
X        WRITE(14,*)'E5: AZ= ',AZ,' EL= ',EL,'SINEL_MIN,= ',SINEL_MIN,
X    $        'SINEL_MAX =',SINEL_MAX
X        WRITE(14,*)'E5:LAYBND0 =',LAYBND0,' L0BNDKM =',L0BNDKM
X        WRITE(14,*)'E5:LAYBND1 =',LAYBND1,' L1BNDKM =',L1BNDKM
X       WRITE (14,*)'E5: RSS = ',RSS,' RSS IN KM = ',' INVR = ',
X    $   INVRSSKM
X       WRITE(14,*)'E5:L1BIN_ST = ',L1BIN_ST,' L1BIN_END = ',L1BIN_END
X       WRITE(14,*)'E5:L2BIN_ST = ',L2BIN_ST,' L2BIN_END = ',L2BIN_END
X       WRITE(14,*)'E5:L3BIN_ST = ',L3BIN_ST,' L3BIN_END = ',L3BIN_END
X       ENDIF
C
C Compute Cartesian mapping parameters
C
      XAZFUNC = INT(SIN(AZRAD)*CONSTWD)
      YAZFUNC = INT(COS(AZRAD)*CONSTHT)
C
      RETURN
      END
