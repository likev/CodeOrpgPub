C 
C RCS info 
C $Author: nolitam $ 
C $Locker:  $ 
C $Date: 2002/11/27 15:15:00 $ 
C $Id: a314c5.ftn,v 1.3 2002/11/27 15:15:00 nolitam Exp $ 
C $Revision: 1.3 $ 
C $State: Exp $ 
C 
      SUBROUTINE A314C5__AVG_LAYERS(PBUFSIZ,BUFSIZ,NSOPR,SOPRX,NPROD,
     $   POPRX,LAYTYPE,LAY,LAYCODE)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A314C5__AVG_LAYERS
*.
*.  MODULE VERSION: 0011
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       10 17 88      0000      VALERIE HOLDEN       SPR # 80266
*.       04 17 90      0001      PAUL PISANI          SPR # 90697
*.       02 14 91      0002      MARK FRESCH          SPR # 91255
*.       12 03 91      0003      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0004      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0005      Toolset              SPR 91895
*.       03/25/93      0006      Toolset              SPR NA93-06801
*.       01/28/94      0007      Toolset              SPR NA94-01101
*.       03/03/94      0008      Toolset              SPR NA94-05501
*.       04/11/96      0009      Toolset              CCR NA95-11802
*.       12/23/96      0010      Toolset              CCR NA95-11807
*.       03/16/99      0011      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A314C5__AVG_LAYERS(PBUFSIZ,BUFSIZ,
*.                      NSOPR,SOPRX,NPROD,POPRX,LAYTYPE,LAY,LAYCODE)
*.
*.  MODULE FUNCTION:
*.
*.     OBTAIN OUTPUT AND SCRATCH BUFFERS FOR LAYER COMPOSITE
*.     REFLECTIVITY AVERAGE LAYERS 1-3
*.
*.  MODULES CALLED: A31169__ABORT_DATATYPE_BECAUSE, A31215__GET_OUTBUF, 
*.                  A31216__REL_OUTBUF 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT         TYPE        DESCRIPTION
*.    -   -----         ----        -----------
*.    G   DESTROY       I*4         (CONSTANT)Mnemonic used as input to
*.                                  A31216__REL_OUTBUF. Indicates "do not pass
*.                                  data to other tasks".
*.    G   NORMAL        I*4         (CONSTANT)Parameter which indicates normal
*.                                  completion of requested operation to
*.                                  acquire input or output buffer
*.    G   NO_MEM        I*4         (CONSTANT)Parameter which indicates no
*.                                  memory available on attempt to acquire
*.                                  output buffer
*.    G   PROD_MEM_SHED I*4         (CONSTANT)(CONSTANT)Parameter which
*.                                  indicates that product aborted due to
*.                                  memory load shedding
*.    G   SCRATCH       I*4         (CONSTANT)DATA BUFFER TYPE FOR TASK
*.                                  SCRATCH DATA BUFFERS
*.    C   LAYAVG        I*4         (CONSTANT)Flag signifying an "avg" type
*.                                  product.
*.    C   LAYER1        I*4         (CONSTANT)Flag signifying the lowest
*.                                  layer.
*.    C   LAYER2        I*4         (CONSTANT)Flag signifying the middle
*.                                  layer.
*.    C   LAYER3        I*4         (CONSTANT)Flag signifying the highest
*.                                  layer
*.    C   MAXBUFS       I*4         (CONSTANT)The maximum number of scratch
*.                                  buffers required when the maximum number
*.                                  of products is requested.
*.    C   MAXPRODS      I*4         (CONSTANT)The maximum number of products
*.                                  per volume.
*.    P   BUFSIZ        I*4         MAXIMUM SCRATCH BUFFER SIZE
*.    P   NPROD         I*4         NUMBER OF REQUESTED PRODUCTS
*.    P   NSOPR         I*4         TOTAL NUMBER OF REQUESTED SCRATCH BUFFERS
*.    P   PBUFSIZ       I*4         MAXIMUM PRODUCT OUTPUT BUFFER
*.    P   SOPRX         I*4         ARRAY OF SCRATCH BUFFER ADDRESSES
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   LAY     I*4         ARRAY OF MAXIMUM OR AVERAGE PRODUCT FLAGS
*.    P   LAYCODE I*4         Array of product codes for Layer Composite
*.                            Reflectivity products
*.    P   LAYTYPE I*4         ARRAY OF MAXIMUM OR AVERAGE PRODUCT FLAGS
*.    P   NPROD   I*4         NUMBER OF REQUESTED PRODUCTS
*.    P   NSOPR   I*4         TOTAL NUMBER OF REQUESTED SCRATCH BUFFERS
*.    P   POPRX   I*4         ARRAY OF PRODUCT OUTPUT ADDRESSES
*.    P   SOPRX   I*4         ARRAY OF SCRATCH BUFFER ADDRESSES
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   BUFSIZ            I*4         MAXIMUM SCRATCH BUFFER SIZE
*.    P   PBUFSIZ           I*4         MAXIMUM PRODUCT OUTPUT BUFFER
*.    P   SOPRX             I*4         ARRAY OF SCRATCH BUFFER ADDRESSES
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME      TYPE        DESCRIPTION
*.    ----      ----        -----------
*.    I         I*4         Do loop index.
*.    INC1      I*4         INCREMENTAL VALUE OF 1
*.    LAYER     I*4         ARRAY OF LAYER LEVEL FLAGS
*.    MSGCDAVG  I*4         ARRAY OF PRODUCT MESSAGE CODE
*.    NUM1      I*4         Lowest layer level of flag array.
*.    NUM2      I*4         Middle layer level of flag array.
*.    NUM3      I*4         Highest layer level of flag array.
*.    NUM_PRODS I*4         NUMBER OF PRODUCTS
*.    OSTAT     I*4         Return status of call to A31215 to get output
*.                          buffer
*.    POPR      I*4         PRODUCT OUTBUT BUFFER POINTER
*.    PRDCDAVG  I*4         ARRAY OF BUFFER NAMES
*.    RFAVLYR1  I*4         Data Buffer Type: Layer Composite Reflectivity
*.                          Product (1x1).
*.    RFAVLYR2  I*4         Data Buffer Type: Layer Composite Reflectivity
*.                          Product (2x2).
*.    RFAVLYR3  I*4         Data buffer type: layer composite reflectivity
*.                          product (3x3).
*.    SOPR      I*4         SCRATCH OUTPUT BUFFER POINTER
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS:  NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C***********************************************************
C*
C*
      IMPLICIT NONE
C*
$INCLUDE A309.INC/G,**A3PM00 (NEND NLIST)
$INCLUDE            **A3PM07 (NEND NLIST)
$INCLUDE A314.INC,**A314P5   (NEND NLIST)
$INCLUDE A314.INC,**A314C5   (NEND NLIST)
C*
      INTEGER*4    PBUFSIZ,NSOPR,SOPRX(MAXBUFS),NPROD,POPRX(MAXPRODS)
      INTEGER*4    NUM1,NUM2,NUM3,INC1,NUM_PRODS
      INTEGER*4    LAYTYPE(MAXPRODS),LAY(MAXPRODS),LAYCODE(MAXPRODS)
      INTEGER*4    OSTAT,MSGCDAVG(3),PRDCDAVG(3),LAYER(3),POPR,SOPR
      INTEGER*4    BUFSIZ,I
      PARAMETER    (NUM1=1,NUM2=2,NUM3=3,INC1=1,NUM_PRODS=3)
      DATA         MSGCDAVG/63,64,89/
C
X     TYPE *,'25 : A314C5 START'
C*
C*    DEFINE THE PRODUCT CODE BUFFER NAMES FOR LAYER COMPOSITE
C*       REFLECTIVITY AVERAGE LAYERS AND SAVE LOCAL LAYER 1-3 VALUES
C*
      PRDCDAVG(NUM1) = RFAVLYR1
      PRDCDAVG(NUM2) = RFAVLYR2
      PRDCDAVG(NUM3) = RFAVLYR3
      LAYER(NUM1) = LAYER1
      LAYER(NUM2) = LAYER2
      LAYER(NUM3) = LAYER3
C*
C*    REFLECTIVITY LAYER #1-3 MAXIMUM
C*    GET OUTPUT BUFFERS FOR EACH LAYER
C*
      DO 10 I = NUM1,NUM_PRODS
         CALL A31215__GET_OUTBUF(PRDCDAVG(I),PBUFSIZ,POPR,OSTAT)
         IF (OSTAT.EQ.NORMAL) THEN
X           TYPE *,'26 : A314C5 OUTPUT PRODUCT BUFFER OBTAINED'
C*
C*    GET 1ST OUTPUT SCRATCH BUFFER FOR EACH LAYER
C*
            CALL A31215__GET_OUTBUF(SCRATCH,BUFSIZ,SOPR,OSTAT)
            IF (OSTAT.EQ.NORMAL) THEN
X              TYPE *,'27 : A314C5 1ST SCRATCH BUFFER OBTAINED'
               NSOPR = NSOPR + INC1
               SOPRX(NSOPR) = SOPR
C*
C*     GET 2ND OUTPUT SCRATCH BUFFER FOR EACH LAYER
C*
               CALL A31215__GET_OUTBUF(SCRATCH,BUFSIZ,SOPR,OSTAT)
               IF (OSTAT.EQ.NORMAL) THEN
X                 TYPE *,'28 : A314C5 2ND SCRATCH BUFFER OBTAINED'
C*
C*    IF ABLE TO GET BUFFER, ADD 1 TO NUMBER OF SCRATCH BUFFERS
C*
                  NSOPR = NSOPR + INC1
                  SOPRX(NSOPR) = SOPR
                  NPROD = NPROD + INC1
                  POPRX(NPROD) = POPR
                  LAYTYPE(NPROD) = LAYAVG
                  LAY(NPROD) = LAYER(I)
                  LAYCODE(NPROD) = MSGCDAVG(I)
C*
C*    NO SCRATCH BUFFER AVAILABLE, DELETE PRODUCT BUFFER
C*
               ELSE
X                 TYPE *,'29 : A314C5 NO SCATCH BUFFER AVAILABLE'
                  CALL A31216__REL_OUTBUF(POPR,DESTROY)
                  CALL A31216__REL_OUTBUF(SOPRX(NSOPR),DESTROY)
                  NSOPR = NSOPR - INC1
C*
C*    CHECK TO DETERMINE IF REASON CODE IS NO MEMORY AND
C*    IF SO ABORT TASK WITH 'NO_MEM' CODE
C*
                  IF (OSTAT.EQ.NO_MEM) THEN
X                    TYPE *,'30 : A314C5 ABORT DUE TO NO MEMORY'
                     CALL A31169__ABORT_DATATYPE_BECAUSE(PRDCDAVG(I),
     $               PROD_MEM_SHED)
                  ENDIF
               ENDIF
            ELSE
X              TYPE *,'31 : A314C5 ---'
               CALL A31216__REL_OUTBUF(POPR,DESTROY)
C*
C*    CHECK TO DETERMINE IF REASON CODE IS NO MEMORY AND
C*    IF SO ABORT TASK WITH 'NO_MEM' CODE
C*
               IF (OSTAT.EQ.NO_MEM) THEN
X                 TYPE *,'32 : A314C5 ABORT DUE TO NO MEMORY'
                  CALL A31169__ABORT_DATATYPE_BECAUSE(PRDCDAVG(I),
     $            PROD_MEM_SHED)
               ENDIF
            ENDIF
         ELSE
X           TYPE *,'33 : A314C5 ---'
C*
C*    NO MEMORY STATUS RETURNED...ABORT DATATYPE
C*
            IF (OSTAT.EQ.NO_MEM) THEN
X              TYPE *,'34 : A314C5 ABORT DUE TO NO MEMORY'
               CALL A31169__ABORT_DATATYPE_BECAUSE(PRDCDAVG(I),
     $              PROD_MEM_SHED)
            ENDIF
         ENDIF
 10   CONTINUE
X     TYPE *,'35 : A314C5 END'
      RETURN
      END
