C 
C RCS info 
C $Author: nolitam $ 
C $Locker:  $ 
C $Date: 2002/11/27 15:15:07 $ 
C $Id: a314f5.ftn,v 1.3 2002/11/27 15:15:07 nolitam Exp $ 
C $Revision: 1.3 $ 
C $State: Exp $ 
C 
      SUBROUTINE A314F5__LAY_REF_MAP(HDR,AZ,EL,LAYER,
     $ LAYSTART,LAYEND,LAYTYPE)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A314F5__LAY_REF_MAP
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       09 25 85      0000      Bradley Sutker       RPG Build 3
*.       10 17 88      0001      VALERIE HOLDEN       SPR # 80266
*.       04 17 90      0002      PAUL PISANI          SPR # 90697
*.       02 22 91      0003      MARK FRESCH          SPR# 91255
*.       02 13 91      0003      PAUL JENDROWSKI      SPR # 91759
*.       04 01 91      0003      MARK FRESCH          SPR # 91827
*.       12 03 91      0004      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0005      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0006      Toolset              SPR 91895
*.       03/25/93      0007      Toolset              SPR NA93-06801
*.       01/28/94      0008      Toolset              SPR NA94-01101
*.       03/03/94      0009      Toolset              SPR NA94-05501
*.       04/11/96      0010      Toolset              CCR NA95-11802
*.       12/23/96      0011      Toolset              CCR NA95-11807
*.       08/27/97      0012      CHERYL STEPHENSON    CCR NA97-25502
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A314F5__LAY_REF_MAP(HDR,AZ,EL,LAYER,
*.                    ,LAYSTART,LAYEND,LAYTYPE)
*.
*.  MODULE FUNCTION:
*.
*.     Determine the start and end of the particular layer.
*.     Compute the maximum analysis range based on the azimuth.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT     TYPE        DESCRIPTION
*.    -   -----     ----        -----------
*.    G   NSOFFSET  I*4         (CONSTANT)Offset to number of surveillance
*.                              bins in preprocessed radial header (relative 1
*.                              from beginning) in halfwords.
*.    G   PHEDSIZE  I*4         (CONSTANT)Size of preprocessed base radial
*.                              header.
*.    G   RGFSBOFF  I*4         (CONSTANT)Offset to range to first
*.                              surveillance bin (in bins) in preprocessed
*.                              radial header (relative 1 from beginning).
*.    C   AZRAD     R*4         AZIMUTH ANGLE IN RADIANS
*.    C   INVRSSKM  R*4         INVERSE OF RSSKM, IN 1/KM
*.    C   L1BIN_END I*4         LAST BIN NUMBER IN LAYER 1
*.    C   L1BIN_ST  I*4         First bin number in Layer 1
*.    C   L2BIN_END I*4         LAST BIN NUMBER IN LAYER 2
*.    C   L2BIN_ST  I*4         1ST BIN NUMBER IN LAYER 2
*.    C   L3BIN_END I*4         LAST BIN NUMBER IN LAYER 3
*.    C   L3BIN_ST  I*4         1ST BIN NUMBER IN LAYER 3
*.    C   RANGE     I*4         The maximum analysis slant range (0-230 km).
*.    C   LAYER1    I*4         (CONSTANT)Flag signifying the lowest layer.
*.    C   LAYER2    I*4         (CONSTANT)Flag signifying the middle layer.
*.    C   LAYER3    I*4         (CONSTANT)Flag signifying the highest layer
*.    P   AZ        R*4         The azimuth angle, in deg..
*.    P   HDR       I*2         The base data radial header.
*.    P   LAYEND    I*4         The end bin number of the current layer.
*.    P   LAYER     I*4         MAX OR AVERAGE PRODUCT FLAG VALUE
*.    P   LAYSTART  I*4         The start bin number of the current layer.
*.
*.    *   OUTPUT   TYPE        DESCRIPTION
*.    -   ------   ----        -----------
*.    P   LAYEND   I*4         The end bin number of the current layer.
*.    P   LAYSTART I*4         The start bin number of the current layer.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME    TYPE        DESCRIPTION
*.    ----    ----        -----------
*.    INC1    I*4         INCREMENTAL VALUE OF 1
*.    KMTHRSH I*4         THRESHOLD KM VALUE = 4
*.    LASTBIN I*4         LAST RADIAL BIN NUMBER
*.    NE      R*4         A value of 45.0 deg..
*.    NLABIN  I*2         NUMBER OF LAST BIN
*.    NSTBIN  I*2         NUMBER OF START BIN
*.    NW      R*4         A value of 315.0 deg..
*.    ONE     I*4         PROGRAM LOOP VALUE = 1
*.    RADEND  R*4         The maximum analysis range for a particular azimuth
*.                        angle, in KM
*.    SE      R*4         A value of 135.0 deg..
*.    SW      R*4         Parameter for SW quadrant (225 degrees)
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A314C5
*.    A314C6
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
      IMPLICIT NONE
C
$INCLUDE A304.INC/G,**A304P4           (NLIST)
$INCLUDE A314.INC,**A314P5             (NLIST)
$INCLUDE A314.INC,**A314C5             (NLIST)
$INCLUDE          **A314C6             (NLIST)
C
C  Local declarations
C
      REAL AZ,EL
      REAL NW,NE,SE,SW,RADEND
      INTEGER LAYSTART,LAYEND,LASTBIN
      INTEGER LAYER,LAYTYPE,INC1,ONE,KMTHRSH
      INTEGER*2 HDR(PHEDSIZE),NSTBIN,NLABIN
      PARAMETER (INC1=1,ONE=1)
C
C Local data declarations
C
      DATA KMTHRSH /4/
      DATA NW /315./, NE /45./, SE /135./, SW /225./
C
* START OF EXECUTABLE
C   DELETED CALCULATION OF AZRAD SINCE DONE IN A314E5 AND IS
C   A PASSED PARMETER
C
C Get radial header information for first and last bins.
C
      NSTBIN=HDR(RGFSBOFF)
      NLABIN=HDR(NSOFFSET)+NSTBIN-INC1
X          IF(AZ.GT.0..AND.AZ.LT.2.)THEN
X     TYPE *,'F5: FIRST BIN = ',NSTBIN,' LAST BIN = ',NLABIN,
X    ,  ' FOR AZ = ',AZ,' AND EL = ',EL
X     TYPE *,'F5: AZRAD = ',AZRAD,' RSS = ',RSS,' RSS IN KM = ',RSSKM
X     TYPE *,'F5: INVR = ',INVRSSKM
X          ENDIF
C
C Determine ending slant range at this azimuth to produce
C a square product
C
C If northern quadrant
C
      IF ( AZ.GT.NW.OR.AZ.LE.NE ) THEN
        RADEND=RANGE/COS(AZRAD)
C
C If eastern quadrant
C
      ELSE IF ( AZ.GT.NE.AND.AZ.LE.SE ) THEN
        RADEND=RANGE/SIN(AZRAD)
C
C If southern quadrant
C
      ELSE IF ( AZ.GT.SE.AND.AZ.LE.SW ) THEN
        RADEND= (-ONE)*(RANGE/COS(AZRAD))
C
C If western quadrant
C
      ELSE
        RADEND= (-ONE)*(RANGE/SIN(AZRAD))
      END IF
C
C Determine the last analysis bin for this radial
C
      LASTBIN=RADEND*INVRSSKM
C
C Start layer 4 km out to prevent summation index from overflowing
C due to the large number of bins falling in the closest 4
C analysis boxes.
C
      LAYSTART=KMTHRSH*INVRSSKM
      LAYEND=LASTBIN
X     IF(AZ.GT.0..AND.AZ.LT.2.)THEN
X     IF(LAYER .EQ. LAYER1)TYPE *,'F5: FOR LAYER1 1ST LAYSTART= ',
X    &  LAYSTART,' LAYEND = ',LAYEND
X      ENDIF
C
C Check to see if in lower layer
C
      IF ( LAYER.EQ.LAYER1 ) THEN
        IF(L1BIN_ST .GT. LAYSTART) THEN
           LAYSTART=L1BIN_ST
X          IF(AZ.GT.0..AND.AZ.LT.2.)THEN
X            TYPE *,'F5: LAYSTART = L1BIN_ST = ',LAYSTART
X          ENDIF
        ENDIF
C
C If the first good bin is greater than the boundary bin
C number...set the layer start to the start bin number
C
        IF ( NSTBIN.GT.LAYSTART ) THEN
           LAYSTART=NSTBIN
X          IF(AZ.GT.0..AND.AZ.LT.2.)THEN
X          TYPE *,'F5: LAYSTART = NSTBIN = ',LAYSTART
X          ENDIF
        ENDIF
C
C If the last bin is greater than the boundary bin of the
C first layer...set the layer end to
C the boundary bin
C
        IF ( LAYEND.GT.L1BIN_END ) THEN
           LAYEND=L1BIN_END
        ENDIF
C
C If the last good bin is before the layer
C boundary...set the layer end to the last good bin
C
        IF ( NLABIN.LT.LAYEND ) THEN
           LAYEND=NLABIN
        ENDIF
X     IF(AZ.GT.0..AND.AZ.LT.2.)TYPE *,'F5:END LAYSTART=',LAYSTART,
X    & ' LAYEND =',LAYEND,' FOR LAYER 1'
C
C Otherwise, middle layer
C
      ELSE IF ( LAYER.EQ.LAYER2 ) THEN
        LAYSTART=L2BIN_ST
C
C If the first good bin is greater than the boundary bin
C number...set the layer start to the start bin number
C
        IF ( NSTBIN.GT.LAYSTART ) THEN
           LAYSTART=NSTBIN
        ENDIF
C
C Check to see if the last bin is above the second layer
C if it is...set it to the bin number of the boundary bin
C
        IF ( LAYEND.GT.L2BIN_END ) THEN
           LAYEND=L2BIN_END
        ENDIF
C
C If the last good bin is before the layer
C end...set the layer end to the last good bin
C
        IF ( NLABIN.LT.LAYEND ) THEN
           LAYEND=NLABIN
        ENDIF
X     IF(AZ.GT.0..AND.AZ.LT.2.)TYPE *,'F5:END LAYSTART=',LAYSTART,
X    & ' LAYEND =',LAYEND,' FOR LAYER 2'
C
C*    OTHERWISE, UPPER LAYER
C
      ELSE IF (LAYER.EQ.LAYER3) THEN
        LAYSTART = L3BIN_ST
C*
C*    IF FIRST GOOD BIN IS GREATER THAT BOUNDARY BIN NUMBER, SET
C*      THE LAYER START TO THE START BIN NUMBER
C*
        IF (NSTBIN.GT.LAYSTART) THEN
           LAYSTART=NSTBIN
        ENDIF
C*
C*    CHECK TO SEE IF THE LAST BIN IS ABOVE THE SECOND LAYER, IF
C*      IT IS, SET IT TO THE BIN NUMBER OF THE BOUNDARY BIN
C*
        IF ( LAYEND.GT.L3BIN_END ) THEN
           LAYEND=L3BIN_END
        ENDIF
C*
C*    IF THE LAST GOOD BIN IS BEFORE THE LAYER END, SET LAYER END
C*      TO THE LAST GOOD BIN
C*
        IF (NLABIN.LT.LAYEND) THEN
           LAYEND=NLABIN
        ENDIF
X     IF(AZ.GT.0..AND.AZ.LT.2.)TYPE *,'F5:END LAYSTART=',LAYSTART,
X    & ' LAYEND =',LAYEND,' FOR LAYER 3'
      END IF
C
      RETURN
      END
