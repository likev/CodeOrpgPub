C 
C RCS info 
C $Author: steves $ 
C $Locker:  $ 
C $Date: 2004/01/12 16:45:43 $ 
C $Id: a3146g.ftn,v 1.6 2004/01/12 16:45:43 steves Exp $ 
C $Revision: 1.6 $ 
C $State: Exp $ 
C 
      SUBROUTINE A3146G__BLOCK3_HEADER (PRODBUF,B3HDROFF,B3STIDX,
     $                                  PRODCODE,VSNUM,SB_VALUE)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3146G__BLOCK3_HEADER
*.
*.  MODULE VERSION: 0012
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       06/01/89      0000      BRADLEY SUTKER       SPR# 90348
*.       02 14 91      0001      PAUL JENDROWSKI      SPR# 91255
*.       12 03 91      0002      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0003      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0004      Toolset              SPR 91895
*.       03/25/93      0005      Toolset              SPR NA93-06801
*.       01/28/94      0006      Toolset              SPR NA94-01101
*.       03/03/94      0007      Toolset              SPR NA94-05501
*.       04/01/95      0008      Toolset              CCR NA95-11802
*.       06/02/95      0009      R. RIERSON           CCR NA94-35301
*.       12/23/96      0010      Toolset              CCR NA95-11807
*.       03/16/99      0011      Toolset              CCR NA98-23803
*.       06/30/03      0012      Cham Pham            CCR NA02-06508
*.
*.  CALLING SEQUENCE: CALL A3146G__BLOCK3_HEADER (PRODBUF,B3HDROFF,
*.                    B3STIDX,PRODCODE,VSNUM)
*.
*.  MODULE FUNCTION: BUILDS BLOCK3 HEADER FOR
*.                   PRODUCTS 78 & 81 (1-HR. ACCUMULATION AND
*.                   STORM TOTAL) .
*.
*.  MODULES CALLED: A3CM25__GET_DATE_TIME 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT      TYPE        DESCRIPTION
*.    -   -----      ----        -----------
*.    G   SIRDAHGT   I*4         Site Adaptation - RDA Height.
*.    G   SIRDALAT   I*4         Site Adaptation - RDA Latitude.
*.    G   SIRDALON   I*4         Site Adaptation - RDA Longitude.
*.    G   SIRPGID    I*4         Site Adaptation - RPG ID Number.
*.    G   SUMMARY    I*4         Volume Scan Summary Table
*.    G   DIV1OFF    I*4         (CONSTANT)Product header offset: First
*.                               divider.
*.    G   GDPRDOFF   I*4         (CONSTANT)Product header offset: generation
*.                               date of product.
*.    G   GTLSWOFF   I*4         (CONSTANT)Product header offset:Generation
*.                               time of product (LSW).
*.    G   GTMSWOFF   I*4         (CONSTANT)Product header offset. Generation
*.                               time of product (MSW).
*.    G   LNLSWOFF   I*4         (CONSTANT)Product header offset: Longitude of
*.                               radar (LSW).
*.    G   LNMSWOFF   I*4         (CONSTANT)Product header offset: Longitude of
*.                               radar (MSW).
*.    G   LTLSWOFF   I*4         (CONSTANT)Product header offset: Latitude of
*.                               radar (LSW).
*.    G   LTMSWOFF   I*4         (CONSTANT)Product header offset: Latitude of
*.                               radar (MSW)
*.    G   MESCDOFF   I*4         (CONSTANT)Product header offset: Message
*.                               code.
*.    G   NBLKSOFF   I*4         (CONSTANT)Product header offset: Number of
*.                               blocks in product.
*.    G   NMAPSOFF   I*4         (CONSTANT)Product header offset descriptions:
*.                               Number of maps.
*.    G   OPRLSWOFF  I*4         (CONSTANT)Product header offset descriptions:
*.                               Offset to product length (LSW)
*.    G   OPRMSWOFF  I*4         (CONSTANT)Product header offset descriptions:
*.                               Offset to product length (MSW)
*.    G   OTADLSWOFF I*4         (CONSTANT)Product header offset: offset to
*.                               tabular/adaptation data (LSW)
*.    G   PHEADLNG   I*4         (CONSTANT)Number of half words in product
*.                               header (its length).
*.    G   PRDCODOFF  I*4         (CONSTANT)Product header offset descriptions:
*.                               Product code.
*.    G   RADHGTOFF  I*4         (CONSTANT)Product header offset descriptions:
*.                               Height of radar.
*.    G   SCAN_DATE  I*4         (CONSTANT)Volume Scan Date index into Scan
*.                               Summary Table
*.    G   SCAN_MODE  I*4         (CONSTANT)Weather Mode index into Scan
*.                               Summary Table
*.    G   SCAN_TIME  I*4         (CONSTANT)Volume Scan Time index into Scan
*.                               Summary Table
*.    G   SCAN_VCP   I*4         (CONSTANT)Volume Coverage Pattern index into
*.                               Scan Summary Table
*.    G   SRCIDOFF   I*4         (CONSTANT)Product header offset: Source
*.                               ID-Number.
*.    G   VCPOFF     I*4         (CONSTANT)Product header offset:  Volume
*.                               coverage pattern.
*.    G   VSDATOFF   I*4         (CONSTANT)Product header offset: Volume scan
*.                               date.
*.    G   VSNUMOFF   I*4         (CONSTANT)Product header offset descriptions:
*.                               Volume scan number.
*.    G   VSTLSWOFF  I*4         (CONSTANT)Product header offset: Volume scan
*.                               time (LSW).
*.    G   VSTMSWOFF  I*4         (CONSTANT)Product header offset:  Volume scan
*.                               time (MSW).
*.    G   WTMODOFF   I*4         (CONSTANT)Product header offset:  Weather
*.                               mode.
*.    P   B3HDROFF   I*4         START INDEX OF BLOCK 3 HEADER
*.    P   B3STIDX    I*4         START INDEX OF BLOCK 3
*.    P   PRODCODE   I*4         PRODUCT CODE
*.    P   SB_VALUE   I*4         Spot Blanking flag
*.    P   VSNUM      I*4         VOLUME SCAN NUMBER (1-80)
*.    C   CODE_1HR        I*4         (CONSTANT)1 HR. Accumulation product
*.                                    code
*.    C   CODE_STT        I*4         (CONSTANT)Storm total accumulation
*.                                    product code.
*.
*.    *   OUTPUT   TYPE        DESCRIPTION
*.    -   ------   ----        -----------
*.    P   B3HDROFF I*4         START INDEX OF BLOCK 3 HEADER
*.    P   PRODBUF  I*2         PRODUCT BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE: None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME    TYPE        DESCRIPTION
*.    ----    ----        -----------
*.    B3IDCX  I*4         Paired alpanumeric product code
*.    BLK3ID  I*4         Block 3 ID
*.    CLEAR   I*4         Parameter for initializing to 0
*.    DIVIDER I*4         Parameter for layer divider
*.    GDATE   I*4         Generation date
*.    GTIME   I*4         Generation time of product.
*.    I       I*4         Do-loop index for initializing buffer
*.    NBLKS   I*4         Number of blocks
*.    NI2     I*4         (Constant) dimension for I2A.
*.    OB3BKID I*4         Offset for block ID
*.    OB3DIV1 I*4         Offset for block 3 divider
*.    OB3LLSW I*4         Offset to start of header
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A3CD05
*.    SITEADP
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.    THIS MODULE IS COMPILED USING COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.    THIS MODULE IS LINKED USING LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************

C
C...'X' IN COLUMN-1 INDICATES CONDITIONALLY COMPILED DEBUG CODE...
C
      IMPLICIT NONE
C
$INCLUDE A309.INC/G,    **A3PM00   (NEND NLIST)
$INCLUDE                **A3PM01   (NEND NLIST)
$INCLUDE                **A3PM06   (NEND NLIST)
$INCLUDE                **A3CD05   (NEND NLIST)
$INCLUDE A309ADPT.INC/G,**A3CD70CA (NEND NLIST)
$INCLUDE A3146.INC/G, **A3146P1 (NEND NLIST)
C
      INTEGER*2 PRODBUF(*)
      INTEGER   PRODCODE, VSNUM
C
      INTEGER      DIVIDER,CLEAR,NI2,NBLKS,I,GDATE,GTIME
      PARAMETER  ( DIVIDER=-1,CLEAR=0,NI2=2, NBLKS=2 )
C
      INTEGER SB_VALUE
      INTEGER B3STIDX, B3IDCX, BLK3ID, B3HDROFF,
     &        OB3DIV1, OB3BKID, OB3LLSW
      PARAMETER (OB3DIV1=0, OB3BKID=1, OB3LLSW=3, B3IDCX=29, BLK3ID=3)
C
C** SET UP BIT MASK TO DEFINE ORPG BUILD 5 GRAPHIC PPS PRODUCT VERSION #
C
      INTEGER IOR
      INTEGER*2 VERSION1
      PARAMETER(VERSION1=X'0100')
C
C-----------------
C     EXECUTABLE
C-----------------
C
C
C  SET UP THE HEADER PORTION OF BLOCK-3:
C
      PRODBUF(B3STIDX+OB3DIV1) = DIVIDER
      PRODBUF(B3STIDX+OB3BKID) = BLK3ID
C
C  COMPUTE OFFSET TO START OF HEADER AND CLEAR BUFFER CONTENTS
C
      B3HDROFF = B3STIDX + OB3LLSW
      DO 10 I=MESCDOFF, OTADLSWOFF
         PRODBUF(B3HDROFF+I) = CLEAR
   10 CONTINUE
C
C  SET PRODUCT CODE AND RPG-ID
C
      PRODBUF(B3HDROFF+ MESCDOFF) = PRODCODE+B3IDCX
      PRODBUF(B3HDROFF+ SRCIDOFF) = SIRPGID
      PRODBUF(B3HDROFF+ NBLKSOFF) = NBLKS
      PRODBUF(B3HDROFF+ DIV1OFF ) = DIVIDER
C
C  GET RDA LATITUDE
C
      call RPG_set_product_int( PRODBUF(B3HDROFF+ LTMSWOFF), SIRDALAT )
C
C  GET RDA LONGITUDE
C
      call RPG_set_product_int( PRODBUF(B3HDROFF+ LNMSWOFF), SIRDALON )
C
C  GET RDA HEIGHT
C
      PRODBUF(B3HDROFF+ RADHGTOFF)= SIRDAHGT
C
      PRODBUF(B3HDROFF+ PRDCODOFF)= PRODCODE+B3IDCX
C
C  USE SUMMARY TABLE TO GET VOLUME SCAN MODE, DATE AND TIME
C
      PRODBUF(B3HDROFF+ WTMODOFF) = SUMMARY(SCAN_MODE,VSNUM)
      PRODBUF(B3HDROFF+ VCPOFF  ) = SUMMARY(SCAN_VCP,VSNUM)
      PRODBUF(B3HDROFF+ VSNUMOFF) = VSNUM
      PRODBUF(B3HDROFF+ VSDATOFF) = SUMMARY(SCAN_DATE,VSNUM)
C
      call RPG_set_product_int( PRODBUF(B3HDROFF+ VSTMSWOFF),
     1                          SUMMARY(SCAN_TIME,VSNUM) )
C
C  GET GENERATION DATE AND TIME
C
      CALL A3CM25__GET_DATE_TIME(GDATE,GTIME)
      PRODBUF(B3HDROFF+ GDPRDOFF )= GDATE
C
      call RPG_set_product_int( PRODBUF(B3HDROFF+ GTMSWOFF), GTIME )
C
C**** SET SPOT BLANK STATUS
C
      PRODBUF(B3HDROFF+ NMAPSOFF)= SB_VALUE
C
C** DEFINE ORPG BUILD 5 FOR OHP & STP PAIRED ALPHANUMERIC 
C** VERSION NUMBER 
C
      IF (PRODCODE.EQ.CODE_1HR .OR. PRODCODE.EQ.CODE_STT) THEN
        PRODBUF(B3HDROFF+NMAPSOFF) = 
     *                IOR(VERSION1,PRODBUF(B3HDROFF+NMAPSOFF))
      END IF
C
C  GET HEADER LENGTH
C
      call RPG_set_product_int( PRODBUF(B3HDROFF+ OPRMSWOFF), PHEADLNG )
C
      RETURN
      END
