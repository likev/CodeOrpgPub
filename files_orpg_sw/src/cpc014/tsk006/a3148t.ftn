C 
C RCS info 
C $Author: nolitam $ 
C $Locker:  $ 
C $Date: 2002/11/27 15:17:46 $ 
C $Id: a3148t.ftn,v 1.2 2002/11/27 15:17:46 nolitam Exp $ 
C $Revision: 1.2 $ 
C $State: Exp $ 
C 
      SUBROUTINE A3148T__PROD82_BTABL(HYDRSUPL,
     +           PRODBUF,STARTIDX,NPAGES)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3148T__PROD82_BTABL
*.
*.  MODULE VERSION: 0000
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       01/31/02      0000      Dennis A. Miller     CCR NA01-27501
*.
*.  CALLING SEQUENCE: CALL A3148T__PROD82_BTABL(HYDRSUPL,
*.                                 PRODBUF,STARTIDX,NPAGES)
*.
*.  MODULE FUNCTION: Formats the Mean Field Bias Table (received from AWIPS)
*.                   on Page 2 of the Supplemental Precipitation Data (SPD)
*.                   product.
*.
*.  MODULES CALLED: A3146T__CNVTIME
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT       TYPE        DESCRIPTION
*.    -   -----       ----        -----------
*.    G   SIRPGID     I*4         Site Adaptation - RPG ID Number.
*.    G   BEG_MISDAT  I*4         (CONSTANT)Offset into precipitation
*.                                accumulation array pointing to the date for
*.                                the beginning time of the missing period.
*.    G   BEG_MISTIM  I*4         (CONSTANT)Offset into precipitation
*.                                accumulation array pointing to the beginning
*.                                time of the missing period.
*.    G   CUR_BIAS    I*4         (CONSTANT)Bias between rain gage and radar
*.                                estimates positional parameter.
*.    G   CUR_GRPSIZ  I*4         (CONSTANT)Gage-Radar Pairs (effective sample
*.                                size) positional parameter.
*.    G   CUR_MSPAN   I*4         (CONSTANT)Memory Span (over which Bias
*.                                determined) positional parameter.
*.    G   END_MISDAT  I*4         (CONSTANT)Offset into supplemental data
*.                                array, within the output buffer, pointing to
*.                                the date of the ending time of the missing
*.                                period.
*.    G   END_MISTIM  I*4         (CONSTANT)Offset into supplementary data
*.                                array withing the output buffer, printing to
*.                                the ending time of the missing period.
*.    G   FLAG_SET    I*4         (CONSTANT)Parameter for a set flag.
*.    G   FLG_BADSCN  I*4         (CONSTANT)Indicator in hydromet scan that
*.                                data is bad.
*.    G   FLG_MSGPRD  I*4         (CONSTANT)Offset into supplemental data
*.                                array within the output buffer pointing to
*.                                the missing flag.
*.    G   NUM_INTOUT  I*4         (CONSTANT)Offset into supplemental data
*.                                array within the output buffer for number of
*.                                interpolated outliers.
*.    G   SCAN_DATE   I*4         (CONSTANT)(CONSTANT)Volume Scan Date index
*.                                into Scan Summary Table
*.    G   SCAN_TIME   I*4         (CONSTANT)(CONSTANT)Volume Scan Time index
*.                                into Scan Summary Table
*.    G   SCAN_VCP    I*4         (CONSTANT)(CONSTANT)Volume Coverage Pattern
*.                                index into Scan Summary Table
*.    C   BIAS_TOGGLE L*4         Local adaptaion copy of BIAS_FLAG
*.    C   ARA_PCTRED  I*4         (CONSTANT)Offset in HYDRSUPL (input buffer
*.                                array) for the area percent reduction.
*.    C   NUM_ISOBIN  I*4         (CONSTANT)Offset into Hydrsupl for the
*.                                number of isolated bins.
*.    C   NUM_OUTINT  I*4         (CONSTANT)Offset into Hydrsupl for the
*.                                number of interpolated outlier bins.
*.    C   NUM_OUTRPL  I*4         (CONSTANT)Offset into Hydrsupl for the
*.                                number of replaced outlier bins.
*.    C   RAT_BISCAN  I*4         (CONSTANT)Offset in HYDRSUPL for Bi-Scan
*.                                ratio.
*.    P   HYDRSUPL    I*4         Supplemental data array.
*.    P   STARTIDX    I*4         BEGINS WITH STARTING INDEX INTO PRODUCT
*.                                BUFFER FOR THIS PORTION OF THE PRODUCT IN
*.                                I*2 WORDS AND PASSES BACK END PRODUCT OUPUT
*.                                BUFFER.
*.
*.    *   OUTPUT   TYPE        DESCRIPTION
*.    -   ------   ----        -----------
*.    P   NPAGES   I*4         TOTAL NUMBER OF PAGES DISPLAYED ON PUP BY SPD
*.                             PRODUCT
*.    P   PRODBUF  I*2         Product output buffer
*.    P   STARTIDX I*4         BEGINS WITH STARTING INDEX INTO PRODUCT BUFFER
*.                             FOR THIS PORTION OF THE PRODUCT IN I*2 WORDS
*.                             AND PASSES BACK END PRODUCT OUPUT BUFFER.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   HYDRSUPL          I*4         Supplemental data array.
*.
*.  DATABASE/FILE REFERENCE:  NONE
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME           TYPE        DESCRIPTION
*.    ----           ----        -----------
*.    BIAS_APPLIED   CHAR*8      FLAG (YES/NO) FOR WHETHER BIAS APPLIED
*.    CHARLINE       CHAR*80     FULL CHARACTER LINE IN SPD PRODUCT
*.    TITL_LINE      CHAR*80     TITLE LINE IN SPD PRODUCT
*.    CHAR_DATE_TIME CHAR*14     CHARACTER REPRESENTATION OF DATE AND TIME
*.    CNO            CHAR*8      CHARACTER REPRESENTATION OF "NO"
*.    CYES           CHAR*8      CHARACTER REPRESENTATION OF "YES"
*.    DIVIDER        I*4         DIVIDER BETWEEN PAGES OF PRODUCT
*.    I              I*4         LOOP COUNTER
*.    J              I*4         Do loop counter
*.    NCHAR_LN       I*4         NUMBER OF CHARACTERS PER LINE
*.    NI2            I*4         RATIO OF I*2 BYTES TO I*4 BYTES (2)
*.    NI2_LN         I*4         NUMBER OF I*2 CHARACTERS PER LINE
*.    NLIN_P_PAGE    I*4         NUMBER OF LINES PER PAGE (CONSTANT= 18)
*.    PRODLINE       I*2         I*2 EQUIVALENCE OF CHARLINE
*.    LI_BIAS_1ST    I*4         Index no. in SPD Bias Table for 1st Table Row
*.    LI_BIAS_LST    I*4         Index no. in SPD Bias Table for last Table Row
*.    LI_BLNK1       I*4         Index no. in SPD Bias Table for 1st Blank Line
*.    LI_BLNK2       I*4         Index no. in SPD Bias Table for 2nd Blank Line
*.    LI_DATIM       I*4         Index no. in SPD Bias Table for Date-Time Line
*.    LI_HDR1        I*4         Index no. in SPD Bias Table for 1st Header Line
*.    LI_HDR2        I*4         Index no. in SPD Bias Table for 2nd Header Line
*.    LI_TITLE       I*4         Index no. in SPD Bias Table for Title Line
*.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A3CD05
*.    SITEADP
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A314C3
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.    THIS MODULE IS COMPILED USING COMP14.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.    THIS MODULE IS LINKED USING LINK14.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
 
C
C...'X' IN COLUMN-1 INDICATES CONDITIONALLY COMPILED DEBUG CODE...
C
      IMPLICIT NONE
C
C** Include task-local common data:
C
$INCLUDE A313HBUF.INC/G,**A313HYPP (NEND NLIST)
$INCLUDE                **A313HYDD (NEND NLIST)
$INCLUDE A313H.INC,**A3136P5 (NLIST)
$INCLUDE           **A3136C5 (NEND NLIST)
$INCLUDE A3146.INC/G,**A314C3 (NLIST)
$INCLUDE A3148.INC/G,**A3148PT (NLIST)
C
C** Define subroutine-local variable names used:
C
      INTEGER*2  PRODBUF(*)
C
      INTEGER    STARTIDX, NPAGES
C
      INTEGER    NI2, DIVIDER
      PARAMETER (NI2=2, DIVIDER=-1 )
C
      INTEGER    NLIN_P_PAGE
      PARAMETER (NLIN_P_PAGE=18 )
C
      CHARACTER*14 CHAR_DATE_TIME
      CHARACTER*3 BIAS_APPLIED, CNO, CYES
      PARAMETER (CNO = ' NO', CYES = 'YES')
C
C
C**** EXECUTABLE ****
C     ----------
C
C** Internal write format statements
C
 1080 FORMAT (A80)
 1083 FORMAT (A3)
 1084 FORMAT (A14)
 1085 FORMAT (F12.3,4F16.3)
C
C
C** Encode Title line and line with Table Date & Bias Flag
C
      WRITE (CHARLINE(LI_TITLE),1080) TITL_LINE
C
      WRITE (CHARLINE(LI_BLNK1),1080) BLNK_LINE
C
      WRITE (CHARLINE(LI_DATIM),1080) DATE_LINE
C
C** Retrieve date & time Bias Table last updated locally
C** & insert in encoded Date-Bias Flag line
C
      CALL A3146T__CNVTIME(HYDRSUPL(TIM_BCALC),
     +               HYDRSUPL(DAT_BCALC),CHAR_DATE_TIME)
C
      WRITE (CHARLINE(LI_DATIM) (TB_UPT:TE_UPT),1084) CHAR_DATE_TIME
C
C** Retrieve decision on whether Bias to be Applied to precip 
C** products (except DPA) & insert in encoded Date-Bias Flag line
C
      IF (BIAS_TOGGLE) THEN
           BIAS_APPLIED = CYES
      ELSE
           BIAS_APPLIED = CNO
      ENDIF
C
      WRITE (CHARLINE(LI_DATIM) (TB_APL:TE_APL),1083) BIAS_APPLIED
C
      WRITE (CHARLINE(LI_BLNK2),1080) BLNK_LINE
C
C** Encode Header lines for the table itself
C
      WRITE (CHARLINE(LI_HDR1 ),1080) HDR_LIN1
C
      WRITE (CHARLINE(LI_HDR2 ),1080) HDR_LIN2
C
C** Encode Bias Table row lines
C
      L = LI_BIAS_1ST
      DO 10  J = 1, N_BIAS_LINES
         WRITE (CHARLINE(L),1085) (RBIAS_TABL(I,J), I=1,N_BIAS_FLDS)
         L = L + 1
 10   CONTINUE
C
C** Copy Bias Table character lines to product buffer, using
C** equivalence, after first storing no. characters per line
C
      DO 20  J = LI_TITLE, LI_BIAS_LST
         PRODBUF(STARTIDX+1) = NCHAR_LN
         STARTIDX = STARTIDX + 1
C
         DO 25 I = 1, NI2_LN
            PRODBUF(STARTIDX+1) = PRODLINE((J-1)*NI2_LN+I)
            STARTIDX = STARTIDX + 1
  25    CONTINUE
C
  20  CONTINUE
C
C
C** Print Header and Bias Table lines
C
X     do 100  j = li_title, li_bias_lst
c
X    type *, charline(j) (1:80)
c
X100  continue
C
C** Insert Page Divider
C
      PRODBUF(STARTIDX+1) = DIVIDER
      STARTIDX = STARTIDX + 1
C
C COUNT THE NUMBER OF PAGES IN THIS PART OF PRODUCT
C
      IF( LI_BIAS_LST.GT.1 ) THEN
         NPAGES = LI_BIAS_LST/NLIN_P_PAGE + 1
      ELSE
         NPAGES = 0
      ENDIF
C
      RETURN
      END
