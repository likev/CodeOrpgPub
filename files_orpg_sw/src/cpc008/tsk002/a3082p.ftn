C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/05 16:36:30 $
C $Id: a3082p.ftn,v 1.3 2002/12/05 16:36:30 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3082P__COMPACT_AGAIN(RUN_VIP,NBYTES,NUM,REM,
     $   RCMBUF)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3082P__COMPACT_AGAIN
*.
*.  MODULE VERSION: 0010
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       04 22 88      0000      VALERIE HOLDEN       SPR # 80002
*.       11 02 88      0001      VALERIE HOLDEN       SPR # 80440
*.       01 29 91      0002      VALERIE HOLDEN       SPR # 91249
*.       12/10/91      0003      ED NICHLAS           SPR 92637 PDL Removal
*.       04/20/92      0004      Toolset              SPR 91895
*.       03/25/93      0005      Toolset              SPR NA93-06801
*.       01/28/94      0006      Toolset              SPR NA94-01101
*.       03/03/94      0007      Toolset              SPR NA94-05501
*.       04/11/96      0008      Toolset              CCR NA95-11802
*.       12/23/96      0009      Toolset              CCR NA95-11807
*.       03/16/99      0010      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A3082P__COMPACT_AGAIN (RUN_VIP,NBYTES,
*.                    NUM,REM,RCMBUF)
*.
*.  MODULE FUNCTION: COMPACTS ADDITIONAL CONSECUTIVE VIP NUMBERS
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT   TYPE        DESCRIPTION
*.    -   -----   ----        -----------
*.    P   NBYTES  I*4         NUMBER OF BYTES.
*.    P   NUM     I*4         NUMBER OF COMPACTION GROUPS
*.    P   REM     I*4         REMAINDER FROM MOD
*.    P   RUN_VIP I*4         RUN VALUE INDEX
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   NBYTES  I*4         NUMBER OF BYTES.
*.    P   RCMBUF  CHAR*1      RADAR-CODED-MESSAGE BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE: NONE
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME       TYPE        DESCRIPTION
*.    ----       ----        -----------
*.    INC1       I*4         Incremental value of 1.
*.    INC2       I*4         Incremental value of 2.
*.    INC3       I*4         Incremental value of 3.
*.    LETTER     CHAR*1      TABLE OF LETTER VALUES
*.    MAX_LETTER I*4         LETTER LIMIT
*.    NUM1       I*4         Number of compaction groups equal to one.
*.    NUM2       I*4         Number of compaction groups equal to two.
*.    NUM3       I*4         Number of compaction groups equal to three.
*.    OFF1       I*4         Constant respresenting offset 1.
*.    OFF2       I*4         Constant representing offset 2.
*.    OFF3       I*4         Constant representing offset 3.
*.    VIP        CHAR*1      VIP LEVELS 0-9
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.  DEVIATION FROM STANDARDS: NONE
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     THIS MODULE IS COMPILED USING COMP08.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     THIS MODULE IS LINKED USING LINK08.CSS
*.
*.  MISC: NONE
*.
*.*******************************************************************
      IMPLICIT NONE
C*
      INTEGER*4    RUN_VIP,NBYTES,NUM,REM,MAX_LETTER
      INTEGER*4    OFF1,OFF2,OFF3,OFF4,INC1,INC2,INC3,NUM1,NUM2,NUM3
      PARAMETER    (MAX_LETTER=26,OFF1=1,OFF2=2,OFF3=3,OFF4=4)
      PARAMETER    (INC1=1,INC2=2,INC3=3,NUM1=1,NUM2=2,NUM3=3)
      CHARACTER*1  RCMBUF(*),LETTER(26),VIP(0:8)
      DATA         LETTER/'A','B','C','D','E','F','G','H','I','J',
     $                    'K','L','M','N','O','P','Q','R','S','T',
     $                    'U','V','W','X','Y','Z'/
      DATA         VIP/'0','1','2','3','4','5','6','7','8'/
C*
C*    STORE VIP NUMBER, LETTER(MAX_LETTER) AND VIP NUMBER
      IF (NUM.GE.NUM1) THEN
         RCMBUF(NBYTES+OFF1) = VIP(RUN_VIP)
         RCMBUF(NBYTES+OFF2) = LETTER(MAX_LETTER)
         RCMBUF(NBYTES+OFF3) = VIP(RUN_VIP)
         NBYTES = NBYTES + INC3
      ENDIF
C*
C*    CHECK FOR NUM = 2, STORE LETTER(MAX_LETTER) AND VIP NUMBER
      IF (NUM.GE.NUM2) THEN
         RCMBUF(NBYTES+OFF1) = LETTER(MAX_LETTER)
         RCMBUF(NBYTES+OFF2) = VIP(RUN_VIP)
         NBYTES = NBYTES + INC2
      ENDIF
C*
C*    CHECK FOR NUM = 3, STORE LETTER(MAX_LETTER), VIP NUMBER
      IF (NUM.EQ.NUM3) THEN
         RCMBUF(NBYTES+OFF1) = LETTER(MAX_LETTER)
         RCMBUF(NBYTES+OFF2) = VIP(RUN_VIP)
         NBYTES = NBYTES + INC2
      ENDIF
C*
C*    IF REMAINDER = 1, STORE VIP NUMBER
      IF (REM.EQ.NUM1) THEN
         NBYTES = NBYTES + INC1
         RCMBUF(NBYTES) = VIP(RUN_VIP)
      ENDIF
C*
C*    IF REMAINDER >=2, STORE LETTER(REMAINDER)
      IF (REM.GE.NUM2) THEN
         NBYTES = NBYTES + INC1
         RCMBUF(NBYTES) = LETTER(REM)
      ENDIF
      RETURN
      END
