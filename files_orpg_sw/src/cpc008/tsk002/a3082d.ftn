C
C RCS info
C $Author: steves $
C $Locker:  $
C $Date: 2007/03/02 22:38:49 $
C $Id: a3082d.ftn,v 1.5 2007/03/02 22:38:49 steves Exp $
C $Revision: 1.5 $
C $State: Exp $
C
      SUBROUTINE A3082D__CENTROIDS_PARTA(CAT_NUM_STORMS,CAT_FEAT,
     $   COMB_ATT,NUM_FPOSITS,FORCST_POSITS,CAT_TVST,IROW,ICOL,
     $   NBYTES,RCMBUF)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3082D__CENTROIDS_PARTA
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       02 18 88      0000      VALERIE HOLDEN       SPR # 80002
*.       02 09 89      0001      VALERIE HOLDEN       SPR # 90027
*.       01 29 91      0002      VALERIE HOLDEN       SPR # 91249
*.       12 03 91      0003      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0004      ED NICHLAS           SPR 92637 PDL Removal
*.       04/20/92      0005      Toolset              SPR 91895
*.       03/25/93      0006      Toolset              SPR NA93-06801
*.       01/28/94      0007      Toolset              SPR NA94-01101
*.       03/03/94      0008      Toolset              SPR NA94-05501
*.       06/15/94      0009      Steve Smith          CCR 93123-004A00
*.       04/01/95      0010      Toolset              CCR NA95-11802
*.       07/19/95      0011      STEVE SMITH          CCR NA94-26302
*.       07/19/95      0011      STEVE SMITH          CCR NA94-26301
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A3082D__CENTROIDS_PARTA (CAT_NUM_STORMS,
*.                    CAT_FEAT,COMB_ATT,NUM_FPOSITS,FORCST_POSITS,
*.                    CAT_TVST,IROW,ICOL,NBYTES,RCMBUF)
*.
*.  MODULE FUNCTION: ENCODES CENTROIDS DATA FOR PART A
*.
*.  MODULES CALLED: A30828__GRID_LETTERS, A3082G__GET_IJ, A3082K__STORE_LINE, 
*.                  A3082Q__PROCESS_LINE 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT          TYPE        DESCRIPTION
*.    -   -----          ----        -----------
*.    G   NCENTROIDS     I*4         Number of Centroids to report in the
*.                                   Radar Coded Message. Default is 12.
*.    G   CAT_AZ         I*4         (CONSTANT)Combined attributes index for
*.                                   Azimuth of storm centroid.
*.    G   CAT_FDIR       I*4         (CONSTANT)Combined attributes index for
*.                                   storm forecast direction.
*.    G   CAT_FSPD       I*4         (CONSTANT)Combined attributes index for
*.                                   storm forecast speed.
*.    G   CAT_RNG        I*4         (CONSTANT)Combined attributes index for
*.                                   projected range of storm centroid.
*.    G   CAT_SID        I*4         (CONSTANT)Combined attributes features
*.                                   index for storm ID.
*.    G   MPS_TO_KTS     R*4         (CONSTANT)SCALING FACTOR FOR METERS PER
*.                                   SECOND TO KNOTS
*.    C   CAT_ELCN       I*4         (CONSTANT)Offset in combined attributes
*.                                   table of elevation of storm centroid.
*.    C   MAX_STORM      I*4         (CONSTANT)Maximum number of storms.
*.    C   NACOLS         I*4         (CONSTANT)Number of columns available for
*.                                   Radar Coded Message product.
*.    P   CAT_FEAT       I*4         Table of associated severe features.
*.    P   CAT_NUM_STORMS I*4         Number of storms processed for the
*.                                   combined attributes table.
*.    P   COMB_ATT       R*4         Table of combined attributes.
*.    P   ICOL           I*4         COLUMN NUMBER
*.    P   IROW           I*4         ROW NUMBER
*.    P   NBYTES         I*4         NUMBER OF BYTES
*.    P   RCMBUF         I*2         RADAR-CODED-MESSAGE BUFFER
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   ICOL    I*4         COLUMN NUMBER
*.    P   IROW    I*4         ROW NUMBER
*.    P   NBYTES  I*4         NUMBER OF BYTES
*.    P   RCMBUF  I*2         RADAR-CODED-MESSAGE BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   ICOL              I*4         COLUMN NUMBER
*.    P   IROW              I*4         ROW NUMBER
*.    P   NBYTES            I*4         NUMBER OF BYTES
*.    P   RCMBUF            I*2         RADAR-CODED-MESSAGE BUFFER
*.
*.  DATABASE/FILE REFERENCE: NONE
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME       TYPE        DESCRIPTION
*.    ----       ----        -----------
*.    AZIM       R*4         AZIMUTH OF STORM
*.    BLANK      CHAR*1      ONE BLANK CHARACTER
*.    CCHAR      CHAR*1      C CHARACTER
*.    CDIR       R*4         STORM DIRECTION
*.    CENCHAR    CHAR*2      STORM ID CHARACTER VALUE
*.    CENNUM     I*4         STORM ID NUMBER
*.    CENT_TOTAL I*4         TOTAL # OF CENTROIDS WITHIN 230KM
*.    COLON      CHAR*1      COLON CHARACTER
*.    COMMA      CHAR*1      COMMA CHARACTER
*.    CSPD       R*4         STORM SPEED
*.    ELEV       R*4         ELEVATION ANGLE OF STORM
*.    ENDA       CHAR*6      END OF PART A INDENTIFER
*.    FLAG       I*4         FLAG FOR END OF LINE
*.    GRID       CHAR*3      LFM GRID LOCATION
*.    I          I*4         Index control variable.
*.    IC         I*4         START POSITION FOR WRITING COMMA
*.    IDIR       I*4         STORM DIRECTION ROUNDED
*.    INC1       I*4         INCREMENTAL VALUE OF 1
*.    INC12      I*4         VARIABLE TO INCREMENT BY 12
*.    INC14      I*4         VARIABLE TO INCREMENT BY 14
*.    INCREM     I*4         INCREMENTAL VALUE FOR COMMA POSITION
*.    IS         I*4         START POSITION FOR WRITING STORM DATA
*.    ISM        I*4         END POSITION FOR WRITING STORM DATA
*.    ISPD       I*4         STORM SPEED ROUNDED
*.    IVAL       I*4         I GRID COORDINATE
*.    JVAL       I*4         J GRID COORDINATE
*.    K          I*4         Loop control index variable.
*.    L1_END     I*4         MAX NUMBER OF CENTROIDS ON LINE 1
*.    L2_END     I*4         MAX NUMBER OF CENTROIDS ON LINE 2
*.    L3_END     I*4         MAX NUMBER OF CENTROIDS ON LINE 3
*.    L4_END     I*4         MAX NUMBER OF CENTROIDS ON LINE 4
*.    LEND       I*4         END OF LINE INDICATOR
*.    NUM_CENS   CHAR*5      TOTAL NUMBER OF CENTROIDS HEADER
*.    ONE        I*4         Program parameter value for one used as lower
*.                           index in do loop.
*.    RANGE      R*4         RANGE OF STORM
*.    RANGE_MAX  R*4         MAXIMUM RANGE VALUE = 230.0 KM
*.    RCM_LINE   CHAR*70     RADAR CODED MESSAGE LINE
*.    SET10      I*4         VARIABLE TO INITIALIZE TO 10
*.    SET23      I*4         VARIABLE TO INITIALIZE TO 23
*.    TEMPNUM    I*4         TEMP. LOCATION EQUIVALENCED CENCHAR
*.    TOTAL      I*4         MINIMUM NUMBER OF ADAPTABLE CENTROIDS OR NUMBER
*.                           FOUND
*.    ZERO       I*4         PROGRAM PARAMETER FOR 0
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    PRODSEL
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.  DEVIATION FROM STANDARDS: NONE
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     THIS MODULE IS COMPILED USING COMP08.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     THIS MODULE IS LINKED USING LINK08.CSS
*.
*.  MISC: NONE
*.
*.*******************************************************************
      IMPLICIT NONE
C*
$INCLUDE A308BUF.INC/G,**A308P3    (NEND NLIST)
$INCLUDE               **A308D3    (NEND NLIST)
$INCLUDE A309ADPT.INC/G,**A3CD70C7 (NEND NLIST)
$INCLUDE A308.INC,**A308P2         (NEND NLIST)
$INCLUDE A309.INC/G,**A3PM50       (NEND NLIST)
C*
      INTEGER*2    RCMBUF(*)
      INTEGER*4    IROW,ICOL,NBYTES,I,K,LEND,IS,IC,ISM,FLAG,INC12
      INTEGER*4    INC14,SET10,SET23,IVAL,JVAL,CENNUM(MAX_STORM)
      INTEGER*4    CENT_TOTAL,INCREM,IDIR,ISPD,TEMPNUM,INC1,ZERO
      INTEGER*4    L1_END,L2_END,L3_END,L4_END,ONE,TOTAL
      REAL         AZIM(MAX_STORM),RANGE(MAX_STORM),ELEV(MAX_STORM)
      REAL         CDIR(MAX_STORM),CSPD(MAX_STORM),RANGE_MAX
      PARAMETER    (FLAG=100,INC12=12,INC14=14,SET10=10,SET23=23)
      PARAMETER    (RANGE_MAX=230.0,INCREM=14,INC1=1,ZERO=0,ONE=1)
      PARAMETER    (L1_END=4,L2_END=9,L3_END=14,L4_END=19)
      CHARACTER*1  COLON,COMMA,CCHAR,BLANK
      CHARACTER*2  CENCHAR
      CHARACTER*3  GRID
      CHARACTER*5  NUM_CENS
      CHARACTER*6  ENDA
      CHARACTER*70 RCM_LINE
      DATA         COLON/':'/,COMMA/','/,CCHAR/'C'/,BLANK/' '/
      DATA         ENDA/'/ENDAA'/,NUM_CENS/'/NCEN'/
      EQUIVALENCE  (TEMPNUM,CENCHAR)
C*
C*******************************************************************
C*
C*    CLEAR RCM_LINE TO BLANKS
C*
      DO 10 I = ONE,NACOLS
 10      RCM_LINE(I:I) = BLANK
C*
C*    COLLECT DATA FOR CENTROIDS WITHIN 230 KM RANGE
C*
      I = ZERO
      DO 51 K = ONE,CAT_NUM_STORMS
         IF (COMB_ATT(CAT_RNG,K).GT.RANGE_MAX) THEN
         ELSE
C*
C*    SAVE CENTROID NUMBER, AZIMUTH, RANGE, ELEVATION ANGLE,
C*    DIRECTION AND SPEED
C*
            I = I + INC1
C*
C*    IF COUNTER GREATER THAN MAX_STORM, RESET IT AND BRANCH OUT OF
C*    LOOP
C*
            IF (I .GT. MAX_STORM) THEN
               I = MAX_STORM
               GO TO 52
            END IF
C*
            CENNUM(I) = CAT_FEAT(CAT_SID,K)
            AZIM(I)   = COMB_ATT(CAT_AZ,K)
            RANGE(I)  = COMB_ATT(CAT_RNG,K)
            ELEV(I)   = COMB_ATT(CAT_ELCN,K)
            CDIR(I)   = COMB_ATT(CAT_FDIR,K)
            CSPD(I)   = COMB_ATT(CAT_FSPD,K)*MPS_TO_KTS
         ENDIF
 51   CONTINUE
C*
 52   CONTINUE
      CENT_TOTAL = I
      TOTAL = MIN(NCENTROIDS,CENT_TOTAL)
C*
C*    WRITE TOTAL NUMBER OF CENTROIDS
C*
      WRITE(RCM_LINE,100) NUM_CENS,TOTAL,COLON
 100  FORMAT(A5,I2.2,A1)
      IF (TOTAL.EQ.ZERO) CALL A3082K__STORE_LINE(IROW,ICOL,
     $   NBYTES,RCM_LINE,RCMBUF)
C*
C*    INITIALIZE INDEX PARAMETERS FOR BUFFER WRITE
C*
      IS = SET10
      IC = SET23
      LEND = ZERO
C*
C*    COLLECT DATA FOR EACH CENTROID
C*
      DO 200 K = ONE,TOTAL
C*
C*    GET LFM GRID LOCATION
C*
         CALL A3082G__GET_IJ(AZIM(K),RANGE(K),ELEV(K),IVAL,JVAL)
         CALL A30828__GRID_LETTERS(IVAL,JVAL,GRID)
C*
C*    ROUND TO NEAREST INTEGER CENTROID DIRECTION AND SPEED
C*
         ISPD = NINT(CSPD(K))
         IDIR = NINT(CDIR(K))
         ISM = IS + INC12
         TEMPNUM = CENNUM(K)
C*
C*    WRITE CENTROID IDENTIFIER #, LFM LOCATION, DIRECTION AND SPEED
C*
         WRITE(RCM_LINE(IS:ISM),105) CCHAR,CENCHAR,GRID,IDIR,ISPD
 105     FORMAT(A1,A2,A3,' ',I3.3,I3.3)
C*
C*    CHECK IF MORE CENTROID DATA FOLLOWS: ADD COMMA SEPARATOR
C*
         IF (TOTAL.GT.K) WRITE(RCM_LINE(IC:IC),106) COMMA
 106     FORMAT(A1)
         IS = IS + INC14
         IC = IC + INC14
C*
C*    CHECK FOR END OF LINE CONDITION
C*
         IF ((K.EQ.L1_END).OR.(K.EQ.L2_END).OR.(K.EQ.L3_END).OR.
     $      (K.EQ.L4_END)) LEND = FLAG
C*
C*    CHECK IF NO MORE CENTROID DATA OR END OF LINE CONDITION EXISTS
C*
         IF ((TOTAL.EQ.K).OR.(LEND.EQ.FLAG)) THEN
            CALL A3082Q__PROCESS_LINE(IROW,ICOL,NBYTES,IS,IC,
     $         INCREM,LEND,RCM_LINE,RCMBUF)
         ENDIF
 200  CONTINUE
C*
C*    ENCODE END OF PART A IDENTIFIER
C*
      WRITE(RCM_LINE,107) ENDA
 107  FORMAT(A6)
C*
C*    STORE LINE INTO RADAR CODED MESSAGE PRODUCT BUFFER
C*
      CALL A3082K__STORE_LINE(IROW,ICOL,NBYTES,RCM_LINE,RCMBUF)
C*
C**   RETURN TO CALLER
C*
      RETURN
      END
