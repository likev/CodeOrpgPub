C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/05 16:37:02 $
C $Id: a3082q.ftn,v 1.3 2002/12/05 16:37:02 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3082Q__PROCESS_LINE(IROW,ICOL,NBYTES,IS,IC,INCREM,
     $   LEND,RCM_LINE,RCMBUF)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3082Q__PROCESS_LINE
*.
*.  MODULE VERSION: 0010
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       05 16 88      0000      VALERIE HOLDEN       SPR # 80002
*.       01 29 91      0001      VALERIE HOLDEN       SPR # 91249
*.       12 03 91      0002      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0003      ED NICHLAS           SPR 92637 PDL Removal
*.       04/20/92      0004      Toolset              SPR 91895
*.       03/25/93      0005      Toolset              SPR NA93-06801
*.       01/28/94      0006      Toolset              SPR NA94-01101
*.       03/03/94      0007      Toolset              SPR NA94-05501
*.       04/11/96      0008      Toolset              CCR NA95-11802
*.       12/23/96      0009      Toolset              CCR NA95-11807
*.       03/16/99      0010      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A3082Q__PROCESS_LINE (IROW,ICOL,NBYTES,
*.                    IS,IC,INCREM,LEND,RCM_LINE,RCMBUF)
*.
*.  MODULE FUNCTION: STORE ENCODED LINE INTO RCM OUTPUT BUFFER
*.
*.  MODULES CALLED: A3082K__STORE_LINE 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT    TYPE        DESCRIPTION
*.    -   -----    ----        -----------
*.    C   NACOLS   I*4         (CONSTANT)Number of columns available for Radar
*.                             Coded Message product.
*.    P   ICOL     I*4         COLUMN NUMBER
*.    P   INCREM   I*4         INCREMENTAL VALUE FOR COMMA PLACING
*.    P   IROW     I*4         ROW NUMBER
*.    P   NBYTES   I*4         NUMBER OF BYTES
*.    P   RCMBUF   I*2         RADAR-CODED-MESSAGE BUFFER
*.    P   RCM_LINE CHAR*70     RADAR CODED MESSAGE LINE
*.
*.    *   OUTPUT   TYPE        DESCRIPTION
*.    -   ------   ----        -----------
*.    P   IC       I*4         START POSITION TO WRITE COMMA
*.    P   ICOL     I*4         COLUMN NUMBER
*.    P   IROW     I*4         ROW NUMBER
*.    P   IS       I*4         START POSITION TO WRITE STORM DATA
*.    P   LEND     I*4         LINE END FLAG
*.    P   NBYTES   I*4         NUMBER OF BYTES
*.    P   RCMBUF   I*2         RADAR-CODED-MESSAGE BUFFER
*.    P   RCM_LINE CHAR*70     RADAR CODED MESSAGE LINE
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   ICOL              I*4         COLUMN NUMBER
*.    P   IROW              I*4         ROW NUMBER
*.    P   NBYTES            I*4         NUMBER OF BYTES
*.    P   RCMBUF            I*2         RADAR-CODED-MESSAGE BUFFER
*.    P   RCM_LINE          CHAR*70     RADAR CODED MESSAGE LINE
*.
*.  DATABASE/FILE REFERENCE: NONE
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME  TYPE        DESCRIPTION
*.    ----  ----        -----------
*.    BLANK CHAR*1      ONE BLANK CHARACTER
*.    I     I*4         INDEX CONTROL VARIABLE
*.    INIT1 I*4         INITIALIZED VALUE OF 1
*.    ONE   I*4         Program parameter value for one used as lower index in
*.                      do loop.
*.    ZERO  I*4         PROGRAM PARAMETER FOR 0
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS: NONE
*.
*.  DEVIATION FROM STANDARDS: NONE
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     THIS MODULE IS COMPILED USING COMP08.CSS
*.  LINKAGE INSTRUCTIONS:
*.
*.     THIS MODULE IS LINKED USING LINK08.CSS
*.
*.  MISC: NONE
*.
*.*******************************************************************
      IMPLICIT NONE
C*
$INCLUDE A308.INC,**A308P2 (NEND NLIST)
C*
      INTEGER*2    RCMBUF(*)
      INTEGER*4    IROW,ICOL,NBYTES,IS,IC,INCREM,LEND,I,INIT1,ZERO,ONE
      PARAMETER    (INIT1=1,ZERO=0,ONE=1)
      CHARACTER*1  BLANK
      CHARACTER*70 RCM_LINE
      DATA         BLANK/' '/
C*
C*    STORE LINE INTO PRODUCT BUFFER
      CALL A3082K__STORE_LINE(IROW,ICOL,NBYTES,RCM_LINE,RCMBUF)
C*
C*    CLEAR RCM_LINE, SET START WRITE POSITION FOR DATA AND COMMA
      DO 20 I = ONE,NACOLS
 20      RCM_LINE(I:I) = BLANK
      IS = INIT1
      IC = INCREM
      LEND = ZERO
      RETURN
      END
