C 
C RCS info 
C $Author: nolitam $ 
C $Locker:  $ 
C $Date: 2002/12/11 20:00:50 $ 
C $Id: a3cm3a.ftn,v 1.3 2002/12/11 20:00:50 nolitam Exp $ 
C $Revision: 1.3 $ 
C $State: Exp $ 
C 
      SUBROUTINE A3CM3A__SEG_ADAPT(RBUF,IBUF,OBUF,IDX,EIDX)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3CM3A__SEG_ADAPT
*.
*.  MODULE VERSION: 0001
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       04/24/95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.
*.  CALLING SEQUENCE:
*.
*.     CALL A3CM3A__SEG_ADAPT(RBUF,IBUF,OBUF,IDX,EIDX)
*.
*.  MODULE FUNCTION:
*.
*.      THIS COMMON MODULE FORMATS THE STORMS CELL SEGMENTS
*.      ADAPTATION DATA INTO THE USER SUPPLIED OUTPUT BUFFER.
*.
*.      RBUF AND IBUF ARE THE SAME ARRAYS; SOME OF THE ADAPTATION
*.      DATA IS DEFINED AS REAL AND SOME AS INTEGER.  THE
*.      PARAMETER FILE A315BUF,**A315PSAD IS  INCLUDED TO OBTAIN
*.      THE OFFSETS INTO THE INPUT BUFFER.
*.
*.      OBUF IS THE OUTPUT BUFFER THAT IS THE PRODUCT, TO PREVENT
*.      ANY ALIGNMENT PROBLEMS THE USER INPUTS THE TOP OF THE
*.      PRODUCT AND SUPPLIES AN INDEX (IDX) OF WHERE THE OUTPUT
*.      IS TO BEGIN.  IDX IS NOT CHANGED BY THIS ROUTINE.  THE
*.      INDEX OF THE LAST I*2 WORD STORED IS RETURNED IN ENDIDX.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT    TYPE        DESCRIPTION
*.    -   -----    ----        -----------
*.    G   STA_MCOF I*4         (CONSTANT)Offset to the Mass Coef. Factor in
*.                             the adaptation data part of the centroids &
*.                             tracking/forecast output buffers.
*.    G   STA_MULF I*4         (CONSTANT)Offset to the Mass Mult. Factor in
*.                             the adaptation data part of the centroids &
*.                             tracking/forecast output buffers.
*.    G   STA_MWTF I*4         (CONSTANT)Offset to the Mass Weighted Factor in
*.                             the adaptation data part of the centroids &
*.                             tracking/forecast output buffers.
*.    G   STA_NAVG I*4         (CONSTANT)Offset to the Ref. Avg. Factor (bins)
*.                             in the adaptation data part of the centroids &
*.                             tracking/forecast output buffers.
*.    G   STA_NDRO I*4         (CONSTANT)Offset to the Thresh. Dropout Count
*.                             (bins) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_RDIF I*4         (CONSTANT)Offset to the Thresh. Dropout Ref.
*.                             Difference (dB) in the adaptation data part of
*.                             the centroids & tracking/forecast output
*.                             buffers.
*.    G   STA_REF1 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #1
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF2 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #2
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF3 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #3
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF4 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #4
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF5 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #5
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF6 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #6
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_REF7 I*4         (CONSTANT)Offset to the Thresh. Reflectivity #7
*.                             (dBZ) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_RGMX I*4         (CONSTANT)Offset to the Thresh. Max. Segment
*.                             Range (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_RLVL I*4         (CONSTANT)Offset to the Number of Reflectivity
*.                             Levels in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_RSGM I*4         (CONSTANT)Offset to the Max. # of
*.                             Segments/Radial in the adaptation data part of
*.                             the centroids & tracking/forecast output
*.                             buffers.
*.    G   STA_SGL1 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #1 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL2 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #2 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL3 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #3 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL4 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #4 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL5 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #5 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL6 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #6 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGL7 I*4         (CONSTANT)Offset to the Thresh. Segment Length
*.                             #7 (km) in the adaptation data part of the
*.                             centroids & tracking/forecast output buffers.
*.    G   STA_SGMX I*4         (CONSTANT)Offset to the Max. # of
*.                             Segments/Elev. in the adaptation data part of
*.                             the centroids & tracking/forecast output
*.                             buffers.
*.    P   EIDX     I*4         POINTER TO LAST WORD IN OUTPUT
*.    P   IBUF     I*4         INPUT BUFFER AS INTEGER
*.    P   IDX      I*4         BEGINNING OF OUTPUT BUFFER POINTER
*.    P   RBUF     R*4         INPUT BUFFER AS REAL
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   EIDX    I*4         POINTER TO LAST WORD IN OUTPUT
*.    P   OBUF    I*2         OUTPUT BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME      TYPE        DESCRIPTION
*.    ----      ----        -----------
*.    CD        CHAR*80     Character array for lines of ASCII text.
*.    DIVIDER   I*4         End of page divider.
*.    I         I*4         LOOP COUNTER
*.    IDAT      I*2         Buffer for output buffer line (integer).
*.    J         I*4         Do loop counter
*.    NI2WDS    I*4         Number of halfwords in output buffer line.
*.    NUM_CHAR  I*4         Number of characters in output buffer line.
*.    NUM_LINES I*4         Number of lines in output buffer page.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.        THIS MODULE IS COMPILED USING THE COMP09.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.        THIS MODULE IS LINKED USING THE LINK09.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE
C
$INCLUDE A315BUF.INC/G,**A315PSAD (NEND NLIST)
C
      REAL RBUF(*)
      INTEGER*4 IBUF(*), IDX, EIDX
      INTEGER*2 OBUF(*)
C
      INTEGER J,I,NI2WDS,NUM_LINES,NUM_CHAR,DIVIDER
      PARAMETER(NI2WDS=40,NUM_LINES=15,NUM_CHAR=80,DIVIDER=-1)
      CHARACTER*80 CD(NUM_LINES)
      INTEGER*2 IDAT(40,NUM_LINES)
      EQUIVALENCE (IDAT(1,1),CD)
C
C** PURGE LINES WITH BLANKS
C
      DO 300 I=1,NUM_LINES
          WRITE(CD(I),301)
300   CONTINUE
C
C***  STORM CELL SEGMENTS ADAPTATION DATA PROCESSING
C
      WRITE(CD(1),900)
C
C***  WRITE LINE 3
C
      WRITE(CD(3),903) IBUF(STA_REF1), RBUF(STA_SGL1)
C
C***  WRITE LINE 4
C
      WRITE(CD(4),904) IBUF(STA_REF2), RBUF(STA_SGL2)
C
C***  WRITE LINE 5
C
      WRITE(CD(5),905) IBUF(STA_REF3), RBUF(STA_SGL3)
C
C***  WRITE LINE 6
C
      WRITE(CD(6),906) IBUF(STA_REF4), RBUF(STA_SGL4)
C
C***  WRITE LINE 7
C
      WRITE(CD(7),907) IBUF(STA_REF5), RBUF(STA_SGL5)
C
C***  WRITE LINE 8
C
      WRITE(CD(8),908) IBUF(STA_REF6), RBUF(STA_SGL6)
C
C***  WRITE LINE 9
C
      WRITE(CD(9),909) IBUF(STA_REF7), RBUF(STA_SGL7)
C
C***  WRITE LINE 10
C
      WRITE(CD(10),910) IBUF(STA_RLVL), IBUF(STA_RDIF)
C
C***  WRITE LINE 11
C
      WRITE(CD(11),911) IBUF(STA_NAVG), IBUF(STA_NDRO)
C
C***  WRITE LINE 12
C
      WRITE(CD(12),912) IBUF(STA_RGMX), IBUF(STA_SGMX)
C
C***  WRITE LINE 13
C
      WRITE(CD(13),913) RBUF(STA_MCOF), IBUF(STA_RSGM)
C
C***  WRITE LINE 14
C
      WRITE(CD(14),914) RBUF(STA_MULF)
C
C***  WRITE LINE 15
C
      WRITE(CD(15),915) RBUF(STA_MWTF)
C
C** NOW STORE THE LINES OF ASCII TEXT INTO USERS BUFFER
C
C** BUT FIRST, INITIALIZE INDEX
C
      EIDX=IDX-1
      DO 100 J=1,NUM_LINES
         EIDX=EIDX+1
         OBUF(EIDX)=NUM_CHAR
         DO 200 I=1,NI2WDS
C
C** OBTAIN AND SAVE TEXT DATA
C
            EIDX=EIDX+1
            OBUF(EIDX)=IDAT(I,J)
200      CONTINUE
100   CONTINUE
C
C** STORE THE END OF PAGE DIVIDER
C
      EIDX=EIDX+1
      OBUF(EIDX)=DIVIDER
C
C** FORMAT STATEMENTS
C
301   FORMAT(80(' '))
900   FORMAT(23X,'STORM CELL SEGMENTS ADAPTATION DATA')
903   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #1)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #1)')
904   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #2)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #2)')
905   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #3)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #3)')
906   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #4)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #4)')
907   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #5)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #5)')
908   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #6)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #6)')
909   FORMAT(4X,I2,'(DBZ) THRESH (REFLECTIVITY #7)',6X,F3.1,
     >       '  (KM) THRESH (SEGMENT LENGTH #7)')
910   FORMAT(4X,I2,'      NBR REFLECTIVITY LEVELS ',7X,I2,
     >       ' (DBZ) THRESH (DROPOUT REF DIFF)')
911   FORMAT(4X,I2,'      REFLECTIVITY AVG FACTOR ',7X,I2,
     >       '       THRESH (DROPOUT  COUNT)   ')
912   FORMAT(3X,I3,' (KM) THRESH (MAX SEGMENT RANGE)',3X,I4,
     >       '       MAX # OF SEGMENTS/ELEV ')
913   FORMAT(2X,F4.2,'      MASS COEFFICIENT FACTOR ',7X,I2,
     >       '       MAX # OF SEGMENTS/RADIAL')
914   FORMAT(1X,F5.1,'      MASS MULTIPLICATIVE FACTOR')
915   FORMAT(F8.1,' (HR*KG/KM**4) MASS WEIGHTED FACTOR')
C
C** RETURN TO CALLER ROUTINE
C
      RETURN
      END
