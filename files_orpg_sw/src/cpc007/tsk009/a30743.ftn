C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/02 19:11:53 $
C $Id: a30743.ftn,v 1.3 2002/12/02 19:11:53 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A30743__BUFFER_CONTROL( PARAM )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A30743__BUFFER_CONTROL
*.
*.  MODULE VERSION: 0015
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       05 15 85      0000      ATARA WEINSTEIN
*.                               & DENNIS MILLER
*.       04 25 86      0001      BRADLEY SUTKER       SPR#304
*.       03 17 87      0002      MARY JO STALEY       SPR#70142
*.       06 17 88      0003      STEVEN D SMITH       SPR#80006
*.       10 11 88      0004      STEVE D SMITH        SPR # 80338
*.       11 06 90      0005      MARK FRESCH          SPR # 91248
*.       12 03 91      0006      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0007      ED NICHLAS           SPR 92637 PDL Removal
*.       04/20/92      0008      Toolset              SPR 91895
*.       03/25/93      0009      Toolset              SPR NA93-06801
*.       01/28/94      0010      Toolset              SPR NA94-01101
*.       03/03/94      0011      Toolset              SPR NA94-05501
*.       04/01/95      0012      Toolset              CCR NA95-11802
*.       12/07/95      0013      STEVE SMITH          CCR NA94-26302
*.       12/07/95      0013      STEVE SMITH          CCR NA94-26301
*.       12/23/96      0014      Toolset              CCR NA95-11807
*.       03/16/99      0015      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A30743__BUFFER_CONTROL( PARAM )
*.
*.  MODULE FUNCTION:
*.    Buffer control routine for Composite Reflectivity map program.
*.
*.  MODULES CALLED: A30740__CAT_IN_PRODBUF, A30744__PRODUCT_GENERATION_CONTROL, 
*.                  A30749__END_OF_PRODUCT_PROCESSING, A31145__ABORT_ME, 
*.                  A31168__ABORT_ME_BECAUSE, A31169__ABORT_DATATYPE_BECAUSE, 
*.                  A31210__CHECK_DATA, A31211__GET_INBUF, A31212__REL_INBUF, 
*.                  A31215__GET_OUTBUF, A31216__REL_OUTBUF 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT         TYPE        DESCRIPTION
*.    -   -----         ----        -----------
*.    G   MEM           I*4         Array in RPG shared memory set aside for
*.                                  buffer sharing.
*.    G   COMBATTR      I*4         (CONSTANT)DATA BUFFER TYPE:  COMBINED
*.                                  ATTRIBUTES TABLE BUFFER ID
*.    G   CRCG460       I*4         (CONSTANT)Data Buffer Type: Composite
*.                                  Reflectivity Cartesian Grid (4x4, 460,
*.                                  464x464).
*.    G   CRPG          I*4         (CONSTANT)Data Buffer Type: Composite
*.                                  Reflectivity Polar Grid (360x460).
*.    G   DESTROY       I*4         (CONSTANT)Mnemonic used as input to
*.                                  A31216__REL_OUTBUF. Indicates "do not pass
*.                                  data to other tasks".
*.    G   FORWARD       I*4         (CONSTANT)Parameter to indicate that an
*.                                  output buffer is to be forwarded to
*.                                  successor tasks
*.    G   NORMAL        I*4         (CONSTANT)Parameter which indicates normal
*.                                  completion of requested operation to
*.                                  acquire input or output buffer
*.    G   NOT_REQD      I*4         (CONSTANT)Mnemonic used as output from
*.                                  A31211__GET_ INBUF. Indicates data type
*.                                  for which output buffer was requested is
*.                                  not required.
*.    G   NO_MEM        I*4         (CONSTANT)Parameter which indicates no
*.                                  memory available on attempt to acquire
*.                                  output buffer
*.    G   PROD_MEM_SHED I*4         (CONSTANT)(CONSTANT)Parameter which
*.                                  indicates that product aborted due to
*.                                  memory load shedding
*.    G   SCRATCH       I*4         (CONSTANT)DATA BUFFER TYPE FOR TASK
*.                                  SCRATCH DATA BUFFERS
*.    C   PFLAG         L*4         Array of flags indicating whether products
*.                                  should be produced.
*.    C   CRCG230       I*4         (CONSTANT)DATA BUFFER TYPE:  COMPOSITE
*.                                  REFLECTIVITY CARTESIAN GRID (1 x 1, 230,
*.                                  232 x 232)
*.    C   CRP35         I*4         (CONSTANT)Data Buffer Type: Index for
*.                                  composite reflectivity product (1x1
*.                                  resolution, 230 KM range, data level 8).
*.    C   CRP36         I*4         (CONSTANT)Data Buffer Type:Index for
*.                                  reflectivity product (4x4 resolution, 460
*.                                  Km range, data level 8).
*.    C   CRP37         I*4         (CONSTANT)Data Buffer Type: Index for
*.                                  composite reflectivity product (1x1
*.                                  resolution, 230 km range, data level 16).
*.    C   CRP38         I*4         (CONSTANT)Data Buffer Type: Index to
*.                                  composite reflectivity product (4x4
*.                                  resolution, 460 km range, data level 16).
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    G   MEM     I*4         Array in RPG shared memory set aside for buffer
*.                            sharing.
*.    C   PFLAG   L*4         Array of flags indicating whether products
*.                            should be produced.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    G   MEM               I*4         Array in RPG shared memory set aside
*.                                      for buffer sharing.
*.    C   PFLAG             L*4         Array of flags indicating whether
*.                                      products should be produced.
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME           TYPE        DESCRIPTION
*.    ----           ----        -----------
*.    BSIZ           I*4         An array of product output buffer sizes for
*.                               the Composite Reflectivity products
*.    BUILDCAT       L*4         FLAG INDICATING WHETHER TO BUILD COMBINED
*.                               ATTRIBUTES TABLE
*.    CRCG230_NO_MEM L*4         Indicates no memory for CRCG230.
*.    CRCG460_NO_MEM L*4         Indicates no memory for CRCG460.
*.    CRPTR          I*4         Array of pointers to the output buffers for
*.                               the Composite Reflectivity products
*.    FIRST_PROD     I*4         Loop control variable initial value.
*.    GRID1          I*4         (Constant) = 1:  LOOP CONTROL PARAMETER,
*.                               INDEX
*.    GRID2          I*4         (Constant) = 2:  LOOP CONTROL PARAMETER,
*.                               INDEX
*.    I              I*4         Do loop index.
*.    INPTR          I*4         Used in subroutine calls when building
*.                               combined attributes table display in product
*.                               buffer.
*.    INSTAT         I*4         Status returned from a request for input
*.                               buffer containing polar grid of comp. refl.
*.                               values.
*.    N              I*4         Do Loop index.
*.    NBUFS          I*4         Dimension of arrays PROD, BSIZ, and CRPTR,
*.                               and upper limit of do loop.
*.    NP2            I*4         Calculated number used as index (offset) into
*.                               array (PROD, BSIZ, CRPTR) which contain
*.                               product codes, product buffer sizes, and
*.                               memory placements.
*.    NP4            I*4         Calculated number used as index (offset) into
*.                               array (PROD, BSIZ, CRPTR) which contain
*.                               product codes, product buffer sizes, and
*.                               memory placements.
*.    OPSTAT         I*4         :Returned status of call to A31215 to get
*.                               output buffer
*.    OPSTAT1        I*4         Internal variable used to hold operational
*.                               status (call argument) of particular buffer.
*.    PBUFPTR        I*4         Mem pointer for a buffer of input dat of the
*.                               requested type.
*.    PROD           I*4         Table of product codes
*.    RELSTAT        I*4         Indicates whether product buffer is to be
*.                               forwarded or destroyed upon release
*.    REQFLAG        L*4         Flag indicating if any products are to be
*.                               produced
*.    RQDAT          I*4         Buffer id of input buffer received
*.    SCRBUF         L*4         Used for scratch buffer request
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A3CD00
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE.
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP07.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK07.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
$EJECT
C
      IMPLICIT NONE
C
$INCLUDE A309.INC/G,**A3PM00 (NEND NLIST)
$INCLUDE A309.INC/G,**A3PM07 (NEND NLIST)
$INCLUDE            **A3CD00 (NEND NLIST)
$INCLUDE A307.INC,  **A307C9 (NLIST)
C
C*** LOCAL DECLARATIONS:
C
      INTEGER PARAM
      INTEGER NBUFS,N,NP2,NP4,I
      INTEGER GRID1,GRID2, FIRST_PROD
      INTEGER PBUFPTR,INPTR
      LOGICAL CRCG230_NO_MEM, CRCG460_NO_MEM
      PARAMETER (NBUFS=6,GRID1=1,GRID2=2,FIRST_PROD=3)
C
      INTEGER PROD(NBUFS)
      INTEGER BSIZ(NBUFS)
      INTEGER CRPTR(NBUFS)
      INTEGER OPSTAT,RELSTAT,OPSTAT1
      INTEGER RQDAT,INSTAT
C
      DATA PROD /CRCG230,CRCG460,CRP35,CRP36,CRP37,CRP38/
      DATA BSIZ /107658,26922,50000,15000,75000,20000/
C
      LOGICAL REQFLAG,BUILDCAT,SCRBUF(2)
C
C*** EXECUTABLE CODE:
C    ---------------
C*** INITIALIZATION:
C
      OPSTAT  = NORMAL
      RELSTAT = FORWARD
      REQFLAG =.FALSE.
      SCRBUF(GRID1) = .FALSE.
      SCRBUF(GRID2) = .FALSE.
      DO 10 N = 1,NBUFS,1
  10  PFLAG(N)= .FALSE.
      CRCG230_NO_MEM = .FALSE.
      CRCG460_NO_MEM = .FALSE.
C
C*** REQUEST INPUT BUFFER CONTAINING POLAR GRID OF COMP REFL VALUES
C
      CALL A31211__GET_INBUF(CRPG,PBUFPTR,RQDAT,INSTAT)
C
C***  IF RETURN STATUS IS NORMAL, REQUEST APPROPRIATE OUTPUT BUFFERS
C     OTHERWISE, IF THE INPUT DATA STREAM HAS BEEN CANCELLED FOR ANY
C     REASON, RETURN TO THE PARAMETER TRAP ROUTER TO WAIT FOR FURTHER
C     INPUT
C
      IF (INSTAT .EQ. NORMAL) THEN
C
C*** REQUEST ALL POSSIBLE OUTPUT BUFFERS TO SEE AT WHAT RANGES,
C*** RESOLUTIONS, AND DATA LEVELS COMPOSITE REFLECTIVITY MAPS
C*** NEED TO BE GENERATED:
C
C     PRODUCT-CODE    RANGE (KM.)   RESOLUTION   DATA LEVELS
C     ------------    -----------   ----------   -----------
C        N = 1          0 - 230       1 X 1          -
C        N = 2          0 - 460       4 X 4          -
C        N = 3          0 - 230       1 X 1          8
C        N = 4          0 - 460       4 X 4          8
C        N = 5          0 - 230       1 X 1         16
C        N = 6          0 - 460       4 X 4         16
C
C*** OBTAIN AN OUTPUT BUFFER FOR THE UNCOMPRESSED CARTESIAN GRID.
C    IF THE ATTEMPT FAILS, THEN THERE IS NO POINT IN PROCESSING
C    FURTHER, SO RETURN TO THE PARAMETER TRAP RECEIVER ROUTINE
C
C*** 230-KM CARTESIAN GRID AND PRODUCTS:
C    ----------------------------------
        N=GRID1
        NP2=N+2
        NP4=N+4
C
        CALL A31215__GET_OUTBUF(PROD(NP2),BSIZ(NP2),CRPTR(NP2),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          PFLAG(NP2)=.TRUE.
        ELSE IF (OPSTAT .EQ. NO_MEM) THEN
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(NP2),PROD_MEM_SHED)
        END IF
C
        CALL A31215__GET_OUTBUF(PROD(NP4),BSIZ(NP4),CRPTR(NP4),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          PFLAG(NP4)=.TRUE.
        ELSE IF (OPSTAT .EQ. NO_MEM) THEN
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(NP4),PROD_MEM_SHED)
        ENDIF
C
        CALL A31215__GET_OUTBUF(PROD(N),BSIZ(N),CRPTR(N),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          PFLAG(N)=.TRUE.
          REQFLAG=.TRUE.
        ELSE IF ((PFLAG(NP2) .OR. PFLAG(NP4)) .AND.
     1        OPSTAT .EQ. NOT_REQD) THEN
C
C IF MAPS ARE REQUESTED, THEN GET SCRATCH BUFFER
C
          CALL A31215__GET_OUTBUF(SCRATCH,BSIZ(N),CRPTR(N),OPSTAT)
          IF (OPSTAT.EQ.NORMAL) THEN
            REQFLAG=.TRUE.
            PFLAG(N)=.TRUE.
            SCRBUF(GRID1)=.TRUE.
          END IF
        END IF
C
C*** UNABLE TO GET BUFFER OWING TO NO MEMORY.   ABORT DATATYPES
C
        IF (OPSTAT .EQ. NO_MEM) THEN
          DO 40 I = NP2, NP4, 2
            IF (PFLAG(I)) CALL A31216__REL_OUTBUF(CRPTR(I),DESTROY)
            CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(I),PROD_MEM_SHED)
            PFLAG(I) = .FALSE.
 40       CONTINUE
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(N),PROD_MEM_SHED)
          CRCG230_NO_MEM = .TRUE.
        END IF
C
C*** 460-KM CARTESIAN GRID AND PRODUCTS:
C    ----------------------------------
        N=GRID2
        NP2=N+2
        NP4=N+4
        CALL A31215__GET_OUTBUF(PROD(NP2),BSIZ(NP2),CRPTR(NP2),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          PFLAG(NP2)=.TRUE.
        ELSE IF (OPSTAT .EQ. NO_MEM) THEN
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(NP2),PROD_MEM_SHED)
        END IF
C
        CALL A31215__GET_OUTBUF(PROD(NP4),BSIZ(NP4),CRPTR(NP4),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          PFLAG(NP4)=.TRUE.
        ELSE IF (OPSTAT .EQ. NO_MEM) THEN
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(NP4),PROD_MEM_SHED)
        ENDIF
C
        CALL A31215__GET_OUTBUF(PROD(N),BSIZ(N),CRPTR(N),OPSTAT)
        IF(OPSTAT.EQ.NORMAL) THEN
          REQFLAG=.TRUE.
          PFLAG(N)=.TRUE.
        ELSE IF (PFLAG(NP2) .OR. PFLAG(NP4) .AND.
     1           OPSTAT .EQ. NOT_REQD) THEN
C
C IF MAPS ARE REQUESTED, GET SCRATCH BUFFER
C
          CALL A31215__GET_OUTBUF(SCRATCH,BSIZ(N),CRPTR(N),OPSTAT)
          IF (OPSTAT .EQ. NORMAL) THEN
            REQFLAG=.TRUE.
            PFLAG(N)=.TRUE.
            SCRBUF(GRID2)=.TRUE.
          END IF
        END IF
C
C*** UNABLE TO ACQUIRE BUFFERS OWING TO NO MEMORY.  ABORT DATATYPES.
C
        IF (OPSTAT .EQ. NO_MEM) THEN
          DO 50 I = NP2, NP4, 2
            IF (PFLAG(I)) CALL A31216__REL_OUTBUF(CRPTR(I),DESTROY)
            CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(I),PROD_MEM_SHED)
            PFLAG(I) = .FALSE.
 50       CONTINUE
          CALL A31169__ABORT_DATATYPE_BECAUSE(PROD(N),
     1                                        PROD_MEM_SHED)
          CRCG460_NO_MEM = .TRUE.
        ENDIF
C
C*** CHECK TO SEE IF ANY PRODUCTS ARE REQUESTED:
C    ------------------------------------------
C*** IF YES, CONTINUE PROCESSING
C*** IF NOT, RETURN TO THE PARAMETER TRAP RECEIVER ROUTINE:
        IF (REQFLAG) THEN
          DO 20 N=GRID1,GRID2
            IF (PFLAG(N)) THEN
              CALL A30744__PRODUCT_GENERATION_CONTROL(PBUFPTR,CRPTR
     1                                             ,PROD,PFLAG,BSIZ,N)
              IF (SCRBUF(N)) THEN
C
C*** IF BUFFER WAS A SCRATCH BUFFER, DESTROY .... OTHERWISE, FORWARD
C
                CALL A31216__REL_OUTBUF(CRPTR(N),DESTROY)
              ELSE
                CALL A31216__REL_OUTBUF(CRPTR(N),FORWARD)
              END IF
              PFLAG(N) = .FALSE.
            ENDIF
 20       CONTINUE
C
C*** RELEASE INPUT (POLAR GRID) BUFFER:
          CALL A31212__REL_INBUF(PBUFPTR)
C
C*** BUILD COMBINED ATTRIBUTES TABLE DISPLAY IN PRODUCT BUFFER:
C    ---------------------------------------------------------
          CALL A31210__CHECK_DATA(COMBATTR,OPSTAT1)
          IF(OPSTAT1.EQ.NORMAL) THEN
            CALL A31211__GET_INBUF(COMBATTR,INPTR,RQDAT,OPSTAT1)
            IF(OPSTAT1.EQ.NORMAL)THEN
              BUILDCAT=.TRUE.
              DO 30 N=FIRST_PROD,NBUFS
                IF( PFLAG(N) )  THEN
                  CALL A30740__CAT_IN_PRODBUF( MEM(CRPTR(N)),BSIZ(N),
     1                                         BUILDCAT,INPTR )
                  BUILDCAT = .FALSE.
                END IF
 30           CONTINUE
              CALL A31212__REL_INBUF(INPTR)
            ENDIF
          ENDIF
C
C*** CALL END OF PRODUCT PROCESSING TO RELEASE THE OUPUT BUFFERS:
C    -----------------------------------------------------------
          CALL A30749__END_OF_PRODUCT_PROCESSING(CRPTR,RELSTAT,PFLAG)
        ELSE
C
C*** RELEASE INPUT (POLAR GRID) BUFFER IF NO PRODUCTS GENERATED
C
          CALL A31212__REL_INBUF(PBUFPTR)
C
C*** DESTROY ANY OUTSTANDING OUTPUT BUFFERS
C
          RELSTAT = DESTROY
          CALL A30749__END_OF_PRODUCT_PROCESSING(CRPTR,RELSTAT,PFLAG)
C
C*** CALL NO MEM CLEANUP ROUTINE
C
          IF (CRCG230_NO_MEM .AND. CRCG460_NO_MEM) THEN
            CALL A31168__ABORT_ME_BECAUSE(PROD_MEM_SHED)
          ELSE
            CALL A31145__ABORT_ME
          END IF
        ENDIF
C
C*** NO INPUT BUFFER AVAILABLE
C
      ELSE
C
        CALL A31145__ABORT_ME
      END IF
C
C    --------------------------------------------------------
C*** RETURN TO THE PARAMETER TRAP ROUTER ROUTINE TO DETERMINE
C*** WHETHER ANY MORE COMPOSITE REFLECTIVITY MAPS ARE NEEDED
C
      RETURN
      END
