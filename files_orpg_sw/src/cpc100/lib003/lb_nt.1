
NAME
    lb_nt - Event notification test tool.

SYNOPSIS
    lb_nt [-pmnrd] an1 an2 ... lb_name,msgid ...

DESCRIPTION

    lb_nt is a tool for testing various notifications, both the LB update 
    notification (UN) and the application defined notification (AN), features.
    With lb_nt, one can do the following tests:

	Listen to a list of ANs and print the event messages.

	Listen to a list of UNs.

	Post an AN.

	Print current notification registration records in an LB.

	Send a message to the local rssd asking for dumping the event 
	registration table, which contains complete info about local event
	registration.

	Monitor the local rssd's event notification activities such as event
	registration, deregistration, posting and delivery.

    Refer to Examples for details on how to use lb_nt's various functions.

    Note that rssd must run on each of the hosts involved in order to support
    the event notification service.

OPTIONS
    -p	an
	Posts an AN of event number "an". "lb_nt -p REG_TABLE" sends a message
	to the local rssd asking for dumping the event registration table.

    -m	msg_string
	Specifies a message string to post with "an". The default is an empty
	message.

    -n	n_chars
	Specifies the number of characters printed in displaying AN messages.
	The default is 12 characters.

    -r	"lb_nt -r lb_name" prints the current notification registration records
	in LB "lb_name".

    -d	"lb_nt -d" prints the local rssd's event notification activities.

EXAMPLES
    Example 1: lb_nt 13 25
	Listens to application events 13 and 25. When any of the events is 
	posted, the event is printed with length of the event message and the
	first part (12 characters) of the event message. Use control-c to 
	terminate lb_nt.

    Example 2: lb_nt -n 32 13 25
	The same as Example 1 except that the first 32, instead of 12, 
	characters of event messages are printed.

    Example 3: lb_nt t1.lb,34 t2.lb,12
	Listens to LB update events on message 34 in LB "t1.lb" and message 12
	in LB "t2.lb". When any of the events happens, the event is printed. 
	Use control-c to terminate lb_nt. Remote LB names such as 
	"apple:/tmp/t.lb,12" (where LB /tmp/t.lb is on a remote host named 
	"apple") can be specified.

    Example 4: lb_nt 13 t1.lb,MSG_EXPIRED t2.lb,ALL_MSGS
	Listens to both AN and UN. In this example, lb_nt listens to all 
	message expiration events in LB "t1.lb" and update events of all 
	messages in LB "t2.lb".

    Example 5: lb_nt 13
	Posts event 13 without event message.

    Example 6: lb_nt -m "My event message" 13
	Posts event 13 with event message "My event message".

    Example 7: lb_nt -r t1.lb
	prints the current notification registration records in LB "t1.lb".

    Example 8: lb_nt -d
	Prints all event notification activities in the local rssd. Use 
	control-c to terminate lb_nt.

    Example 9: lb_nt -p REG_TABLE
	Sends a message to the local rssd asking for dumping the event 
	registration table. The table is dumped as part of the event 
	notification activities printed by "lb_nt -d". Thus one must run 
	"lb_nt -d" simultaneously.

EXIT STATUS
    0:		Terminated normally. 

    non-zero:	Terminated because an error was detected.

SEE ALSO
    lb_create(1), lb_cat(1), lb_rm(1), lb_info(1), lb_rep(1), lb(3)



