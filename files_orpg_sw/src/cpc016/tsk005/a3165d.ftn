C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 20:36:43 $
C $Id: a3165d.ftn,v 1.3 2002/12/16 20:36:43 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3165D__CNVTIME(SECONDS,HR,MIN,SEC)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3165D__CNVTIME
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     --------------------
*.       02 28 86      0000      Mike Istok           Part 2, RPG Build 1
*.       05 01 86      0001      MIKE ISTOK           SPR# 60120
*.       05 29 86      0002      JSGROMMONS           SPR# 60313
*.       10 02 86      0003      J GROMMONS           SPR # 60346
*.       10 30 89      0004      JO STALEY            SPR # 80612
*.       02 22 91      0005      David M. Lynch       SPR # 91257
*.       01 14 91      0005      JOHN DEPHILIP        SPR # 91210
*.       12/10/91      0006      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0007      Toolset              SPR 91895
*.       03/25/93      0008      Toolset              SPR NA93-06801
*.       01/28/94      0009      Toolset              SPR NA94-01101
*.       03/03/94      0010      Toolset              SPR NA94-05501
*.       04/11/96      0011      Toolset              CCR NA95-11802
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A3165D__CNVTIME(SECONDS,HR,MIN,SEC)
*.
*.  MODULE FUNCTION:
*.     CONVERT SECONDS TO HR,MIN,SEC
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT   TYPE        DESCRIPTION
*.    -   -----   ----        -----------
*.    P   HR      I*4         Number of seconds to be converted.
*.    P   MIN     I*4         MINUTES
*.    P   SECONDS I*4         TIME IN SECONDS
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   HR      I*4         Number of seconds to be converted.
*.    P   MIN     I*4         MINUTES
*.    P   SEC     I*4         SECONDS
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME    TYPE        DESCRIPTION
*.    ----    ----        -----------
*.    SECPHR  I*4         Seconds per hour = 3600
*.    SECPMIN I*4         Seconds per minute = 60
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS:  NONE
*.
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.     THE FOLLOWING FILES MUST BE ACCESSABLE TO THE COMPILER:
*.         NONE
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE
C* This module converts time expressed in seconds to individual      *
C* values of hours, minutes, and seconds.                            *
      INTEGER*4 HR,MIN,SEC,SECONDS
C...
      INTEGER*4 SECPHR,SECPMIN
      PARAMETER (SECPHR=3600,SECPMIN=60)
C...
X     TYPE *,'ENTERING A3165D'
X     TYPE *,'J: ENTER SECONDS ',SECONDS
C* compute the number of hours
      HR=SECONDS/SECPHR
C* compute the remaining number of minutes
      MIN=(SECONDS-HR*SECPHR)/SECPMIN
C* compute the remaining number of seconds
      SEC=SECONDS-HR*SECPHR-MIN*SECPMIN
X     TYPE *,'J: EXIT HR, MIN, SEC  ',HR,MIN,SEC
      RETURN
      END
