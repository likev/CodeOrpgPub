C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 20:36:14 $
C $Id: a3163g.ftn,v 1.3 2002/12/16 20:36:14 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3163G__SLOW_PACKET(X_POS,Y_POS,BUFOUT)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3163G__SLOW_PACKET
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       06 12 95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE:
*.
*.          CALL A3163G__SLOW_PACKET(X_POS,Y_POS,BUFOUT)
*.
*.  MODULE FUNCTION:
*.
*.     THIS MODULE WILL CONSTRUCT A SPECIAL SYMBOL PACKET INTO THE
*.     OUTPUT BUFFER FOR SLOW MOVING STORM CELLS.  THE LOCATION OF
*.     THE SYMBOL IS INPUT.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT   TYPE        DESCRIPTION
*.    -   -----   ----        -----------
*.    C   OPTRIDX I*4         Output buffer index for Storm Track Information
*.                            product.
*.    P   X_POS   R*4         The x-position of the storm cell
*.    P   Y_POS   R*4         The y-position of the storm cell
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    C   OPTRIDX I*4         Output buffer index for Storm Track Information
*.                            product.
*.    P   BUFOUT  I*2         The Product Output Buffer
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME              TYPE        DESCRIPTION
*.    ----              ----        -----------
*.    CIRCLE_PACKETCODE I*4         Packet code to draw a circle
*.    FORW_PACKETCODE   I*4         Packet code to indicate a forward position
*.    IX                I*4         Integer value of X position for symbol
*.    IY                I*4         INTEGER VALUE OF Y POSITION
*.    KMX4              R*4         KM-TO-QUARTER-KM CONVERSION FACTOR
*.    LENG_CIRCLEPACKET I*4         The number of bytes in the block not
*.                                  including the packet code and length field
*.    LENG_FORWPACKET   I*4         The length of a forward position block in
*.                                  bytes not including the packet code or
*.                                  length field
*.    RADIUS            I*4         Radius of circle packet code
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A316C3
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE
C
$INCLUDE A316.INC/G, **A316C3 (NLIST NEND)
C
      REAL X_POS,Y_POS
C
      INTEGER IX,IY,FORW_PACKETCODE,LENG_FORWPACKET,RADIUS
      INTEGER CIRCLE_PACKETCODE, LENG_CIRCLEPACKET
      PARAMETER(CIRCLE_PACKETCODE=25,LENG_CIRCLEPACKET=6,RADIUS=6)
      PARAMETER(FORW_PACKETCODE= 24,LENG_FORWPACKET = 10)
C
      REAL KMX4
      PARAMETER(KMX4=4.0)
      INTEGER*2 BUFOUT(*)
C
C **************** E X E C U T A B L E  *****************
C
C**  STORE FORWARD POSITION PACKETCODE AND LENGTH
C
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = FORW_PACKETCODE
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = LENG_FORWPACKET
C
C**  STORE CIRCLE DRAW PACKET CODE AND PACKET LENGTH
C
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = CIRCLE_PACKETCODE
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = LENG_CIRCLEPACKET
C
C**  CONVERT POSITION TO QUARTER-KM (INTEGER)
C
      IX = NINT(X_POS*KMX4)
      IY = NINT(Y_POS*KMX4)
C
C**  STORE POSITION IN OUTPUT BUFFER
C
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = IX
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = IY
C
C**  STORE RADIUS INTO OUTPUT BUFFER
C
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = RADIUS
C
C**  RETURN TO CALLER
C
      RETURN
      END
