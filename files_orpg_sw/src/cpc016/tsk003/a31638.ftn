C
C RCS info
C $Author: ryans $
C $Locker:  $
C $Date: 2005/02/28 15:22:03 $
C $Id: a31638.ftn,v 1.7 2005/02/28 15:22:03 ryans Exp $
C $Revision: 1.7 $
C $State: Exp $
C
      SUBROUTINE A31638__TAB_BLK(NTOTPRED,AVGSPEED,AVGDIREC,
     >           STORMIDTYP,STORMOTION,STORMFORW,FORCADAP,BUFOUT,
     >           STRT_TABHD,STRT_TABLK,VOLNO,MXBUFIDX)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A31638__TAB_BLK
*.
*.  MODULE VERSION: 0015
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       10 25 85      0000      Mary Jo Staley       Part 2, RPG Build 3
*.       04 25 86      0001      MARY JO STALEY       SPR # 60118
*.       06 26 86      0002      ATARA WEINSTEIN      SPR # 60313
*.       10 02 86      0003      J GROMMONS           SPR # 60346
*.       02 22 91      0004      David M. Lynch       SPR # 91257
*.       02 15 91      0004      JOHN DEPHILIP        SPR # 91762
*.       12 03 91      0005      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0006      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0007      Toolset              SPR 91895
*.       03/25/93      0008      Toolset              SPR NA93-06801
*.       01/28/94      0009      Toolset              SPR NA94-01101
*.       03/03/94      0010      Toolset              SPR NA94-05501
*.       04/05/94      0011      Steve Smith          CCR NW-94-007-10
*.       04/01/95      0012      Toolset              CCR NA95-11802
*.       04/27/95      0013      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0014      Toolset              CCR NA95-11807
*.       03/16/99      0015      Toolset              CCR NA98-23803
*.       12/09/03      0016      CHRIS CALVERT        CCR NA03-30002
*.       02/09/05      0017      YUKUAN SONG          CCR NA04-08301
*.
*.  CALLING SEQUENCE:
*.    CALL A31638__TAB_BLK(NTOTPRED,AVGSPEED,AVGDIREC,
*.                        STORMIDTYP,STORMOTION,STORMFORW,
*.                        FORCADAP,BUFOUT,STRT_TABHD,STRT_TABLK,
*.                        VOLNO,MXBUFIDX)
*.
*.  MODULE FUNCTION:
*.     This is the controlling procedure for the formatting of the
*.     Tabular Block of the product for Storm Track.
*.
*.  MODULES CALLED: A31639__FOR_TITLES, A3163A__FORM_LIN1, A3CM3C__PAF_ADAPT 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT               TYPE        DESCRIPTION
*.    -   -----               ----        -----------
*.    G   MAX_STI_ALPHA_CELLS I*4         The Maximum number of Cells in the
*.                                        STI Alphanumeric Product threshold
*.                                        in adaptation data.
*.    G   PHEADLNG            I*4         (CONSTANT)Number of half words in
*.                                        product header (its length).
*.    G   STA_FINT            I*4         (CONSTANT)Offset to the Forecast
*.                                        Interval (min) in the adaptation
*.                                        data part of the centroids &
*.                                        tracking/forecast output buffers.
*.    G   STA_NFOR            I*4         (CONSTANT)Offset to the Number of
*.                                        (Forecast) Intervals in the
*.                                        adaptation data part of the
*.                                        centroids & tracking/forecast output
*.                                        buffers.
*.    C   OPTRIDX             I*4         Output buffer index for Storm Track
*.                                        Information product.
*.    P   AVGDIREC            R*4         Average Direc. of all "Continuing"
*.                                        storms, this volume scan (degrees
*.                                        from)
*.    P   AVGSPEED            R*4         :Average Speed of all "Continuing"
*.                                        storms
*.    P   BUFOUT              I*2         OUTPUT BUFFER FOR THE PRODUCT
*.    P   FORCADAP            I*4         Array of Storm Series Adaptation
*.                                        Data.
*.    P   MXBUFIDX            I*4         MAX.INDEX IN OUTPUT BUFFER
*.    P   NTOTPRED            I*4         TOTAL NUMBER OF STORMS.
*.    P   STORMFORW           R*4         Three dimensional array of forcast
*.                                        positions.
*.    P   STORMIDTYP          I*4         2-D array of supplementary storm
*.                                        desciption information per volume
*.                                        scan
*.    P   STORMOTION          R*4         2-D array of storm cell motion
*.                                        attributes.
*.    P   STRT_TABLK          I*4         START INDEX IN PRODUCT OF TAB. BLK.
*.    P   VOLNO               I*4         VOLUME SCAN NUMBER
*.
*.    *   OUTPUT     TYPE        DESCRIPTION
*.    -   ------     ----        -----------
*.    C   OPTRIDX    I*4         Output buffer index for Storm Track
*.                               Information product.
*.    P   BUFOUT     I*2         OUTPUT BUFFER FOR THE PRODUCT
*.    P   STRT_TABHD I*4         START INDEX IN OUTPUT OF TABULAR PRODUCT
*.                               HEADER.
*.    P   STRT_TABLK I*4         START INDEX IN PRODUCT OF TAB. BLK.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    C   OPTRIDX           I*4         Output buffer index for Storm Track
*.                                      Information product.
*.    P   AVGDIREC          R*4         Average Direc. of all "Continuing"
*.                                      storms, this volume scan (degrees
*.                                      from)
*.    P   AVGSPEED          R*4         :Average Speed of all "Continuing"
*.                                      storms
*.    P   BUFOUT            I*2         OUTPUT BUFFER FOR THE PRODUCT
*.    P   FORCADAP          I*4         Array of Storm Series Adaptation Data.
*.    P   NTOTPRED          I*4         TOTAL NUMBER OF STORMS.
*.    P   STORMFORW         R*4         Three dimensional array of forcast
*.                                      positions.
*.    P   STORMIDTYP        I*4         2-D array of supplementary storm
*.                                      desciption information per volume scan
*.    P   STORMOTION        R*4         2-D array of storm cell motion
*.                                      attributes.
*.    P   VOLNO             I*4         VOLUME SCAN NUMBER
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME            TYPE        DESCRIPTION
*.    ----            ----        -----------
*.    ADPT_BYTES      I*4         NUMBER OF BYTES FOR ADAPTATION DATA
*.    BLKID           I*4         BLOCK ID OF THE TABULAR BLOCK.
*.    BYTES_LEFT      I*4         NUMBER OF BYTES FREE IN BUFFER
*.    BYTES_PER_PAGE  I*4         Number of bytes per page.
*.    DIVIDER         I*4         Parameter used to separate blocks or pages
*.                                in a product
*.    END_STMIDX      I*4         END INDEX OF STORMS FOR LOOP CONTROL.
*.    FIRST_PAGE      I*4         Parameter value for first page of Storm
*.                                Track Alphanumeric
*.    FULL_PAGES      I*4         NUMBER OF FULL PAGES OF TABULAR.
*.    I               I*4         Do loop index.
*.    J               I*4         Loop control.
*.    K               I*4         Loop control index variable.
*.    MX_PAGES        I*4         Maximum number of pages allocated.
*.    NEWIDX          I*4         Updated index from A3CM33.
*.    ODD_STMS        I*4         NUMBER OF STORMS ON PARTIAL PAGE.
*.    SAVLNIX         I*4         INDEX IN PRODUCT BLK FOR BLK LENGTH.
*.    STMS_FIRST_PAGE I*4         The number of storms that will fit on the
*.                                first page of the STorm Track Tabular
*.                                Alphanumeic
*.    STMS_PER_PAGE   I*4         NUMBER OF STORMS ON A FULL PAGE.
*.    STOTPG_IDX      I*4         SUBTOTAL PAGE INDEX
*.    STRT_STMIDX     I*4         PROCESSING INDEX FOR LOOP CONTROL.
*.    TIVL            I*4         TIME INTERVAL
*.    TOTAL_STORMS    I*4         The total number of storm cell detected this
*.                                volume scan by the  SCIT suite of algorithms
*.    TOT_PAGES       I*4         NUMBER OF PAGES OF TABLULAR DATA.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A316C3
*.    CELL_PROD
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************

      IMPLICIT NONE

C**Attach Shared RPG Adaptation Data definition file:
$INCLUDE A309ADPT.INC/G,**A3CD70_STORM_CELL_SEG (NLIST)

$INCLUDE A315BUF.INC/G,**A315P7F (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315D7 (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315PSAD (NEND NLIST)
$INCLUDE A309.INC/G,**A3PM01 (NEND NLIST)
$INCLUDE A316.INC/G,**A316C3 (NEND NLIST)
$INCLUDE A309ADPT.INC/G,**A3CD70_CELL_PROD (NEND NLIST)
C
C*******      D A T A   D E F I N I T I O N   ***************
C
      INTEGER*2 BUFOUT(*)
      INTEGER VOLNO
      INTEGER STRT_TABLK,TOT_PAGES,STMS_PER_PAGE
      INTEGER FULL_PAGES,NEWIDX,STRT_TABHD,SAVLNIX
      INTEGER ODD_STMS,STRT_STMIDX,END_STMIDX
      INTEGER DIVIDER,BLKID,TOTAL_STORMS
      INTEGER TIVL(4), STMS_FIRST_PAGE
      INTEGER STOTPG_IDX,BYTES_LEFT,MX_PAGES,ADPT_BYTES
      INTEGER BYTES_PER_PAGE,MXBUFIDX,FIRST_PAGE
      INTEGER I,J,K
C
      PARAMETER(BYTES_PER_PAGE=1314,STMS_PER_PAGE=9)
      PARAMETER(ADPT_BYTES=BYTES_PER_PAGE,DIVIDER=-1,BLKID=3)
      PARAMETER(STMS_FIRST_PAGE=7,FIRST_PAGE=1)
C
C*********************  E X E C U T A B L E    C O D E *************
C
C** CALCULATE THE INDEX IN OUTPUT BUFFER OF START OF TABULAR
C
      STRT_TABLK = OPTRIDX + 1
C
C** STORE BLOCK OVERHEAD STUFF INTO OUTPUT BUFFER
C
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = DIVIDER
      OPTRIDX = OPTRIDX + 1
      BUFOUT(OPTRIDX) = BLKID
      OPTRIDX = OPTRIDX + 1
      SAVLNIX = OPTRIDX
      OPTRIDX = OPTRIDX+2
C
C** SAVE INDEX FOR REPEATED HEADER
C
      STRT_TABHD = OPTRIDX
      OPTRIDX = OPTRIDX + PHEADLNG
      BUFOUT(OPTRIDX) = DIVIDER
      OPTRIDX = OPTRIDX + 1
      STOTPG_IDX = OPTRIDX
C
C** CALCULATE THE NUMBER OF STORMS TO DISPLAY IN ALPHA PORTION OF
C** PRODUCT.  THIS IS DONE IS ORDER TO LIMIT THE PRODUCT SIZE FOR
C** NARROWBAND LOADSHEDDING CONSIDERATIONS.
C
      TOTAL_STORMS = MIN(MAX_STI_ALPHA_CELLS,NTOTPRED)
C
C** CALCULATE NUMBER OF PAGES OF DATA
C
      IF (TOTAL_STORMS .LE. STMS_FIRST_PAGE) THEN
C
C** ONLY ONE PAGE OF STORMS TO DISPLAY
C
         FULL_PAGES = TOTAL_STORMS/STMS_FIRST_PAGE
         ODD_STMS = MOD(TOTAL_STORMS,STMS_FIRST_PAGE)
      ELSE
C
C** THERE ARE MULTIPLE PAGES OF STORMS TO DISPLAY
C
         FULL_PAGES = (TOTAL_STORMS-STMS_FIRST_PAGE)/STMS_PER_PAGE
     >                + 1
         ODD_STMS = MOD((TOTAL_STORMS-STMS_FIRST_PAGE),STMS_PER_PAGE)
      END IF
C
C** ADJUST NUMBER OF PAGES TO BE PROCESSED DEPENDING
C** UPON THE AVAILABILITY OF THE OUTPUT BUFFER SPACE
C
      BYTES_LEFT = (MXBUFIDX-OPTRIDX)*2
      MX_PAGES = BYTES_LEFT/BYTES_PER_PAGE
      IF(MX_PAGES.LT.FULL_PAGES)THEN
         FULL_PAGES = MX_PAGES
         ODD_STMS = 0
      ENDIF
C
C** KEEP RUNNING COUNT OF TOTAL PAGES
C
      TOT_PAGES = FULL_PAGES
C
C** CALCULATE TIME INTERVALS TO BE DISPLAYED FOR FORECAST
C
      DO 100 I = 1,FORCADAP(STA_NFOR)
         TIVL(I) = FORCADAP(STA_FINT)*I
100   CONTINUE
C
C** INITIALIZE THE BEGINNING AND ENDING STORM CELL INDICES
C
      STRT_STMIDX = 0
      END_STMIDX = 0
C
C** DO FOR EACH FULL PAGE OF THE PRODUCT
C
      DO 10 I = 1,FULL_PAGES
C
C** BUILD ALPHANUMERIC PAGES
C
         CALL A31639__FOR_TITLES(I,NTOTPRED,TIVL,BUFOUT,VOLNO,
     >                           AVGSPEED,AVGDIREC)
C
C** COMPUTE START AND ENDING STORM INDEX
C
         IF (I .EQ. FIRST_PAGE) THEN
            STRT_STMIDX = 1
            END_STMIDX = STMS_FIRST_PAGE
         ELSE
            STRT_STMIDX = STMS_PER_PAGE*(I-2) + STMS_FIRST_PAGE+1
            END_STMIDX = STRT_STMIDX+STMS_PER_PAGE-1
         END IF
C
C** FORM PRODUCT LINES FOR THESE STORMS
C
         DO 20 J = STRT_STMIDX,END_STMIDX
            CALL A3163A__FORM_LIN1(J,BUFOUT,STORMIDTYP,STORMOTION,
     >                             STORMFORW,FORCADAP)
20       CONTINUE
C
C** PUT END OF PAGE DIVIDER INTO OUTPUT BUFFER
C
         OPTRIDX = OPTRIDX + 1
         BUFOUT(OPTRIDX) = DIVIDER
10    CONTINUE
C
C** FORMAT THE ODD STORMS FOR A PARTIAL PAGE
C
      IF(ODD_STMS.NE.0)THEN
         CALL A31639__FOR_TITLES(I,NTOTPRED,TIVL,BUFOUT,VOLNO,
     >                           AVGSPEED,AVGDIREC)
         STRT_STMIDX = END_STMIDX + 1
         END_STMIDX = TOTAL_STORMS
         DO 30 K = STRT_STMIDX,END_STMIDX
            CALL A3163A__FORM_LIN1(K,BUFOUT,STORMIDTYP,STORMOTION,
     >                             STORMFORW,FORCADAP)
 30      CONTINUE
C
         TOT_PAGES = TOT_PAGES + 1
C
C** STORE THE END OF PAGE DIVIDER
C
         OPTRIDX = OPTRIDX + 1
         BUFOUT(OPTRIDX) = DIVIDER
      ENDIF
C
C** FORMAT THE TRACKING AND POSITION FORECAST ADAPTATION DATA
C
      BYTES_LEFT = (MXBUFIDX-OPTRIDX)*2
      IF(BYTES_LEFT.GE.ADPT_BYTES)THEN
         OPTRIDX = OPTRIDX + 1
         CALL A3CM3C__PAF_ADAPT(FORCADAP,FORCADAP,BUFOUT,OPTRIDX,
     >                          NEWIDX,FILKERSZ, FRACTREQ,
     >				FILTERON)
         TOT_PAGES = TOT_PAGES + 1
         OPTRIDX = NEWIDX
      ENDIF
C
C** SET THE LENGTH OF THE TABULAR BLOCK
C
      BUFOUT(STOTPG_IDX) = TOT_PAGES
      BUFOUT(SAVLNIX) = 0
      BUFOUT(SAVLNIX+1) = (OPTRIDX-STRT_TABLK+1)*2
C
C** RETURN TO CALLER ROUTINE
C
      END
