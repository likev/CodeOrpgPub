C
C RCS info
C $Author: ccalvert $
C $Locker:  $
C $Date: 2004/02/05 23:00:48 $
C $Id: a3163d.ftn,v 1.6 2004/02/05 23:00:48 ccalvert Exp $
C $Revision: 1.6 $
C $State: Exp $
C
      SUBROUTINE A3163D__TRK_PAGES(NTOTPRED,STORMIDTYP,
     *                      STORMOTION,STORMAIN,BUF,STRT_GA)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3163D__TRK_PAGES
*.
*.  MODULE VERSION: 0015
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       10 25 85      0000      Mary Jo Staley       Part 2, RPG Build 3
*.       05 05 86      0001      MARY JO STALEY       SPR # 60124
*.       06 27 86      0002      ATARA WEINSTEIN      SPR # 60313
*.       10 02 86      0003      J GROMMONS           SPR # 60346
*.       04 27 87      0004      JO STALEY            SPR # 70244
*.       01 30 91      0005      David M. Lynch       SPR # 91257
*.       12 03 91      0006      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0007      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0008      Toolset              SPR 91895
*.       03/25/93      0009      Toolset              SPR NA93-06801
*.       01/28/94      0010      Toolset              SPR NA94-01101
*.       03/03/94      0011      Toolset              SPR NA94-05501
*.       04/01/95      0012      Toolset              CCR NA95-11802
*.       04/27/95      0013      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0014      Toolset              CCR NA95-11807
*.       03/16/99      0015      Toolset              CCR NA98-23803
*.       12/09/03      0016      CHRIS CALVERT        CCR NA03-30002
*.
*.  CALLING SEQUENCE: CALL A3163D__TRK_PAGES(NTOTPRED,STORMIDTYP,
*.                    STORMOTION,STORMAIN,BUF,STRT_GA)
*.
*.  MODULE FUNCTION:
*.
*.     This is the entry point for the processing of the graphic
*.     attributes block for the storm track product.
*.
*.  MODULES CALLED: A3163E__PACKET_LINES, A3163F__PACKET_MOVE, 
*.                  A3CM29__GRID_VECTORS 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT              TYPE        DESCRIPTION
*.    -   -----              ----        -----------
*.    G   MAX_STI_ATTR_CELLS I*4         The Maximum number of Cells in the
*.                                       STI Attribute Table threshold in
*.                                       adaptation data.
*.    G   NSTF_IDT           I*4         (CONSTANT)The number of attributes
*.                                       for each storm cell in the array
*.                                       STORMIDTYP which contains Storm ID,
*.                                       storm type, and number of volumes
*.                                       tracked.
*.    G   NSTF_MAX           I*4         (CONSTANT)The maximum number of storm
*.                                       cells the array STORMIDTYP may hold.
*.                                       The array provides the storm cell Id
*.                                       attribute.
*.    G   NSTF_MOT           I*4         (CONSTANT)The number of storm motion
*.                                       attributes for each storm cell in the
*.                                       array STORMOTION. (First dimension)
*.    G   NSTM_CHR           I*4         (CONSTANT)Maximum number of storm
*.                                       characteristics  (dimension of
*.                                       STORMAIN)
*.    G   NSTM_MAX           I*4         (CONSTANT)Maximum number of storms
*.                                       (Dimension for STORMAIN)
*.    C   OPTRIDX            I*4         Output buffer index for Storm Track
*.                                       Information product.
*.    P   BUF                I*2         THE PRODUCT BUFFER
*.    P   NTOTPRED           I*4         TOTAL NUMBER OF STORMS
*.    P   STORMAIN           R*4         2-D array of Storm Cell attributes
*.    P   STORMIDTYP         I*4         STORM-ID TYPE TABLE FROM ALGO
*.    P   STORMOTION         R*4         STORM INFO FROM THE ALOG
*.    P   STRT_GA            I*4         START INDEX OF THE GRAPHICS
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    C   OPTRIDX I*4         Output buffer index for Storm Track Information
*.                            product.
*.    P   BUF     I*2         THE PRODUCT BUFFER
*.    P   STRT_GA I*4         START INDEX OF THE GRAPHICS
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    P   BUF               I*2         THE PRODUCT BUFFER
*.    P   STORMAIN          R*4         2-D array of Storm Cell attributes
*.    P   STORMIDTYP        I*4         STORM-ID TYPE TABLE FROM ALGO
*.    P   STORMOTION        R*4         STORM INFO FROM THE ALOG
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME           TYPE        DESCRIPTION
*.    ----           ----        -----------
*.    BLKID          I*4         BLOCK ID IN OUTPUT BUFFER
*.    CNULL          CHAR*24     Character data indicating no storms were
*.                               detected.
*.    CONV_BYTES     I*4         CONVERSION FACTOR
*.    DIVIDER        I*2         SYMBOL FOR DIVIDER BETWEEN BLOCKS IN OUTBUF
*.    FIRST          I*4         FIRST LOCATION OF ARRAY.
*.    GLENGTH        I*4         Grid length in halfwords.
*.    I              I*4         INDEX CONTROL VARIABLE
*.    I2NULL         I*4         Dimension of INULL array.
*.    INCRMNT        I*4         Used to increment OPTRIDX, pointer to product
*.                               buffer.
*.    INULL          I*2         Integer equivalent to character string CNULL.
*.    NP             I*4         NUMBER OF PAGES IN STORM TRACK
*.    NPX            I*4         PARTIAL PAGE SIZE
*.    NULL_PG_LNG    I*4         Block overhead parameter - null page length.
*.    NULL_PKT_LNG   I*4         Block overhead parameter - null packet
*.                               length.
*.    OPTION         I*4         (Constant) value used as call argument to
*.                               indicate type of grid to generate.
*.    SAVE_BLKLNG_IX I*4         INDEX IN BUFFER TO STORE BLOCKLENGTH AT
*.    STRTGRID       I*4         Grid start index in grid buffer.
*.    SVPG_LNX       I*4         INDEX TO LENGTH OF THE TOTAL LENGTH OF THE
*.                               PAGE
*.    TOTAL_STORMS   I*4         The total number of storm cell detected this
*.                               volume scan by the SCIT suite of algorithms
*.    TXTCODE        I*4         Value for text code.
*.    TXTCOLOR       I*4         Value for text color.
*.    TXT_ICOORD     I*4         (Constant) Text I coordinate.
*.    TXT_JCOORD     I*4         (Constant) Text J coordinate.
*.    UPLIM          I*4         UPPER LIMIT OF STORM SIZE IN MEMORY
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A316C3
*.    CELL_PROD
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE

$INCLUDE A315BUF.INC/G,**A315P7F  (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315P5C (NEND NLIST)
$INCLUDE A316.INC/G, **A316C3 (NLIST NEND)
$INCLUDE A309ADPT.INC/G, **A3CD70_CELL_PROD (NLIST NEND)
C
C** PASSED ARGUMENTS
C
      INTEGER NTOTPRED
      INTEGER STORMIDTYP(NSTF_IDT,NSTF_MAX)
      REAL STORMAIN(NSTM_CHR,NSTM_MAX)
      REAL STORMOTION(NSTF_MOT,NSTF_MAX)
C
C** LOCAL VARIABLES
C
      INTEGER STRT_GA, TOTAL_STORMS
      INTEGER SAVE_BLKLNG_IX,SVPG_LNX
      INTEGER*2  DIVIDER
      PARAMETER (DIVIDER=-1)
      INTEGER BLKID
      PARAMETER(BLKID=2)

      INTEGER*2  BUF(*)

      INTEGER*2  TBUF(40,5)
      INTEGER*4  I,NP,UPLIM,NPX
      INTEGER OPTION, STRTGRID,GLENGTH
      PARAMETER(OPTION=4)
      INTEGER CONV_BYTES
      PARAMETER(CONV_BYTES=2)

      INTEGER INCRMNT
      PARAMETER (INCRMNT=1)
      INTEGER TXT_ICOORD,TXT_JCOORD,TXTCOLOR,TXTCODE,FIRST
      PARAMETER(TXT_ICOORD=0,TXT_JCOORD=11,TXTCOLOR=1)
      PARAMETER(TXTCODE=8,FIRST=1)
      INTEGER I2NULL,NULL_PG_LNG,NULL_PKT_LNG
      PARAMETER(I2NULL=9,NULL_PG_LNG=28,NULL_PKT_LNG=24)
      CHARACTER*24 CNULL
#IFDEF LINUX
C     NOTHING
#ELSE
      DATA CNULL/'NO STORMS DETECTED'/
#ENDIF
      INTEGER*2 INULL(9)
      EQUIVALENCE (CNULL,INULL(1))
#IFDEF LINUX
      DATA CNULL/'NO STORMS DETECTED'/
#ENDIF
C
      CHARACTER*80  TXCHR(5)
      PARAMETER (UPLIM=6)
      EQUIVALENCE  (TBUF(1,1),TXCHR)
      COMMON/BLKA/TBUF


*****************************************************************
C
C** OPTRIDX ALWAYS POINTS TO LAST ITEM STORED UPON ENTRY TO PROCESSOR
C
C
C** SAVE THE START OF THE GRAPHIC ATTRIBUTES BLOCK
C
      STRT_GA = OPTRIDX+1
C
      BUF(OPTRIDX+1) = DIVIDER
      BUF(OPTRIDX+2) = BLKID
      OPTRIDX= OPTRIDX+3
C
C** POINTER NOW AT START OF BLOCK LENGTH (CLEAR THE MSW)
C
      BUF(OPTRIDX)=0
C
C** SAVE THE INDEX TO LATER STORE THE TOTAL LENGTH OF THE BLOCK
C
      SAVE_BLKLNG_IX=OPTRIDX
C
      OPTRIDX=OPTRIDX+2
C
C** DETERMINE NUMBER OF PAGES OF STORM TRACK
C
      TOTAL_STORMS = MIN(MAX_STI_ATTR_CELLS, NTOTPRED)
      NP = TOTAL_STORMS/UPLIM
      NPX = MOD(TOTAL_STORMS,UPLIM)
      IF(NPX.NE.0) NP=NP+1
C
C** IF NO STORMS THE OUTPUT ONE LINE NULL MESSAGE PRODUCT
C
      IF(NP .EQ. 0) THEN
         BUF(OPTRIDX) = FIRST
         BUF(OPTRIDX+1) = FIRST
         BUF(OPTRIDX+2) = NULL_PG_LNG
C
C** STORE TEXT PACKET OVERHEAD
C
         OPTRIDX=OPTRIDX+3
         BUF(OPTRIDX ) = TXTCODE
         OPTRIDX = OPTRIDX + INCRMNT
         BUF(OPTRIDX) = NULL_PKT_LNG
         OPTRIDX = OPTRIDX + INCRMNT
         BUF(OPTRIDX) = TXTCOLOR
         OPTRIDX = OPTRIDX + INCRMNT
         BUF(OPTRIDX) = TXT_ICOORD
         OPTRIDX = OPTRIDX + INCRMNT
         BUF(OPTRIDX) = TXT_JCOORD
C
C** NOW MOVE THE CHARACTER DATA INTO BUFFER
C
         DO 500 I = 1,I2NULL
            OPTRIDX = OPTRIDX + INCRMNT
            BUF(OPTRIDX) = INULL(I)
500      CONTINUE
C
C** OPTRIDX NOW AT THE LAST STORED HALF WORD
C
      ELSE
C
C** STORE THE  TOTAL PAGES
C
         BUF(OPTRIDX) = NP
C
C** BUILD PAGES FOR STORM TRACK
C
         DO 150  I = 1, NP
C
C** STORE PAGE NUMBER
C
            OPTRIDX=OPTRIDX+1
            BUF(OPTRIDX) = I
            OPTRIDX=OPTRIDX+1
            SVPG_LNX=OPTRIDX
C
            CALL A3163E__PACKET_LINES(I,TOTAL_STORMS,STORMIDTYP,
     *                                STORMOTION,STORMAIN)
C
            CALL A3163F__PACKET_MOVE(BUF)
C
C** STORE THE LENGTH OF THE TEXT PORTION OF THIS PAGE
C
            BUF(SVPG_LNX) = (OPTRIDX - SVPG_LNX)*CONV_BYTES
C
C** BUILD THE PACKETS FOR THE GRAPHIC ATTRIBUTES GRID
C
            STRTGRID=OPTRIDX+1
            CALL A3CM29__GRID_VECTORS(OPTION,BUF,STRTGRID,GLENGTH)
C
C** UPDATE OPTRIDX BY NUMBER OF WORD IN THE GRID
C
            OPTRIDX= OPTRIDX+ GLENGTH
C
C** ADD THE GRID VECTOR LENGTH FOR THE TOTAL LENGTH OF THIS PAGE
C
            BUF(SVPG_LNX)=BUF(SVPG_LNX)+GLENGTH*CONV_BYTES
C
  150    CONTINUE
      ENDIF
C
C** CALCULATE AND STORE TOTAL BLOCK LENGTH IN BYTES
C
      BUF(SAVE_BLKLNG_IX +1)=(OPTRIDX-STRT_GA+1)*CONV_BYTES
C
C** RETURN TO CALLER ROUTINE
C
      RETURN
      END
