C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 20:36:00 $
C $Id: a31631.ftn,v 1.3 2002/12/16 20:36:00 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A31631__STORM_TRK_CTL(PARAM)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A31631__STORM_TRK_CTL
*.
*.  MODULE VERSION: 0018
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       07 15 85      0000      M. Jo Staley         rpg build 2
*.       04 22 86      0001      M. JO STALEY         SPR # 304
*.       04 25 86      0001      M. JO STALEY         SPR # 60118
*.       06 26 86      0002      A.WEINSTEIN          SPR # 60313
*.       10 02 86      0003      J GROMMONS           SPR # 60346
*.       04 27 87      0004      JO STALEY            SPR # 70244
*.       10 10 88      0005      STEVE D SMITH        SPR # 80338
*.       01 09 90      0006      STACY RONALD         SPR # 90318
*.       11 06 90      0007      David M. Lynch       SPR # 91257
*.       12 03 91      0008      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0009      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0010      Toolset              SPR 91895
*.       03/25/93      0011      Toolset              SPR NA93-06801
*.       01/28/94      0012      Toolset              SPR NA94-01101
*.       03/03/94      0013      Toolset              SPR NA94-05501
*.       04/06/94      0014      Steve Smith          CCR NW-94-007-10
*.       04/01/95      0015      Toolset              CCR NA95-11802
*.       04/27/95      0016      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0017      Toolset              CCR NA95-11807
*.       03/16/99      0018      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALLED BY OS/32
*.
*.  MODULE FUNCTION:
*.
*.     This is the Buffer Control Module.  When data becomes
*.     available, this module receives control.  It acquires
*.     the input and output buffers, stores data in the output
*.     buffer based on input data and other information, and
*.     releases the input & output buffers.
*.
*.  MODULES CALLED: A31145__ABORT_ME, A31168__ABORT_ME_BECAUSE, 
*.                  A31211__GET_INBUF, A31212__REL_INBUF, A31215__GET_OUTBUF, 
*.                  A31216__REL_OUTBUF, A31218__BUF_VOL, A31632__FORMAT_TRK, 
*.                  A31633__STORM_TRK_HEADER, A31637__TAB_HEAD, A31638__TAB_BLK, 
*.                  A3163D__TRK_PAGES, A3CM25__GET_DATE_TIME 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT         TYPE        DESCRIPTION
*.    -   -----         ----        -----------
*.    G   MEM           I*4         Array in RPG shared memory set aside for
*.                                  buffer sharing.
*.    G   BFA           I*4         (CONSTANT)Index for beginning location of
*.                                  the Storm cell adaptation data in the
*.                                  Tracking/Forecast output buffer.
*.    G   BNT           I*4         (CONSTANT)Offset pointer of the location
*.                                  of the number of storms in the storm
*.                                  track/forecast output buffer.
*.    G   BSB           I*4         (CONSTANT)Offset pointer of the location
*.                                  of the past storm positions in the storm
*.                                  track/forecast output buffer in global
*.                                  memory.
*.    G   BSF           I*4         (CONSTANT)Offset pointer for the
*.                                  extrapolated storm forecast positions in
*.                                  the storm track/forecast output buffer in
*.                                  global memory.
*.    G   BSI           I*4         (CONSTANT)Offset pointer of the location
*.                                  of each storm type, numerical ID, and
*.                                  number of volumes tracked in the storm
*.                                  track/forecast output buffer in global
*.                                  memory.
*.    G   BSM           I*4         (CONSTANT)Offset pointer of the location
*.                                  of storm motion vectors and errors in the
*.                                  storm track/forecast output buffer in
*.                                  global memory.
*.    G   BST           I*4         (CONSTANT)Offset to MEM buffer for Storm
*.                                  Motion Attributes array
*.    G   BVD           I*4         (CONSTANT)Offset pointer for the location
*.                                  of the storm direction in the storm
*.                                  track/forecast output buffer in global
*.                                  memory.
*.    G   BVS           I*4         (CONSTANT)Offset pointer for the location
*.                                  of the storm speed in the storm
*.                                  track/forecast output buffer in global
*.                                  memory.
*.    G   CENTATTR      I*4         (CONSTANT)Data buffer type: Storm centroid
*.                                  attributes.
*.    G   DESTROY       I*4         (CONSTANT)Mnemonic used as input to
*.                                  A31216__REL_OUTBUF. Indicates "do not pass
*.                                  data to other tasks".
*.    G   FORWARD       I*4         (CONSTANT)Parameter to indicate that an
*.                                  output buffer is to be forwarded to
*.                                  successor tasks
*.    G   NORMAL        I*4         (CONSTANT)Parameter which indicates normal
*.                                  completion of requested operation to
*.                                  acquire input or output buffer
*.    G   NO_MEM        I*4         (CONSTANT)Parameter which indicates no
*.                                  memory available on attempt to acquire
*.                                  output buffer
*.    G   PHEADLNG      I*4         (CONSTANT)Number of half words in product
*.                                  header (its length).
*.    G   PROD_MEM_SHED I*4         (CONSTANT)(CONSTANT)Parameter which
*.                                  indicates that product aborted due to
*.                                  memory load shedding
*.    G   TERMINATE     I*4         (CONSTANT)Mnemonic used as output from
*.                                  A31211__GET_ INBUF and A31215__GET_OUTBUF.
*.                                  Indicates "terminate processing".
*.    G   TRFRCATR      I*4         (CONSTANT)Data Buffer Type: Track Forecast
*.                                  Attributes.
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    G   MEM     I*4         Array in RPG shared memory set aside for buffer
*.                            sharing.
*.    C   OPTRIDX I*4         Output buffer index for Storm Track Information
*.                            product.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    G   MEM               I*4         Array in RPG shared memory set aside
*.                                      for buffer sharing.
*.
*.  DATABASE/FILE REFERENCE:  NONE
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME     TYPE        DESCRIPTION
*.    ----     ----        -----------
*.    CDATE    I*4         Current date
*.    CIPTR    I*4         Input buffer pointer for centroids
*.    CTIME    I*4         Current time.
*.    DATTYP   I*4         The returned input data type from call to
*.                         A31211__GET_INBUF
*.    INSTAT1  I*4         Return status of getting Storm Cell Centroid input
*.                         buffer
*.    INSTAT2  I*4         Return status for getting Tracking and Forecast
*.                         input buffer
*.    MXBUFIDX I*4         The maximum possible index into the output buffer
*.    OPSTAT1  I*4         Internal variable used to hold operational status
*.                         (call argument) of particular buffer.
*.    OPTR     I*4         output buffer pointer
*.    STMTRDAT I*4         Data Buffer Type: Storm Tracking Information
*.                         Product.
*.    STRK_SIZ I*4         storm-track buffer size requested
*.    STRTGA   I*4         index in outbuf to graphic attributes
*.    STRTHD   I*4         index in outbuf to product header
*.    STRTTA   I*4         index in outbuf to tab.adapt. data
*.    TIPTR    I*4         The input buffer pointer for the Tracking and
*.                         Forecast buffer
*.    VOLNO    I*4         volume scan number
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A3CD00
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A316C3
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
      IMPLICIT NONE
C
C** INCLUDE DATA TYPE CODES AND OTHER CONTROL PARAMETER DEFINITIONS
C
$INCLUDE A309.INC/G,**A3PM00 (NEND NLIST)
C
C** INCLUDE NO MEMORY ABORT PARAMETERS
C
$INCLUDE A309.INC/G,**A3PM07 (NEND NLIST)
C
C** INCLUDE MEM DEFINITION
C
$INCLUDE A309.INC/G,**A3CD00 (NEND NLIST)
C
C** INCLUDE PRODUCT OFFSETS AND GLOBAL PARAMETERS
C
$INCLUDE A309.INC/G,**A3PM01 (NEND NLIST)
C
C** INCLUDE ALOGRITHM PARAMETERS
C
$INCLUDE A315BUF.INC/G,**A315P7F (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315P5C (NEND NLIST)
C
$INCLUDE A316.INC/G, **A316C3 (NLIST NEND)
C
      INTEGER*4 A31218__BUF_VOL
      INTEGER VOLNO

      INTEGER*4 STRK_SIZ, OPTR, TIPTR, PARAM,
     1          CDATE, CTIME, CIPTR, TAB_BLKLNG,
     2          OPSTAT1,INSTAT2,DATTYP,INSTAT1,MXBUFIDX
      INTEGER STRTHD,STRTTA,STRTGA
      PARAMETER(STRK_SIZ=13189)
C
C************************ E X E C U T A B L E ***********************
C
C** INTIALIZE STATUS VARIABLE
C
      INSTAT2 = TERMINATE
C
C** GET OUTPUT BUFFER (PRODUCT STORAGE)
C
      CALL A31215__GET_OUTBUF(STMTRDAT, STRK_SIZ, OPTR, OPSTAT1)
      IF (OPSTAT1.EQ.NORMAL) THEN
C
C** OUTPUT BUFFER OBTAINED.  GET INPUT BUFFER CONTAINING STORM CELL
C** CENTROID INFORMATION
C
         CALL A31211__GET_INBUF(CENTATTR,CIPTR,DATTYP,INSTAT1)
         IF(INSTAT1.EQ.NORMAL)THEN
C
C** INPUT BUFFER SUCCESSFULLY ACQUIRED.  GET TRACKING AND FORECAST
C** ATTRIBUTES
C
            CALL A31211__GET_INBUF(TRFRCATR, TIPTR, DATTYP, INSTAT2)
            IF (INSTAT2.EQ.NORMAL)THEN
C
C** INPUT BUFFER OBTAINED
C
               CALL A3CM25__GET_DATE_TIME(CDATE,CTIME)
C
C** GET THE VOLUME NUMBER OF THE INPUT
C
               VOLNO = A31218__BUF_VOL(TIPTR)
C
C** INTIALIZE OPTRIDX TO JUST PAST THE HEADER
C
C** Message Header and Product Description Block:    60 halfwords
C
               OPTRIDX = PHEADLNG
C
C** PROCESS THE INPUT DATA FOR THE PRODUCT
C
C** Product Symbology Block:  Header Information:     8
C
C**    NOTE:  Sizes are per storm cell detected
C
C** Display Data Packets:       Current Position:     5 halfwords
C**                                Storm Cell ID:     5
C**                               Back Positions:     2+5*(# of pos)
C**                     Forward Position Vectors:     4+2*(# of pos)
C**                            Forward Positions:     2+5*(# of pos)
C**                        Back Position Vectors:     4+2*(# of pos)
C
C** Assumption:  10 back positions, 4 forward positions
C
               CALL A31632__FORMAT_TRK(MEM(TIPTR+BNT),MEM(TIPTR+BSI),
     >                  MEM(TIPTR+BSM),MEM(TIPTR+BSF),MEM(TIPTR+BSB),
     >                  MEM(TIPTR+BFA),MEM(OPTR))
C
C** Graphic Alphanumeric Block: Header Information:   5 halfwords
C
C** For each page of the Block:                     289 halfwords
C
C**   NOTE:  Each page contains information for 6
C**          storm cells.  Each page also includes
C**          grid vectors outlining the data.
C
               CALL A3163D__TRK_PAGES(MEM(TIPTR+BNT),MEM(TIPTR+BSI),
     >                                MEM(TIPTR+BSM),MEM(CIPTR+BST),
     >                                MEM(OPTR),STRTGA)
C
C** DETERMINE IF OUTPUT BUFFER SPACE AVAILABLE TO FORMAT
C** AT LEAST ONE STORM FOR THE TABLULAR BLOCK
C
C** If the maximum number of storm cells were detected (100),
C** and each storm cell had the maximum number of back positions
C** (13) and the forward positions (4), then the product buffer
C** size at this juncture would be 14700 halfwords.
C
C** Tabular Alphanumeric Block:     Header Block:    66 halfwords
C**                                    Each Page:  1314 halfwords
C
               MXBUFIDX = 2*STRK_SIZ
               CALL A31638__TAB_BLK(MEM(TIPTR+BNT),MEM(TIPTR+BVS),
     >                  MEM(TIPTR+BVD),MEM(TIPTR+BSI),MEM(TIPTR+BSM),
     >                  MEM(TIPTR+BSF),MEM(TIPTR+BFA),MEM(OPTR),
     >                  STRTHD,STRTTA,VOLNO,MXBUFIDX)
C
C** FILL FIELDS OF THE PRODUCT'S PRODUCT DESCRIPTION BLOCK
C
               CALL A31633__STORM_TRK_HEADER(MEM(OPTR),TIPTR,VOLNO,
     >                                   CDATE,CTIME,MEM(TIPTR+BNT),
     >                                   STRTGA,STRTTA)
C
C** FILL FIELDS OF THE PRODUCT'S MESSAGE HEADER BLOCK
C
               CALL A31637__TAB_HEAD(MEM(OPTR),STRTHD)
C
C** RELEASE INPUT BUFFERS, THEN FORWARD OUTPUT BUFFER
C
               CALL A31212__REL_INBUF(TIPTR)
               CALL A31212__REL_INBUF(CIPTR)
               CALL A31216__REL_OUTBUF(OPTR,FORWARD)
            ELSE
C
C** UNABLE TO GET SECOND INPUT BUFFER.  RELEASE FIRST ONE.
C
               CALL A31212__REL_INBUF(CIPTR)
            ENDIF
         END IF
         IF((INSTAT1.NE.NORMAL).OR.(INSTAT2.NE.NORMAL))THEN
C
C** OUTPUT BUFFER OBTAINED, INPUT BUFFER NOT AVAILABLE
C
            CALL A31216__REL_OUTBUF(OPTR,DESTROY)
         ENDIF
      ELSE
         IF (OPSTAT1 .EQ. NO_MEM) THEN
C
C** CANNOT ACQUIRE OUTPUT BUFFER BECAUSE OF NO MEMORY
C
            CALL A31168__ABORT_ME_BECAUSE(PROD_MEM_SHED)
         ELSE
            CALL A31145__ABORT_ME
         END IF
      ENDIF
C
C** RETURN TO CALLER ROUTINE
C
      RETURN
      END
