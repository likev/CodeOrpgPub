C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 20:36:05 $
C $Id: a31636.ftn,v 1.3 2002/12/16 20:36:05 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A31636__BLD_VECT(STORMOTION, STORMFORW, STORMBACK,
     >                            FORCADAP, BUFOUT, STM_IDX)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A31636__BLD_VECT
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       07 22 85      0000      M.JO STALEY          Part 2, RPG Build 1
*.       06 26 86      0001      A.WEINSTEIN          SPR #60313
*.       10 02 86      0002      J GROMMONS           SPR # 60346
*.       02 22 91      0003      David M. Lynch       SPR # 91257
*.       02 15 91      0003      JOHN DEPHILIP        SPR # 91762
*.       12 03 91      0004      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0005      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0006      Toolset              SPR 91895
*.       03/25/93      0007      Toolset              SPR NA93-06801
*.       01/28/94      0008      Toolset              SPR NA94-01101
*.       03/03/94      0009      Toolset              SPR NA94-05501
*.       04/01/95      0010      STEVE SMITH          CCR NA95-11802
*.       06/09/95      0011      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A31636__BLD_VECT(STORMOTION,STORMFORW,
*.                                 STORMBACK,FORCADAP,BUFOUT,STM_IDX)
*.
*.  MODULE FUNCTION:
*.
*.     THIS MODULE CONSTRUCTS THE BACK AND FORWARD LINKED VECTOR
*.     PACKETS FOR THE STORM TRACK.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT       TYPE        DESCRIPTION
*.    -   -----       ----        -----------
*.    G   STA_NFOR    I*4         (CONSTANT)Offset to the Number of (Forecast)
*.                                Intervals in the adaptation data part of the
*.                                centroids & tracking/forecast output
*.                                buffers.
*.    G   STA_PVOL    I*4         (CONSTANT)Offset to the Number of Past
*.                                Volumes in the adaptation data part of the
*.                                centroids & tracking/forecast output
*.                                buffers.
*.    G   STF_XB      I*4         (CONSTANT)Offset to the past x locations in
*.                                the STORMBACK part of the tracking/forecast
*.                                output buffer.
*.    G   STF_XF      I*4         (CONSTANT)Offset to the forecasted x
*.                                locations (km) in the STORMBACK part of the
*.                                tracking/forecast output buffer.
*.    G   STF_YB      I*4         (CONSTANT)Offset to the past y locations in
*.                                the STORMBACK part of the tracking/forecast
*.                                output buffer.
*.    G   STF_YF      I*4         (CONSTANT)Offset to the forecasted y
*.                                locations (km) in the STORMBACK part of the
*.                                tracking/forecast output buffer.
*.    G   UNDEF       R*4         (CONSTANT)Value that shows that storm cell
*.                                attributes of motion cannot be calculated
*.                                because there is no storm cell history.
*.    C   BACK_POSITS L*4         Flag, if set, indicates there is past
*.                                position data for the current storm cell.
*.    C   FORW_POSITS L*4         Flag, if set, indicates there is forecast
*.                                position data for the current storm cell.
*.    C   OPTRIDX     I*4         Output buffer index for Storm Track
*.                                Information product.
*.    P   FORCADAP    I*4         Array of Storm Series Adaptation Data.
*.    P   STM_IDX     I*4         INDEX TO STORM TO PROCESS
*.    P   STORMBACK   R*4         Three dimensional array of storm back
*.                                positions.
*.    P   STORMFORW   R*4         Three dimensional array of forcast
*.                                positions.
*.    P   STORMOTION  R*4         2-D array of storm cell motion attributes.
*.
*.    *   OUTPUT      TYPE        DESCRIPTION
*.    -   ------      ----        -----------
*.    C   BACK_POSITS L*4         Flag, if set, indicates there is past
*.                                position data for the current storm cell.
*.    C   FORW_POSITS L*4         Flag, if set, indicates there is forecast
*.                                position data for the current storm cell.
*.    C   OPTRIDX     I*4         Output buffer index for Storm Track
*.                                Information product.
*.    P   BUFOUT      I*2         OUTPUT BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME       TYPE        DESCRIPTION
*.    ----       ----        -----------
*.    CUR_X      R*4         Current X.
*.    CUR_Y      R*4         Current Y.
*.    K          I*4         INDEX CONTROL VARIABLE
*.    KMX4       R*4         QUARTER KM SCALE FACTOR
*.    PACKETCODE I*4         VECTOR PACKET OPCODE
*.    SAVEOIX1   I*4         SAVES INDEX FOR LENGTH FIELD
*.    SAVEOIX2   I*4         SAVES INDEX FOR 2ND LENGTH FIELD
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A316C3
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
      IMPLICIT NONE
$INCLUDE A315BUF.INC/G,**A315P7F (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315D7 (NEND NLIST)
$INCLUDE A315BUF.INC/G,**A315PSAD (NEND NLIST)
$INCLUDE A316.INC/G, **A316C3 (NLIST NEND)
C
      INTEGER STM_IDX,SAVEOIX1,SAVEOIX2,PACKETCODE,K
      PARAMETER(PACKETCODE=6)
      REAL KMX4
      PARAMETER(KMX4=4.0)
      REAL CUR_X,CUR_Y
      INTEGER*2 BUFOUT(*)
C
C********************** E X E C U T A B L E *******************
C
C**  SAVE CURRENT X/Y POSITION OF STORM CELL.
C
      CUR_X= STORMOTION(STF_XB,STM_IDX)
      CUR_Y= STORMOTION(STF_YB,STM_IDX)
C
C**  IF THERE ARE FORWARD POSITIONS FOR THIS STORM CELL, THEN....
C
      IF(FORW_POSITS)THEN
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=PACKETCODE
C
C**  SAVE INDEX FOR LENGTH OF PACKET
C
         OPTRIDX=OPTRIDX+1
         SAVEOIX1=OPTRIDX
C
C**  STORE STARTING VECTOR CHAIN POSITION
C
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=NINT(CUR_X*KMX4)
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=NINT(CUR_Y*KMX4)
C
C**  STORE THE FORECAST POSITIONS FIRST
C
         DO 100 K=1,FORCADAP(STA_NFOR)
            IF(STORMFORW(STF_XF,K,STM_IDX).NE.UNDEF)THEN
               OPTRIDX=OPTRIDX+1
               BUFOUT(OPTRIDX)=NINT(STORMFORW(STF_XF,K,STM_IDX)*KMX4)
               OPTRIDX=OPTRIDX+1
               BUFOUT(OPTRIDX)=NINT(STORMFORW(STF_YF,K,STM_IDX)*KMX4)
            ENDIF
100      CONTINUE
C
C**  STORE THE LENGTH OF THIS LINKED VECTOR PACKET
C
        BUFOUT(SAVEOIX1)=((OPTRIDX)-SAVEOIX1)*2
C
C**  RESET THE FORWARD POSITIONS FLAG
C
        FORW_POSITS = .FALSE.
      ENDIF
C
C**  NOW BUILD THE VECTORS FOR THE PAST STORM POSITIONS
C

      IF(BACK_POSITS)THEN
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=PACKETCODE
C
C**  SAVE INDEX FOR LENGTH OF PACKET
C
         OPTRIDX=OPTRIDX+1
         SAVEOIX2=OPTRIDX
C
C**  STORE STARTING VECTOR CHAIN POSITION
C
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=NINT(CUR_X*KMX4)
         OPTRIDX=OPTRIDX+1
         BUFOUT(OPTRIDX)=NINT(CUR_Y*KMX4)
C
C**  STORE THE PAST POSITIONS NOW
C
         DO 200 K=1,FORCADAP(STA_PVOL)
            IF(STORMBACK(STF_XB,K,STM_IDX).NE.UNDEF)THEN
               OPTRIDX=OPTRIDX+1
               BUFOUT(OPTRIDX)=NINT(STORMBACK(STF_XB,K,STM_IDX)*KMX4)
               OPTRIDX=OPTRIDX+1
               BUFOUT(OPTRIDX)=NINT(STORMBACK(STF_YB,K,STM_IDX)*KMX4)
            ENDIF
200      CONTINUE
C
C**  STORE THE LENGTH OF THIS LINKED VECTOR PACKET
C
        BUFOUT(SAVEOIX2)=((OPTRIDX)-SAVEOIX2)*2
C
C**  RESET THE BACK POSITIONS FLAG
C
         BACK_POSITS = .FALSE.
      ENDIF
C
C**  RETURN TO CALLER
C
      RETURN
      END
