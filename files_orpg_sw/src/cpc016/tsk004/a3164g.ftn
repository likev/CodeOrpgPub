C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 20:36:30 $
C $Id: a3164g.ftn,v 1.3 2002/12/16 20:36:30 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A3164G__PACKET_LINES(K,HAILSTATS,FLD1A,FLD3A)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A3164G__PACKET_LINES
*.
*.  MODULE VERSION: 0014
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       10 18 85      0000      JSGROMMONS
*.       05 01 86      0001      JSGROMMONS           SPR#  60124
*.       06 03 86      0002      JSGROMMONS           SPR#  60313
*.       10 02 86      0003      J GROMMONS           SPR # 60346
*.       11 06 90      0004      David M. Lynch       SPR # 91257
*.       12 03 91      0005      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0006      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0007      Toolset              SPR 91895
*.       03/25/93      0008      Toolset              SPR NA93-06801
*.       01/28/94      0009      Toolset              SPR NA94-01101
*.       03/03/94      0010      Toolset              SPR NA94-05501
*.       04/01/95      0011      Toolset              CCR NA95-11802
*.       04/22/95      0012      STEVE SMITH          CCR NA94-26301
*.       12/23/96      0013      Toolset              CCR NA95-11807
*.       03/16/99      0014      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE:
*.     CALL A3164G__PACKET_LINES(K,HAILSTATS,FLD1A,FLD3A)
*.
*.  MODULE FUNCTION:
*.     BUILD THE DATA ARRAYS FOR THE PACKETS FOR THE GRAPHIC
*.     BLOCK
*.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT        TYPE        DESCRIPTION
*.    -   -----        ----        -----------
*.    G   H_MHS        I*4         (CONSTANT)Index to the MEHS, the third
*.                                 position, in the HAILSTATS arrays.
*.    G   H_POH        I*4         (CONSTANT)Index to the POH, the first
*.                                 position, in the HAILSTATS arrays.
*.    G   H_PSH        I*4         (CONSTANT)Index to the PSH, the second
*.                                 position, in the HAILSTATS arrays.
*.    G   NHAL_MAX     I*4         (CONSTANT)A sizing parameter equal to the
*.                                 max. number of cells processed by the hail
*.                                 algorithm.
*.    G   NHAL_STS     I*4         (CONSTANT)A sizing parameter equal to the
*.                                 number of hail attributes stored in the
*.                                 HAILSTATS array.
*.    G   UNKNOWN      I*4         (CONSTANT)Flag value for the POSH and POH
*.                                 indicating the cell is beyond processing
*.                                 range.
*.    C   N1           I*4         Lower limit of lines to be written.
*.    C   N2           I*4         Upper limit of lines to be written.
*.    C   SORTED_CELLS I*2         Cell ID of hail storms sorted according to
*.                                 POSH, then POH.
*.    C   NCOLS        I*4         (CONSTANT)Used as a dimension of a
*.                                 one-dimensional array.
*.    P   HAILSTATS    R*4         Array containing hail attribute information
*.                                 for all cells.
*.    P   K            I*4         SUBSCRIPT FOR HAIL DATA
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   FLD1A   CHAR*9      HAIL STATUS ARRAY USED FOR
*.    P   FLD3A   CHAR*9      Field used for displaying POSH and MAX Hail Size
*.    P   K       I*4         SUBSCRIPT FOR HAIL DATA
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME              TYPE        DESCRIPTION
*.    ----              ----        -----------
*.    BLANK             CHAR*1      PROGRAM PARAMETER FOR A BLANK.
*.    GREATER_THAN      CHAR*1      Program parameter for the greater than
*.                                  symbol.
*.    HAILSIZE          R*4         Maximum expected hail size for the current
*.                                  storm cell.
*.    I                 I*4         Do loop counter.
*.    J                 I*4         SUBSCRIPT
*.    LESS_THAN         CHAR*1      Program parameter value for LESS THAN
*.                                  symbol
*.    MAX_HAIL_SIZE     R*4         Maximum expected hail size to report on
*.                                  product.
*.    MIN_HAIL_SIZE     R*4         Minimum expected hail size to report
*.    MIN_REPORTED_SIZE R*4         The smallest expected hail size, if
*.                                  greater than zero, to report on a product
*.    NULL              I*4         Parameter value of zero.
*.    PROB_HAIL         I*4         Probability of hail for the storm cell
*.    PROB_SEVERE       I*4         Probablity of Severe Hail for a storm cell
*.    QUALIFIER         CHAR*1      Qualifier for hail size (either Blank, >
*.                                  or <)
*.    UNKNOWN_TEXT      CHAR*9      Parameter indicating hail information for
*.                                  the storm cell is unknown.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A3164B
*.    A316SRT
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
      IMPLICIT NONE
C
C** LOCAL COMMON
C
$INCLUDE A315BUF.INC/G, **A315P9H (NLIST NEND)
$INCLUDE A316.INC/G,**A3164P4 (NLIST)
C
C** LOCAL DEFNITIONS:
C
      REAL  HAILSTATS(NHAL_STS,NHAL_MAX)
      INTEGER*4 K, I
      CHARACTER*9 FLD1A(NCOLS), FLD3A(NCOLS)
C
      CHARACTER*1 LESS_THAN, BLANK, GREATER_THAN, SPACER
      CHARACTER*1 QUALIFIER
      PARAMETER(LESS_THAN = '<', BLANK = ' ', GREATER_THAN = '>')
      PARAMETER(SPACER = '/')
      CHARACTER*9 UNKNOWN_TEXT
      PARAMETER (UNKNOWN_TEXT = '  UNKNOWN')
C
      REAL MAX_HAIL_SIZE, MIN_HAIL_SIZE, MIN_REPORTED_SIZE
      PARAMETER (MAX_HAIL_SIZE = 4.0, MIN_HAIL_SIZE = 0.0)
      PARAMETER (MIN_REPORTED_SIZE = 0.50)
      INTEGER*4 NULL, J
      PARAMETER (NULL = 0)
C
      INTEGER*4 PROB_HAIL, PROB_SEVERE
      REAL HAILSIZE
C
C....................................................................
C
C** SET PROBABILITY OF HAIL, PROBABILITY OF SEVERE HAIL, AND MAX
C** EXPECTED HAIL SIZE
C
      DO 150  J=N1,N2
C
C** GET SORTED CELL INDEX.
C
         I = SORTED_CELLS(K)
C
         PROB_HAIL = INT(HAILSTATS(H_POH,I))
         PROB_SEVERE = INT(HAILSTATS(H_PSH,I))
         HAILSIZE = HAILSTATS(H_MHS,I)
C
C** SET FLD1A(J) (PROBABILITY OF HAIL/PROBABILITY OF SEVERE HAIL)
C
         IF (PROB_SEVERE.EQ.UNKNOWN .OR. PROB_HAIL.EQ.UNKNOWN) THEN
C
C** MARK BOTH POH AND POSH AS UNKNOWN.  MARK HAILSIZE AS UNKNOWN.
C
            FLD1A(J) = UNKNOWN_TEXT
            FLD3A(J) = UNKNOWN_TEXT
         ELSE
C
            WRITE(FLD1A(J),901) PROB_SEVERE,PROB_HAIL
C
C** PUT QUALIFIER ON HAIL SIZE.  ALSO LIMIT SIZE TO 0.50 TO 4.0.
C
            IF (PROB_SEVERE .EQ. NULL .AND. PROB_HAIL .EQ. NULL) THEN
C
C** BOTH PROBABILITIES ARE ZERO.  SET HAIL SIZE TO 0.0.
C
               QUALIFIER = BLANK
               HAILSIZE = MIN_HAIL_SIZE
            ELSE IF ((HAILSIZE .LT. MIN_REPORTED_SIZE) .AND.
     >         (HAILSIZE .GE. MIN_HAIL_SIZE) .AND.
     >         (PROB_HAIL .GT. NULL .OR. PROB_SEVERE .GT. NULL)) THEN
C
C** LESS THAN MINIMUM SIZE
C
               QUALIFIER = LESS_THAN
               HAILSIZE = MIN_REPORTED_SIZE
            ELSE IF (HAILSIZE .LT. MIN_HAIL_SIZE) THEN
C
C** SIZE IS NEGATIVE.  MUST BE GREATER THAN MAXIMUM SIZE
C
               QUALIFIER = GREATER_THAN
               HAILSIZE = MAX_HAIL_SIZE
            ELSE
C
C** WITHIN ACCEPTABLE RANGE
C
               QUALIFIER = BLANK
            END IF
C
C** SET FLD3A(J) (MAX HAIL SIZE, IN INCHES)
C
            WRITE(FLD3A(J),902) QUALIFIER, HAILSIZE
         END IF
C
C** STEP K
C
         K = K + 1
  150 CONTINUE
C
C** FORMAT STATEMENTS.
C
 901  FORMAT(2X,I3,'/',I3)
 902  FORMAT(4X,A1,F4.2)
C
C** RETURN TO CALLER ROUTINE
C
      RETURN
      END
