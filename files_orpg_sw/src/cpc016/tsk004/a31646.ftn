C
C RCS info
C $Author: steves $
C $Locker:  $
C $Date: 2004/01/12 16:56:42 $
C $Id: a31646.ftn,v 1.4 2004/01/12 16:56:42 steves Exp $
C $Revision: 1.4 $
C $State: Exp $
C
      SUBROUTINE A31646__TOTAL_LENGTH(LNGTH,BUF)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A31646__TOTAL_LENGTH
*.
*.  MODULE VERSION: 0013
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       10 18 85      0000      JSGROMMONS
*.       06 03 86      0001      JSGROMMONS           SPR#  60313
*.       10 02 86      0002      J GROMMONS           SPR # 60346
*.       11 06 90      0003      David M. Lynch       SPR # 91257
*.       12 03 91      0004      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0005      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0006      Toolset              SPR 91895
*.       03/25/93      0007      Toolset              SPR NA93-06801
*.       01/28/94      0008      Toolset              SPR NA94-01101
*.       03/03/94      0009      Toolset              SPR NA94-05501
*.       04/01/95      0010      Toolset              CCR NA95-11802
*.       06/22/95      0011      STEVE SMITH          CCR NA94-26301
*.       12/23/96      0012      Toolset              CCR NA95-11807
*.       03/16/99      0013      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE:
*.     CALL A31646__TOTAL_LENGTH(LNGTH,BUF)
*.
*.  MODULE FUNCTION:
*.     STORE THE TOTAL LENGTH OF THE PRODUCT IN THE OUTPUT BUFFER
*.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT    TYPE        DESCRIPTION
*.    -   -----    ----        -----------
*.    G   LGLSWOFF I*4         (CONSTANT)Product header offset: Length of
*.                             message (LSW).
*.    G   LGMSWOFF I*4         (CONSTANT)Product header offset: Length of
*.                             message (MSW).
*.    P   LNGTH    I*4         TOTAL LENGTH
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    P   BUF     I*2         OUTPUT BUFFER
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME    TYPE        DESCRIPTION
*.    ----    ----        -----------
*.    TLNGTHX I*4         LENGTH OF TABULAR BLOCK AS AN I*4 WORD
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS: NONE
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.        THIS MODULE IS COMPILED USING THE COMP16.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.        THIS MODULE IS LINKED USING THE LINK16.CSS
*.
*.  MISC:  None
*.
*.*******************************************************************
C
      IMPLICIT NONE
C
C* Include product offsets and global parameters:
$INCLUDE A309.INC/G,**A3PM01 (NEND NLIST)
C
C   LOCAL COMMON
$INCLUDE A315BUF.INC/G, **A315P9H (NLIST)
$INCLUDE A316.INC/G,**A3164P4 (NLIST)
C
C   LOCAL PARAMETERS
      INTEGER*2  BUF(*)
      INTEGER*4  IDNX,TLNGTHX,LNGTH
C
C....................................................................
C
C** DETERMINE TOTAL LENGTH OF DATA WRITTEN IN BYTES IN OUTPUT BUFFER
C
      TLNGTHX = LNGTH * 2
C
C** MOVE TOTAL LENGTH AS I*4 WORD TO OUPUT BUFFER
C
      call RPG_set_product_int( BUF(LGMSWOFF), TLNGTHX )
C
C** RETURN TO CALLER
C
      RETURN
      END
