/*
 * RCS info
 * $Author: steves $
 * $Locker:  $
 * $Date: 2005/12/27 16:53:28 $
 * $Id: ps_prod_task_tables.h,v 1.6 2005/12/27 16:53:28 steves Exp $
 * $Revision: 1.6 $
 * $State: Exp $
 */

#ifndef PS_PROD_TASK_TABLES_H
#define PS_PROD_TASK_TABLES_H

/* The following are data structure definitions for linked list created
   within ps_process_events. */

/* This struct defines a list node which contains only product id and
   a pointer or link to the next node in the list. Used in the Task Product
   Chain and Product Dependency List. */
typedef struct PROD_WITH_JUST_ID_NEXT {

    prod_id_t prod_id;          
    unsigned char schedule;
    unsigned char reported;
    struct PROD_WITH_JUST_ID_NEXT *next;

} Prod_wth_only_id_next;

/* Values for structure element "schedule" */
#define PRODUCT_DISABLED        1
#define PRODUCT_ENABLED         0

/* This struct defines a list node which contains product id, generating
   task  and a pointer or link to the next node in the list. Used in the 
   Dependent Products List. */
typedef struct TASK_PROD_WITH_JUST_ID_NEXT{

   prod_id_t prod_id;
   int mand_or_opt;
   char  gen_task[ ORPG_TASKNAME_SIZ ];
   struct TASK_PROD_WITH_JUST_ID_NEXT *next;

} Task_prod_wth_only_id_next;

/* Values for structure element "mand_or_opt". */
#define MANDATORY		1
#define OPTIONAL		2

/* This structure defines a list node for the Task Product Chain.
   Each node of this list contains the task id, the inputs this
   task consumes (support_prod_list) and the outputs this task
   produces (gen_prod_list).  There are only list entries for 
   task that consume or produce scheduleable products. 

   NOTE: The Task Product Chain also referred to as Task Attributes
         list (not to be confused with Task Attributes Table). */
typedef struct TASK_PROD {

    char task_name[ORPG_TASKNAME_SIZ];	      /* Task name.  See task tables
                                                 for a list of defined names. */ 
    Prod_wth_only_id_next *gen_prod_list;     /* The products that are
                                                 generated by this task (i.e.,
                                                 outputs). */ 
    Prod_wth_only_id_next *support_prod_list; /* The products which are 
                                                 needed by this task (i.e, inputs). */   
    int status;			              /* Task status. */	
    int reported;                             /* For abnormal task state, flag, if set,
                                                 indicates whether status has been reported
                                                 to system status log or not. */
    struct TASK_PROD *next;                   /* Pointer to next node in list, or
                                                 NULL if node at end of list. */ 

} Task_prod_chain;


/* This structure defines a list node for the Product Dependency List.
   Each node of this list contains the product ID and a list of all
   products which must be generated in order that this product can be
   generated.  This list is used for scheduling upstream products when "prod_id"
   is requested. */
typedef struct PROD_DEPEND {

   prod_id_t prod_id;			      /* Product ID.  See product tables
                                                 for a list of all defined IDs. */
   Prod_wth_only_id_next *prod_depend_list;   /* List of all products which
                                                 need to be generated for this
                                                 product to be generated. */
   struct PROD_DEPEND *next;	              /* Pointer to next node in list, or
                                                 NULL if node at end of list. */	

} Prod_depend_chain;


/* This structure defines a list node for the Dependent Products/Tasks List.
   Each node of this list contains the task ID and a list of all
   IDs of products/tasks which depend on/consume an output generated by this task. */
typedef struct DEPEND_PROD {

   char task_name[ORPG_TASKNAME_SIZ]; 	          /* Task name.  See task tables
                                                     for a list of defined names. */ 
   Task_prod_wth_only_id_next *depend_prod_list;  /* List of all products (and their
						     generating task) which 
                                                     depend of this task's execution. */
} Depend_prod_chain;


#endif /*DO NOT REMOVE!*/
