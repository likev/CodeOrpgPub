# HCI Task Data
#
# Purpose: This file contains data for individual HCI applications.
#	   A specific HCI application is identified by name and the
#	   data contained for the application can be considered unique
#	   for the application.
#
# Notes:   This file can be edited while the RPG is operating.  The
#	   RPG doesn't need to be restarted.
#
# RCS info
# $Author: steves $
# $Locker:  $
# $Date: 2014/06/03 20:39:05 $
# $Id: hci_task_data,v 1.3 2014/06/03 20:39:05 steves Exp $
# $Revision: 1.3 $
# State: Exp $
#
# Usage:   There should be only one entry per application.  Each entry
#	   must begin with the "Task" key word and its contents contained
#	   within brackets.  For example:
#
# 		Task {
#	 	   <key>	<value>
#		}
#
#	   The <key> and <value> fields are entry specific.  For
#	   example.  The task "hci_abc" uses a background reflectivity
#	   product in its GUI.  Since there are a number of reflectivity
#	   products available, one needs to be defined.  Since the
#	   size of the product needs to be considered for low bandwidth
#	   vs high bandwidth configurations, a different product needs
#	   to be defined for each configuration.  An example entry for
#	   task "hci_abc" could be as follows:
#
#		hci_abc {
#
#		    low_product		16
#		    high product	19
#
#		}
#
#	  The keys "low_product" and "high_product" designate the
#	  products for low and high bandwidth configurations, respectively.
#	  These keys are task specific and the hci_agent task needs to be
#	  aware of the keys in order to read these data and create an
#	  entry in the ORPGDAT_HCI_DATA data store.
#

hci_ccz {
	n_products	8
	products	16 17 18 19 20 21 132 133
	default_low	18
	default_high	20
	n_cuts		2
	cuts		5 25
}

hci_prf {
	n_products	2
	products	16 19
	default_low	16
	default_high	19
	n_cuts		1
	cuts		2
}
