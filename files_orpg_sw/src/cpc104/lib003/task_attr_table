#
#   Purpose:
#
#      Specifies rpg task information.
#
#   Notes:
#
#          THE CURRENT MAXIMUM LINE LENGTH FOR THIS FILE IS DEFINED IN
#          orpgdat.h.
#
# RCS info
# $Author: steves $
# $Locker:  $
# $Date: 2015/05/27 19:51:16 $
# $Id: task_attr_table,v 1.101 2015/05/27 19:51:16 steves Exp $
# $Revision: 1.101 $
# $State: Exp $
#


# ORPG Task Attribute Table

# Each RPG task is defined by a section led with key word "Task". A task name
# can be specified after "Task". If the task name is not specified, the base
# name in "filename" is used as task name. Task names must be unique.
#
# Key word "args" specifies the arguments for the command. If no agument is 
# needed, this line can be omitted.
#
# Multiple tasks can share the same "filename". If a file name is shared by
# multiple tasks, the process must accept the -T option and it must be launched
# with -T task_name option, where task_name is the name of the task. mrpg will
# add the -T option if it is not specified in "args".
#
# If multiple tasks share the same command name and other attributes except the
# command line, they can share the same task section with multiple "args" lines
# for each of them. Task name must follow "args" and proceed the argument list.
#
# The input stream is optional.  By default, the input stream is 0.
# The format of this field is as follows:
#
#	input_stream <Stream ID>
#
# Lists of input and output Data IDs are optional.  The formats of these
# entries are as follows:
#
#       input_data <first> <second> <third>
#       output_data <first> <second> <third>
#
# where each input or output can be specified in one of 2 ways:
# 1) by Product ID or by Product Name/Product ID tuple.
#
# Examples:
#
#	input_data      RAWDATA(54)
#	output_data     BASEDATA(55) REFLDATA(79) COMBBASE(96)
#
#	input_data      54
#	output_data     55 79 96
#
# If the first method is used, the Product name/Product ID combination
# must be a single token.
#
# Only tasks which must be scheduled list inputs and outputs.
#
# There is no harm in providing an "empty" list:
#
#       input_data
#       output_data
#
# The Data IDs must be separated by whitespace (spaces and/or tabs).
#
# Task Types
# ----------
# These optional flag entries characterize the type of a task.  The types
# are identified by the ORPGTAT_TYPE macros defined in orpgtat.h.  orpgtat.h
# also defines the CS keys for these entries.  Here are the current types
# and their keywords
#
#     respawn              Task is restarted after failure.
#     allow_duplicate      Task is allowed to fork duplicate processes.
#     monitor_only         Task is not managed but status will be reported.
#     rpg_control_task     Task is considered an rpg infrastructure process.
#     alive_in_standby     Task is kept alive in RPG standby state.
#     alive_in_allstates   Task is kept alive in all states.
#     active_channel_only  Task to be run only for the active channel.
#     site_task    label   Site dependent task of type "label", which can be
#                	   COMM_MANAGER or PRODUCT_SERVER or one of the 
#			   site configurations: MLOS Redundant RMS LDM.
#                          "label" can be "id = value" where id is any DE id in
#			   site_info.dea and value is the expected value of the
#			   DE. e.g. Lable "has_bdds = Yes" indicates that the
#			   task is enabled if site_info.has_bdds = Yes for the
#			   site.
#     no_launch		   Task is not launched by mrpg.
#     report_ready_to_operate		mrpg waits for a report from the task 
#					before starting operation
#     allow_supplemental_scans
#                          Task is allowed to process SAILS supplemental scans.
#
#
# CPU and Memory limits
# ----------------------
# It is now possible to specify per task CPU and memory limits.  Previously
# this was globally set in task_tables.   To set the limits, use:
#
#     cpu_limit		value
#     mem_limit		value
#
# If the values are not defined for the task, the global values defined in
# task_tables are applied.
#
# Default filename
# ----------------
# The default binary filename is the same as the task filename. You can specify
# the entire path of the binary if the dir is not the default. For example:
#
#     filename        /export/home/orpg/pbd

# cpc001 - Master System Control Function (MSCF a.k.a. HCI)

Task hci {  
    filename        hci
    output_data     FTXTMSG(32)
    desc            "Human Computer Interface (HCI)"
    monitor_only
}

Task hci_prod {  
    filename        hci_prod
    desc            "HCI Product Tables Editor"
    monitor_only
    parent          101
}

Task hci_perf {  
    filename        hci_perf
    desc            "HCI RDA Performance Data"
    monitor_only
    parent          101
}

Task hci_wind {  
    filename        hci_wind
    desc            "HCI Environmental Winds Editor"
    monitor_only
    parent          101
}

Task hci_ccz {  
    filename        hci_ccz
    desc            "HCI Clutter Censor Zones Editor"
    monitor_only
    parent          101
}

Task hci_ccz_legacy {  
    filename        hci_ccz_legacy
    desc            "HCI Clutter Censor Zones Editor - Legacy"
    monitor_only
    parent          101
}

Task hci_ccz_orda {  
    filename        hci_ccz_orda
    desc            "HCI Clutter Censor Zones Editor - ORDA"
    monitor_only
    parent          101
}

Task hci_vcp {  
    filename        hci_vcp
    desc            "HCI VCP Control"
    monitor_only
    parent          101
}

Task hci_basedata {  
    filename        hci_basedata
    desc            "HCI Basedata Display Task"
    monitor_only
    parent          101
}

Task hci_prf {  
    filename        hci_prf 
    desc            "HCI PRF Selection Task"
    monitor_only
    parent          101
}

Task hci_cbm {  
    filename        hci_cbm 
    desc            "HCI Clutter Bypass Map Display"
    monitor_only
    parent          101
}

Task hci_cbm_legacy {  
    filename        hci_cbm_legacy 
    desc            "HCI Clutter Bypass Map Display - Legacy"
    monitor_only
    parent          101
}

Task hci_cbm_orda {  
    filename        hci_cbm_orda 
    desc            "HCI Clutter Bypass Map Display - ORDA"
    monitor_only
    parent          101
}

Task hci_alt {  
    filename        hci_alt 
    desc            "HCI Alert Threshold Table Editor"
    monitor_only
    parent          101
}

Task hci_pstat {  
    filename        hci_pstat 
    desc            "HCI Product Status"
    monitor_only
    parent          101
}

Task hci_status {  
    filename        hci_status 
    desc            "HCI RPG Status"
    monitor_only
    parent          101
}

Task hci_prod_priority {  
    filename        hci_prod_priority
    desc            "HCI Product Priority"
    monitor_only
    parent          101
}

Task hci_nb {  
    filename        hci_nb
    desc            "HCI Narrowband Comms"
    monitor_only
    parent          101
}

Task hci_spp {  
    filename        hci_spp
    desc            "HCI Selectable Parameters"
    monitor_only
    parent          101
}

Task hci_usr {  
    filename        hci_usr
    desc            "HCI User Profile Editor"
    monitor_only
    parent          101
}

Task hci_properties {  
    filename        hci_properties
    desc            "HCI RPG Task Status Tool"
    monitor_only
    parent          101
}

Task hci_agent {
    filename        hci_agent
    desc            "HCI agent"
    rpg_control_task
}

Task hci_precip_status {  
    filename        hci_precip_status
    desc            "HCI Precip Status"
    monitor_only
    parent          101
}

Task hci_rda_link {  
    filename        hci_rda_link
    desc            "HCI RDA/RPG Interface Control/Status"
    monitor_only
    parent          101
}

Task hci_rdc_legacy {  
    filename        hci_rdc_legacy
    desc            "HCI RDA Control - Legacy"
    monitor_only
    parent          101
}

Task hci_rdc_orda {  
    filename        hci_rdc_orda
    desc            "HCI RDA Control - ORDA"
    monitor_only
    parent          101
}

Task hci_rda_legacy {  
    filename        hci_rda_legacy
    desc            "HCI RDA Alarms - Legacy"
    monitor_only
    parent          101
}

Task hci_rda_orda {  
    filename        hci_rda_orda
    desc            "HCI RDA Alarms - ORDA"
    monitor_only
    parent          101
}

Task hci_rpc {  
    filename        hci_rpc
    desc            "HCI RPG Control"
    monitor_only
    parent          101
}

Task hci_load {  
    filename        hci_load
    desc            "HCI Load Shed Categories"
    monitor_only
    parent          101
}

Task hci_pdc {  
    filename        hci_pdc
    desc            "HCI Product Distribution Control"
    monitor_only
    parent          101
}

Task hci_apps_adapt {  
    filename        hci_apps_adapt
    desc            "HCI Algorithm Adaptation Data Editor"
    monitor_only
    parent          101
}

Task hci_orda_pmd {  
    filename        hci_orda_pmd
    desc            "HCI ORDA Performance Data"
    monitor_only
    parent          101
}

Task hci_mode_status {  
    filename        hci_mode_status
    desc            "HCI Mode Status"
    monitor_only
    parent          101
}

Task hci_sails {  
    filename        hci_sails
    desc            "HCI SAILS Control"
    monitor_only
    parent          101
}

# cpc002 - Product Distribution

Task ps_onetime {  
    filename        ps_onetime
    rpg_control_task
    desc            "Schedule One-Time Products"
    args            "-v 3"
}

Task ps_routine {  
    filename        ps_routine
    desc            "Schedule Routine Products"
    rpg_control_task
    args            "-v 3 -l500"
}

Task p_server {  
    filename        p_server
    desc            "Serve Products"
    rpg_control_task
    site_task       PRODUCT_SERVER
    report_ready_to_operate
    args            p_server.0 "-v 2 0"
    args            p_server.1 "-v 2 1"
    args            p_server.2 "-v 2 2"
    args            p_server.3 "-v 2 3"
    args            p_server.4 "-v 2 4"
    args            p_server.5 "-v 2 5"
    args            p_server.6 "-v 2 6"
    args            p_server.7 "-v 2 7"
    args            p_server.8 "-v 2 8"
    args            p_server.9 "-v 2 9"
}

Task rpgdbm {  
    filename        rpgdbm
    desc            "Product Data Base Manager"
    rpg_control_task
    report_ready_to_operate
    args            "-v"
}

# cpc004 - Radar Data Acquisition


Task dpprep {  
    filename        dpprep
    input_data      DPP_INPUT(276)
    output_data     DPP_OUTPUT(305) DUALPOL_COMBBASE(306) DUALPOL_REFLDATA(307)
    desc            "Dual-pol preprocessing"
    rpg_control_task
}

Task dp_elev_prod {
    filename        dp_elev_prod
    input_data      DP_BASE_HC_AND_ML(321)
    output_data     DP_MOMENTS_ELEV(406)
    desc            "Create Dual Pol Elevation Product"
}

Task veldeal {  
    filename        veldeal
    input_data      RAWDATA(54)
    output_data     BASEDATA(76) REFLDATA(78) COMBBASE(77)
    desc            "Velocity Dealiasing for Super Resolution"
    rpg_control_task
    respawn
    mem_limit       4000
    cpu_limit        80
    args            "-I"
}

Task pbd {  
    filename        pbd
    input_data      RESPONSE_LB(5010)
    output_data     RAWDATA(54)
    desc            "Process Basedata"
    rpg_control_task
    args            "-v -l 5000"
}

Task a_recomb {  
    filename        recomb
    input_data      RECOMB_INPUT(76)
    output_data     RECOMB_OUTPUT(276) REFLDATA(277) COMBBASE(278)
    desc            "Super Resolution Azimuth Recombination Algorithm"
    rpg_control_task
    args            "-A -l 1000"
}

Task recomb {  
    filename        recomb
    input_data      RECOMB_INPUT(76)
    output_data     RECOMB_OUTPUT(55) REFLDATA(79) COMBBASE(96)
    desc            "Super Resolution Range Recombination Algorithm"
    rpg_control_task
    args            "-l 1000"
}

Task ldm_recomb {  
    filename        recomb
    input_data      RECOMB_INPUT(76)
    output_data     RECOMB_OUTPUT(1939)
    desc            "LDM DP Recombination Algorithm"
    rpg_control_task
    args            "-A -l 1000"
}

Task control_rda {  
    filename        control_rda
    input_data      RESPONSE_LB(5010)
    output_data     REQUEST_LB(4010)
    desc            "Control RDA"
    rpg_control_task
    args            "-d -l 5000 -v"
}

Task clutprod {  
    filename        clutprod
    output_data     CFCPROD(119) 
    desc            "Create Clutter Filter Control Product"
}

Task wideband_agent {  
    filename        wideband_agent
    desc            "Wideband Agent"
}

Task recclalg {  
    filename        recclalg
    input_data      BASEDATA(55)
    output_data     RECCLDIGREF(298) RECCLDIGDOP(299) 
    desc            "Radar Echo Classifier Clutter Likelihood Algorithm"
}

Task recclprods {  
    filename        recclprods
    input_data      RECCLDIGREF(298) RECCLDIGDOP(299)
    output_data     RECCLREF(132) RECCLDOP(133)
    desc            "Radar Echo Classifier Clutter Likelihood Products"
}

Task elev_prod {  
    filename        elev_prod
    input_data      BASEDATA(55)
    output_data     BASEDATA_ELEV(301)
    desc            " Create Basedata Elevation Product"
}

Task sr_elev_prod {
    filename        elev_prod
    input_data      BASEDATA(76)
    output_data     BASEDATA_ELEV(308)
    desc            " Create SR Basedata Elevation Product"
    allow_supplemental_scans
}

Task check_radial {
    filename        check_radial
    monitor_only
    input_data      BASEDATA(55)
    desc            "Radial Tester"
}

# cpc005 - Precipitation Detection/PRF Selection.

Task pcipdalg {  
    filename        pcipdalg
    input_data      HYBRSCAN(101) PRFSEL(304)
    output_data     PRCIPMSG(52) 
    desc            "Precipitation Detection Algorithm"
}

Task prfselect {  
    filename        prfselect
    input_data      BASEDATA(79) 
    output_data     PRFSEL(304)
    desc            "PRF Selection Algorithm"
}

Task prfbmap {  
    filename        prfbmap
    input_data      REFLDATA(79)
    output_data     PRFOVLY(127)
    desc            "Create PRF-Range Obscuration Bit Map Product"
}

#cpc006 - Archive III Status Product

Task status_prod {  
    filename        status_prod
    output_data     STATPROD(152)
    desc            "ASP Archive III Status Product"
}

# cpc007 - Base Data Products

Task basrflct {  
    filename        basrflct
    input_data      BASEDATA(79)
    output_data     BREF19(2) BREF16(3) BREF20(4) BREF17(5) BREF21(6) BREF18(7)
    desc            "Create Base Reflectivity Product"
}

Task basvlcty {  
    filename        basvlcty
    input_data      BASEDATA(96)
    output_data     BVEL25(11) BVEL22(12) BVEL26(13) BVEL23(14) BVEL27(15) BVEL24(16)
    desc            "Create Base Velocity Product"
}

Task basspect {  
    filename        basspect
    input_data      COMBBASE(96)
    output_data     BSPC28(8) BSPC29(9) BSPC30(10)
    desc            "Create Base Spectrum Width Product"
}

Task cmprflct {  
    filename        cmprflct
    input_data      REFLDATA(79)
    output_data     CRPG(91)
    desc            "Create Composite Reflectivity Polar Grid Product"
}

Task itwsdbv {  
    filename        itwsdbv
    input_data      COMBBASE(96)
    output_data     ITWSDBV(87)
    desc            "Create ITWS Digital Base Velocity"
}

Task vertxsct {  
    filename        vertxsct
    input_data      COMBBASE(96)
    output_data     VCS54(82) VCS53(83) VCS52(84) VCSR8(111) VCSV8(112)
    desc            "Create Vertical Cross Section Product"
}

Task cmprfcg {  
    filename        cmprfcg
    input_data      CRPG(91) COMBATTR(21)
    output_data     CRCG230(92) CRCG460(93) CRP37(23) CRP35(24) CRP38(25) CRP36(26)
    desc            "Create Composite Reflectivity Cartesian Grid Product"
}

Task cmprfape {  
    filename        cmprfape
    input_data      COMBBASE(96)
    output_data     CRPGAPE(122)
    desc            "Create Composite Reflectivity AP-Edited Polar Grid Product"
}
      
Task crapeprd {  
    filename        crapeprd
    input_data      CRPGAPE(122) COMBATTR(21)
    output_data     CRPAPE97(123) CRPAPE95(124) CRPAPE98(125) CRPAPE96(126)
    desc            "Create Composite Reflectivity AP-Edited Cartesian Grid Product"
}

Task bref8bit {  
    filename        bref8bit
    input_data      REFLDATA(79)
    output_data     BREF8BIT(94)
    desc            "Create Base Reflectivity Data Array"
    allow_supplemental_scans
}

Task bvel8bit {  
    filename        bvel8bit
    input_data      COMBBASE(96)
    output_data     BVEL8BIT(99)
    desc            "Create Base Velocity Data Array Product"
    allow_supplemental_scans
}

Task superes8bit {
    filename        superes8bit
    input_data      SR_BASEDATA(76)
    output_data     SR_BREF8BIT(153) SR_BVEL8BIT(154) SR_BSPW8BIT(155)
    desc            "Create Super Resolution Digital Base Products"
    allow_supplemental_scans
}
     
# cpc008 - Message Processing

Task alerting {  
    filename        alerting
    input_data      BASEVGD(20) CRCG460(93) ETTAB(30) VILTABL(86) VADPARAM(81) COMBATTR(21) HYADJSCN(104)
    output_data     ALRTMSG(1) ALRTPROD(43) CPC2MSG(70)
    desc            "Alerting"
}

Task radcdmsg {  
    filename        radcdmsg
    input_data      CRPG(91) COMBATTR(21) ETTAB(30) VADTMHGT(97) HYBRSCAN(101)
    output_data     RADARMSG(130)
    desc            "Create Radar Coded Message Product"
}

Task combattr {  
    filename        combattr
    input_data      MDATTNN(295) CENTATTR(22) TRFRCATR(50) HAILATTR(48) TVSATTR(65)
    output_data     COMBATTR(21)
    desc            "Create Combined Attributes Product"
}

Task basvgrid {  
    filename        basvgrid
    input_data      COMBBASE(96)
    output_data     BASEVGD(20)
    desc            "Base Velocity Grid"
}

# cpc010 - MIGFA (Kinematic Product)

Task nexradMigfa {
    filename        nexradMigfa
    input_data      COMBBASE_ELEV(303)
    output_data     MIGFA(140)
    desc            "GFM Gust Front MIGFA"
    args            "-N"
}

Task  nexradAmda {
    filename        nexradAmda
    input_data      COMBBASE_ELEV(310)
    output_data     MBA(196)
    desc            "MBA MicroBurst Detection"
}

# cpc013 - Precipitation Algorithms

Task viletalg {  
    filename        viletalg
    input_data      REFLDATA(79)
    output_data     ETTAB(30) VILTABL(86)
    desc            "VIL/Echo Tops Algorithm"
}

Task epre {
    filename        epre
    input_data      REFLDATA_ELEV(302) RECCLDIGREF(298)
    output_data     HYBRSCAN(101)
    desc            "Enhanced Preprocessing Algorithm"
}

Task prcprtac {
    filename        prcprtac
    input_data      HYBRSCAN(101)
    output_data     HYACCSCN(103)
    desc            "Precipitation Accumulation Algorithm"
}

Task prcpadju {  
    filename        prcpadju
    input_data      HYACCSCN(103)
    output_data     HYADJSCN(104) CPC10MSG(98)
    desc            "Precipitation Adjustment Algorithm"
}

Task data_qual {
    filename        data_qual
    input_data      COMBBASE(96)
    output_data     DQA(297)
    desc            "DQA Edited Reflectivity (bit count)"
}

Task snowaccum {
    filename        snowaccum
    input_data      HYBRSCAN(101)
    output_data     SAAACCUM(280)
    desc            "Snow Accumulation Algorithm"
}

Task qperate {
    filename        qperate
    input_data      DP_MOMENTS_ELEV(406)
    output_data     QPERATE(311) QPEHHC(312) DPRPROD(176)
    desc            "Dual Pol QPE Rate Algorithm"
}

Task dp_s2s_accum {
    filename        dp_s2s_accum
    input_data      QPERATE(311)
    output_data     DP_S2S_ACCUM(410)
    desc            "Dual Pol Scan-to-Scan Accum Algorithm"
}

Task dp_lt_accum {
    filename        dp_lt_accum
    input_data      DP_S2S_ACCUM(410) HYADJSCN(104)
    output_data     DP_LT_ACCUM(411)
    desc            "Dual Pol Long Term Accum Algorithm"
}

Task dp_dua_accum {
    filename        dp_dua_accum
    input_data      DP_S2S_ACCUM(410)
    output_data     DUAPROD(173)
    desc            "Create DUA Product"
}

# cpc014 - Precipitation Products

Task ecotppro {  
    filename        ecotppro
    input_data      ETTAB(30)
    output_data     ETPRODD(29) 
    desc            "Create Echo Tops Product"
}

Task hybrprod {  
    filename        hybrprod
    input_data      HYBRSCAN(101)
    output_data     HYBRDREF(57) HYBRGREF(58)
    desc            "Create Hybrid Scan Product"
}

Task vilprod {  
    filename        vilprod
    input_data      VILTABL(86)
    output_data     VILPROD(85) 
    desc            "Create VIL Scan Product"
}

Task lcrflct {  
    filename        lcrflct
    input_data      REFLDATA(79)
    output_data     RFAVLYR1(36) RFAVLYR2(37) RFAVLYR3(116) RFMXLYR1(38) RFMXLYR2(39) RFMXLYR3(117) 
    desc            "Create Layer Composite Reflectivity Product"
}

Task prcpprod {  
    filename        prcpprod
    input_data      HYADJSCN(104)
    output_data     HY1HRACC(105) HY3HRACC(106) HYSTMTOT(107) HY1HRDIG(108) HYSUPPLE(109) HYUSPBUF(102) CPC10MSG(98) HYDIGSTM(138)
    desc            "Create Precipitation Accumulation Product"
}

Task prcpuspt {  
    filename        prcpuspt
    input_data      HYUSPBUF(102)
    output_data     HYUSPACC(56) CPC10MSG(98)
    desc            "User-Selectable Precipitation Products"
}

Task lcrappg {  
    filename        lcrappg
    input_data      COMBBASE(96)
    output_data     RMXAPPG(45)
    desc            "Layer Composite Reflectivity Polar Grid AP-Removed"
}

Task lcrap {  
    filename        lcrap
    input_data      RMXAPPG(45)
    output_data     RMXAPLYR(44)
    desc            "Layer Composite Reflectivity Product AP-Removed"
}

Task hiresvil {  
    filename        hiresvil
    input_data      DQA(297)
    output_data     HRVIL(134)
    desc            "High Resolution Digital VIL Product (256 data levels)"
}

Task user_sel_LRM {  
    filename        user_sel_LRM
    input_data      REFLDATA(79)
    output_data     ULRDATA(137)
    desc            "Create User Selectable Layer Composite Reflectivity Product"
}

Task hireseet {  
    filename        hireseet
    input_data      DQA(297)
    output_data     HREET(135)
    desc            "High Resolution Digital Echo Tops Product (71 data levels)"
}

Task saaprods {
    filename        saaprods
    input_data      SAAACCUM(280)
    output_data     OSWACCUM(144) OSDACCUM(145) SSWACCUM(146) SSDACCUM(147)
    desc            "Snow Accumulation Algorithm Products"
}

Task saausers {
    filename        saausers
    input_data      SAAACCUM(280)
    output_data     USWACCUM(150) USDACCUM(151)
    desc            "Snow Accumulation User Select Prods"
}

Task dp_precip_4bit {
    filename        dp_precip_4bit
    input_data      DP_LT_ACCUM(411)
    output_data     OHAPROD(169) STAPROD(171)
    desc            "Create Dual Pol Precipitation Products"
}

Task dp_precip_8bit{
    filename        dp_precip_8bit
    input_data      DP_LT_ACCUM(411)
    output_data     DAAPROD(170) DSAPROD(172) DODPROD(174) DSDPROD(175)
    desc            "Create Dual Pol Precipitation Products"
}

# cpc015 - Storm Series Algorithms

Task segmtalg {  
    filename        segmtalg
    input_data      REFLDATA_ELEV(302)
    output_data     FILTREFL(400) SEGATTR(27) 
    desc            "Storm Segments/Components Algorithm"
}

Task cpcntalg {  
    filename        cpcntalg
    input_data      SEGATTR(27)
    output_data     CENTATTR(22)
    desc            "Storm Centroids Algorithm"
}

Task trfrcalg {  
    filename        trfrcalg
    input_data      CENTATTR(22)
    output_data     TRFRCATR(50)
    desc            "Storm Track/Forecast Algorithm"
}

Task hailalg {  
    filename        hailalg
    input_data      CENTATTR(22) TRFRCATR(50)
    output_data     TRENDATR(34) HAILATTR(48)
    desc            "Storm Structure/Hail Algorithm"
}

# cpc016 - Storm Products

Task srmrmrv {  
    filename        srmrmrv
    input_data      BASEDATA(96)
    output_data     SRMRVMAP(68) SRMRVREG(69)
    desc            "Storm Relative Mean Velocity Product"
}

Task stmtrprd {  
    filename        stmtrprd
    input_data      CENTATTR(22) TRFRCATR(50)
    output_data     STMTRDAT(51)
    desc            "Storm Track Product"
}

Task hailprod {  
    filename        hailprod
    input_data      HAILATTR(48) 
    output_data     HAILCAT(33)
    desc            "Hail Product"
}

Task strucprod {  
    filename        strucprod
    input_data      CENTATTR(22) TRENDATR(34) 
    output_data     STRUCDAT(49)
    desc            "Storm Structure Product"
}

# cpc017 - Kinematic Algorithms

Task vwindpro {  
    filename        vwindpro
    input_data      COMBBASE(96) 
    output_data     VADTMHGT(97) VADPARAM(81) HPLOTS(35)
    desc            "Vertical Wind Profile Algorithm & Product"
}

Task mda1d {
    filename        mda1d
    input_data      SR_COMBBASE(77)
    output_data     MDA1D(292)
    desc            "Mesocyclone Detection Algorithm 1D for Super-Res"
}

Task mda2d {
    filename        mda2d
    input_data      MDA1D(292)
    output_data     MDA2D(293)
    desc            "Mesocyclone Detection Algorithm 2D"
}

Task tda1d {  
    filename        tda1d
    input_data      COMBBASE(96) 
    output_data     TDA1DATR(46)
    desc            "Tornado Detection 1D Algorithm"
}

Task tda2d3dru {
    filename        tda2d3dru
    input_data      TDA1DATR(46)
    output_data     TVSATR_RU(290)
    desc            "Tornado Detection 2D/3D Algorithm Elev Based"
}

Task tda2d3d {  
    filename        tda2d3d
    input_data      TDA1DATR(46)
    output_data     TVSATTR(65)
    desc            "Tornado Detection 2D/3D Algorithm"
}

Task mda3d {
    filename        mda3d
    input_data      MDA2D(293)
    output_data     MDA3D(294)
    desc            "Mesocyclone Detection Algorithm 3D"
}

Task mdattnn {
    filename        mdattnn
    input_data      MDA3D(294) TRFRCATR(50) TVSATTR(65)
    output_data     MDATTNN(295)
    desc            "MDA Track, Trend & Neural Network"
}

Task hca         {
    filename        hca
    input_data      DP_BASE_AND_QUALITY(320) MLDA(328)
    output_data     DP_BASE_HC_AND_ML(321)
    desc            'Hydrometeor Classification Algorithm'
}

Task qia {
    filename        qia
    input_data      DUALPOL_COMBBASE(306)
    output_data     DP_BASE_AND_QUALITY(320)
    desc            'Quality Index Algorithm'
}

Task dualpol8bit {
    filename        dualpol8bit
    input_data      DP_BASE_HC_AND_ML(321)
    output_data     CC8BIT(161) KDP8BIT(163) ZDR8BIT(159) HC8BIT(165)
    desc            "Dual Pol 8-bit products"
    allow_supplemental_scans
}

Task mlda        {
    filename        mlda
    input_data      DP_BASE_HC_AND_ML(321)
    output_data     MLDA(328)
    desc            'Melting Layer Detection Alg'
}

Task dualpol4bit {
    filename        dualpol4bit
    input_data      DP_BASE_HC_AND_ML(321)
    output_data     CC4BIT(160) KDP4BIT(162) ZDR4BIT(158) HC4BIT(164)
    desc            "Dual Pol 4-bit products"
}

Task mlprod {
    filename        mlprod
    input_data      DP_BASE_HC_AND_ML(321)
    output_data     MLPROD(166)
    desc            "Melting Layer Contours"
    args            "-T mlprod"
    allow_supplemental_scans
}

Task hhc8bit {
    filename        hhc8bit
    input_data      QPEHHC(312)
    output_data     HHC8BIT(177)
    desc            "Hybrid Hydrometeor Classification 8 bit"
    args            "-T hhc8bit"
    allow_supplemental_scans
}

# cpc018 - Kinematic Products

Task mdaprod {
    filename        mdaprod
    input_data      MDATTNN(295)
    output_data     MDAPROD(141) DMDPROD(149)
    desc            "DMD and MD Products"
}

Task tdaruprod {
    filename        tdaruprod
    input_data      TVSATR_RU(290) MDATTNN(295) TRFRCATR(50)
    output_data     TRU(143)
    desc            "Create ELEVATION BASED TRU Product"
}

Task tvsprod {  
    filename        tvsprod
    input_data      TVSATTR(65) TRFRCATR(50)
    output_data     TVSPROD(80)
    desc            "Create TVS Product"
}

Task vad {  
    filename        vad
    input_data      VADTMHGT(97)
    output_data     VADVER2(110)
    desc            "Velocity Azimuth Display Product"
}

Task superob_vel {
    filename        superob_vel
    input_data      COMBBASE(96)
    output_data     SUPEROBVEL(136)
    desc            "SuperOb: NCEP Wind Model Initialization"
}

# Manage Redundant

Task mngred {
    filename        mngred
    desc            "Manage Redundant"
    site_task       Redundant
    args            "-n 1500 -v 2"
}


# cpc20 - RMMS interface

Task rms_interface {  
    filename        rms_interface
    desc            "RMMS interface"
    site_task       RMS
    allow_duplicate
    alive_in_standby
    args            "-v"
}

# cpc22 - NTDA

Task ntda_alg {  
    filename        ntda_alg
    input_data      COMBBASE_ELEV(303) RECCLDIGREF(298)
    output_data     NTDA_EDR_IP(315) NTDA_CONF_IP(316)
    desc            "NCAR Turbulence Detection Algorithm - Intermediate Products"
}

Task ntda_fp {  
    filename        ntda_fp
    input_data      NTDA_EDR_IP(315) NTDA_CONF_IP(316)
    output_data     NTDA_EDR(156) NTDA_CONF(157)
    desc            "NCAR Turbulence Detection Algorithm - Final Products"
}

Task dqa_elev {
    filename        dqa_elev
    input_data      DQA(297)
    output_data     DRQ(195)
    desc            "DQA Elev (256 data levels)"
}

Task  icing_hazard {
    filename        icing_hazard
    input_data      HCA(321)
    output_data     IHL(178)
    desc            "Icing Hazard Level"
}

Task  hail_hazard {
    filename             hail_hazard
    input_data           HCA(321)
    output_data          HHL(179)
    desc                 "Hail Hazard Layer"
}

# cpc101 - algorithm support tasks

Task update_alg_data {
    filename        update_alg_data
    desc            "Algorithm Support Task"
    rpg_control_task
    report_ready_to_operate
}

# cpc105 - ORPG Communications Managers

#   In the example below, instance 0 is for RDA connection, while
#   others are for a product distribution connections ...

Task cm_uconx {  
    filename        cm_uconx
    desc            "UconX Communications Manager"
    rpg_control_task
    site_task       COMM_MANAGER
    allow_duplicate
    args            cm_uconx.0 "-v 0"
    args            cm_uconx.1 "-v 1"
    args            cm_uconx.2 "-v 2"
}

Task cm_tcp {  
    filename        cm_tcp
    desc            "TCP Communications Manager"
    rpg_control_task
    site_task       COMM_MANAGER
    args            cm_tcp.0 "-l 3 -a 12 0"
    args            cm_tcp.1 "-l 3 1"
    args            cm_tcp.2 "-l 3 2"
    args            cm_tcp.3 "-l 3 3"
    args            cm_tcp.4 "-l 3 -s 4"
    args            cm_tcp.5 "-l 3 5"
    args            cm_tcp.6 "-l 3 -c 0 6"
    args            cm_tcp.7 "-l 3 -c 0 7"
    args            cm_tcp.8 "-l 3 -s 8"
    args            cm_tcp.9 "-l 3 -s -c 0 9"
}

Task cm_ping {  
    filename        cm_ping
    desc            "Communications Manager Ping"
    args            "-b -v"
}

# cpc112 - RPG Archive-II

Task convert_ldm {
    filename        convert_ldm
    desc            "Convert LDM"
    rpg_control_task
    report_ready_to_operate
    active_channel_only
    site_task       LDM
}

Task levelII_stats_ICAO_ldmping {
    filename        levelII_stats_ICAO_ldmping
    desc            "Level-II Stats ICAO Ldmping"
    rpg_control_task
    report_ready_to_operate
    active_channel_only
    site_task       LDM
}

Task monitor_archive_II {
    filename        monitor_archive_II
    desc            "Monitor Archive-II"
    rpg_control_task
    report_ready_to_operate
    active_channel_only
    site_task       LDM
}

# cpc2xx - Replay Tasks

Task replay_basrflct {  
    filename        basrflct
    input_data      BASEDATA(79)
    output_data     BREF19(2) BREF16(3) BREF20(4) BREF17(5) BREF21(6) BREF18(7)
    desc            "Create Base Reflectivity Product (Replay)"
}

Task replay_basvlcty {  
    filename        basvlcty 
    input_data      BASEDATA(96)
    output_data     BVEL25(11) BVEL22(12) BVEL26(13) BVEL23(14) BVEL27(15) BVEL24(16)
    desc            "Create Base Velocity Product (Replay)"
}

Task replay_basspect {  
    filename        basspect
    input_data      COMBBASE(96)
    output_data     BSPC28(8) BSPC29(9) BSPC30(10)
    desc            "Create Base Spectrum Width Product (Replay)"
}

Task replay_vertxsct {  
    filename        vertxsct
    input_data      COMBBASE(96)
    output_data     VCS54(82) VCS53(83) VCS52(84) VCSR8(111) VCSV8(112)
    desc            "Create Vertical Cross Section Product (Replay)"
}

Task replay_cmprfcg {  
    filename        cmprfcg
    input_data      CRPG(91) COMBATTR(21)
    output_data     CRCG230(92) CRCG460(93) CRP37(23) CRP35(24) CRP38(25) CRP36(26)
    desc            "Create Composite Reflectivity Cartesian Grid Product (Replay)"
}

Task replay_bref8bit {  
    filename        bref8bit
    input_data      REFLDATA(79)
    output_data     BREF8BIT(94)
    desc            "Create Base Reflectivity Data Array (Replay)"
}

Task replay_bvel8bit {  
    filename        bvel8bit
    input_data      COMBBASE(96)
    output_data     BVEL8BIT(99)
    desc            "Create Base Velocity Data Array Product (Replay)"
}

Task replay_radcdmsg {  
    filename        radcdmsg
    input_data      CRPG(91) COMBATTR(21) ETTAB(30) VADTMHGT(97) HYBRSCAN(101)
    output_data     RADARMSG(130)
    desc            "Create Radar Coded Message Product (Replay)"
}

Task replay_user_sel_LRM {  
    filename        user_sel_LRM
    input_data      REFLDATA(79)
    output_data     ULRDATA(137)
    desc            "Create User Selectable Layer Composite Reflectivity Product - replay"
}

Task replay_srmrmrv {  
    filename        srmrmrv
    input_data      BASEDATA(96)
    output_data     SRMRVMAP(68) SRMRVREG(69)
    desc            "Storm Relative Mean Velocity Product (Replay)"
}

Task replay_vad {  
    filename        vad
    input_data      VADTMHGT(97) 
    output_data     VADVER2(110)
    desc            "Velocity Azimuth Display Product (Replay)"
}

Task replay_dp_dua_accum {
    filename        dp_dua_accum
    input_data      DP_S2S_ACCUM(410)
    output_data     DUAPROD(173)
    desc            "Create DUA Product replay"
}

Task mrpg {  
    filename        mrpg
    desc            "managing rpg"
    monitor_only
}
Task rssd {  
    filename        rssd
    desc            "libinfr server"
    monitor_only
}
Task nds {  
    filename        nds
    desc            "the node info server"
    monitor_only
}

Task lb_rep {
    filename        lb_rep
    desc            "Replicate LB"
    monitor_only
}

Task owr_server {
    filename        owr_server
    desc            "One way replication server"
    alive_in_allstates
    args            "-l"
}

# cpc111 task 005 - mngdskerr 

Task mngdskerr {  
    filename        mngdskerr  
    desc            "Monitor Disk Errors"
}
