
# Data Element Attributes for the comms adaptation/configuration data

    comms.n_link	name = n_link;	
			type = int;
			value = 0;		
			range = [0, 1000];	
			description = Number of comms links;

    comms.user_index	name = user_index;	
			type = int;
			range = [0, 1000];	
			description = User index for comms links;

    comms.cm_index	name = cm_index;	
			type = int;
			range = [0, 1000];	
			description = Comms manager index for comms links;

    comms.device_number	name = device_number;	
			type = int;
			range = [0, 1000];	
			description = Device number for comms links;

    comms.port_number	name = port_number;	
			type = int;
			range = [0, 1000];	
			description = Device port number for comms links;

    comms.line_type	name = line_type;	
			type = string;
			description = Line type for comms links;

    comms.line_rate	name = line_rate;	
			type = int;
			range = [0, -];	
			description = Line baud rate for comms links;

    comms.cm_name	name = cm_name;	
			type = string;
			description = Comms manager name for comms links;

    comms.packet_size	name = packet_size;	
			type = int;
			range = [0, 4096];	
			description = Packet size for comms links;

    comms.n_pvcs	name = n_pvcs;	
			type = int;
			range = [0, 2];	
			description = Number of PVCs for comms links;

    comms.link_state	name = link_state;	
			type = int;
			range = [0, 1];	
			description = Link enabled state for comms links;

    comms.en_enabled	name = en_enabled;	
			type = int;
			range = [0, 1];	
			description = EN enabled flag for comms links;

    comms.user_class	name = user_class;	
			type = int;
			description = User class for comms links;

    comms.line_time_out	name = line_time_out;	
			type = int;
			range = [0, -];	
			description = Per-line time out for comms links;

    comms.access_word	name = access_word;	
			type = string;
			description = Line access word for comms links;

    comms.misc_spec	name = misc_spec;	
			type = string;
			description = Additional line-based comms specs;

    comms.init_state	name = init_state;
			type = string;
			value = not completed;
			range = {not completed, init completed};
			description = Flag indicating comms init completion;


