C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:40:58 $
C $Id: a315p5.ftn,v 1.3 2002/12/16 19:40:58 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315P5__DEL_PROX_CELLS( )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315P5__DEL_PROX_CELLS
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       06 29 95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315P5__DEL_PROX_CELLS( )
*.
*.  MODULE FUNCTION:
*.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT              TYPE        DESCRIPTION
*.    -   -----              ----        -----------
*.    G   ADPDPDEL           R*4         Adaptation data Depth Delete
*.                                       Threshold stored in Storm Data.
*.    C   ADPHZDEL_SQR       R*4         Square of the horizontal delete
*.                                       distance adaptable parameter (km**2).
*.                                       Uses VIL to delete weaker of two near
*.                                       storm cells.
*.    C   NBR_DEL_CELL       I*4         Number of potential storm cells
*.                                       deleted by merges and proximity
*.                                       checks.  Although tallied it is not
*.                                       used.
*.    C   NBR_STMS           I*4         Counter for the number of storm cells
*.                                       constructed from components before
*.                                       calls to merge or delete modules.
*.    C   STRMCELL           R*4         Array of storm cell characteristics
*.                                       of all storm cells built from
*.                                       components.
*.    C   TWICE_ADPHZDEL_SQR R*4         Twice the square of the horizontal
*.                                       delete distance adaptable parameter
*.                                       (km**2).
*.    C   STC_BAS            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of the height (km ARL) of the
*.                                       the lowest centroid of any component
*.                                       associated with a storm cell.
*.    C   STC_MWA            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of mass-weighted area of a
*.                                       storm cell.
*.    C   STC_TOP            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of the height (km ARL) of the
*.                                       highest centroid of any component
*.                                       associated with a storm cell.
*.    C   STC_VIL            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of the storm cell's VIL
*.    C   STC_XCN            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of the mass-weighted
*.                                       X-coordinate (km) of a storm cell's
*.                                       3-D centroid.
*.    C   STC_YCN            I*4         (CONSTANT)Location in the STRMCELL
*.                                       array of the mass-weighted Y
*.                                       coordinate (km) of a storm cell's 3-D
*.                                       centroid.
*.
*.    *   OUTPUT       TYPE        DESCRIPTION
*.    -   ------       ----        -----------
*.    G   ADPDPDEL     R*4         Adaptation data Depth Delete Threshold
*.                                 stored in Storm Data.
*.    C   NBR_DEL_CELL I*4         Number of potential storm cells deleted by
*.                                 merges and proximity checks.  Although
*.                                 tallied it is not used.
*.    C   STRMCELL     R*4         Array of storm cell characteristics of all
*.                                 storm cells built from components.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME      TYPE        DESCRIPTION
*.    ----      ----        -----------
*.    DEPTH1    R*4         Depth of first storm cell
*.    DEPTH2    R*4         Depth of second storm cell
*.    DIFFDPTH  R*4         Depth difference between two cells being
*.                          considered for deletion
*.    HORZDIST2 R*4         Centroid Distance Difference between two storm
*.                          cells
*.    STINX     I*4         Do loop variable for second storm cell index
*.    STM_NDX   I*4         Do loop variable for the number of storm cells
*.    VIL1      R*4         The cell-based VIL for the first storm cell
*.    VIL2      R*4         The cell-based VIL for the second storm cell
*.    XCENT1    R*4         The mass-weighted X-coordinate (km) of the first
*.                          storm cell's 3-D centroid
*.    XDIST     R*4         X coordinate distance between two storm cells
*.    YCENT1    R*4         The mass-weighted Y coordinate (km) of the first
*.                          storm cell's 3-D centroid
*.    YDIST     R*4         Y coordinate distance between two storm cells
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A315CSAD
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315CNCC
*.    A315CUCC
*.    A315CVCC
*.    A315CWCC
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:
*.
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C        STORM CELL CENTROIDS: DELETE PROXIMITY CELLS ROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach output parameter-definition file (of "STORM_CENTROIDS")
$INCLUDE A315BUF.INC/G,**A315P5C (NLIST)
C
$INCLUDE A315BUF.INC/G, **A315PSAD (NLIST)
$INCLUDE                **A315CSAD (NLIST)
C
C**Attach internal common area (CNCC)
$INCLUDE A315.INC/G,**A315CNCC (NLIST)
C
C**Attach internal common area (CUCC)
$INCLUDE A315.INC/G,**A315CUPC (NLIST)
$INCLUDE            **A315CUCC (NLIST)
C
C**Attach internal common area (CVCC)
$INCLUDE A315.INC/G,**A315CVPC (NLIST)
$INCLUDE            **A315CVCC (NLIST)
C
C**Attach internal common area (CWCC)
$INCLUDE A315.INC/G,**A315CWCC (NLIST)
C
C*********************** DATA DECLARATIONS **************************
C
      INTEGER  STM_NDX, STINX
C
      REAL     DEPTH1, DEPTH2, DIFFDPTH, XCENT1, YCENT1
      REAL     XDIST, YDIST, HORZDIST2, VIL1, VIL2
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C** Check proximity for possible deletion of cells.
C
C** DO FOR ALL (STORM CELLs)
C
      DO 180 STM_NDX = 1, NBR_STMS
C
C** Check storm cell mass.  If zero, it has already been deleted.
C** Obviously, if not zero, it has not.
C
C** DO WHILE (STORM CELL is not deleted)
C
         IF ( STRMCELL( STC_MWA, STM_NDX ) .GT. 0.0 ) THEN
C
C** Extract this storm cell's centroid horizontal position, cell-
C** based VIL, and derive the cell depth.
C
            XCENT1 = STRMCELL( STC_XCN, STM_NDX )
            YCENT1 = STRMCELL( STC_YCN, STM_NDX )
            VIL1 = STRMCELL( STC_VIL, STM_NDX )
            DEPTH1 = STRMCELL( STC_TOP, STM_NDX ) -
     >               STRMCELL( STC_BAS, STM_NDX)
C
            DO 170 STINX = STM_NDX + 1, NBR_STMS
               IF ( STRMCELL( STC_MWA, STINX ) .GT. 0.0 ) THEN
C
C** Extract this storm cell's centroid horizontal position.
C
                  XDIST = STRMCELL( STC_XCN, STINX ) - XCENT1
                  YDIST = STRMCELL( STC_YCN, STINX ) - YCENT1
C
C** COMPUTE (CENTROID DISTANCE DIFFERENCE)
C
                  HORZDIST2 = XDIST*XDIST + YDIST*YDIST
C
C** IF (CENTROID DISTANCE DIFFERENCE is less than or equal to
C** THRESHOLD (Horizontal Delete)) THEN
C
                  IF ( HORZDIST2 .LE. ADPHZDEL_SQR ) THEN
                     VIL2 = STRMCELL( STC_VIL, STINX )
C
C** Compare the VILs of the two cells.
C
                     IF ( VIL1 .GT. VIL2 ) THEN
C
C** Delete the STORM CELL and its COMPONENTS with the smallest VIL.
C
                        STRMCELL ( STC_MWA, STINX ) = 0.0
C
C** Decrement the NUMBER of STORM CELLS
C
                        NBR_DEL_CELL = NBR_DEL_CELL + 1
                        GO TO 170
                     ELSE
C
C** Delete the STORM CELL and its COMPONENTS with the smallest VIL.
C
                        STRMCELL ( STC_MWA, STM_NDX ) = 0.0
C
C** Decrement the NUMBER of STORM CELLS
C
                        NBR_DEL_CELL = NBR_DEL_CELL + 1
                        GO TO 180
                     END IF
                  END IF
C
C** IF (CENTROID DISTANCE DIFFERENCE  t/is less than or equal to
C** twice the THRESHOLD (Horizontal Delete) AND .....
C
                  IF ( HORZDIST2 .LE. TWICE_ADPHZDEL_SQR ) THEN
C
C** Derive the depths of the two cells.
C
                     DEPTH2 = STRMCELL( STC_TOP, STINX ) -
     >                        STRMCELL( STC_BAS, STINX)
C
C** COMPUTE (DEPTH DIFFERENCE)
C
                     DIFFDPTH = ABS( DEPTH1 - DEPTH2 )
C
C** (DEPTH DIFFERENCE is greater than THRESHOLD (DEPTH DELETE))) THEN
C
                     IF ( DIFFDPTH .GT. ADPDPDEL ) THEN
                        IF ( DEPTH1 .GE. DEPTH2 ) THEN
C
C** Delete the STORM CELL and its COMPONENTS with the smallest DEPTH.
C
                           STRMCELL( STC_MWA, STINX ) = 0.0
C
C** Decrement the NUMBER OF STORM CELLS.
C
                           NBR_DEL_CELL = NBR_DEL_CELL + 1
                           GO TO 170
                        ELSE
C
C** Delete the STORM CELL and its COMPONENTS with the smallest DEPTH.
C
                           STRMCELL( STC_MWA, STM_NDX ) = 0.0
C
C** Decrement the NUMBER OF STORM CELLS.
C
                           NBR_DEL_CELL = NBR_DEL_CELL + 1
                           GO TO 180
                        END IF
                     END IF
                  END IF
               END IF
 170        CONTINUE
         END IF
 180  CONTINUE
C
C************** END OF PROCESSING FOR SUBROUTINE ********************
C
      RETURN
      END
