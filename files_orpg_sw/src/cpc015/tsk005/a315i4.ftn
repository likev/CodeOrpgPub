C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:40:41 $
C $Id: a315i4.ftn,v 1.3 2002/12/16 19:40:41 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315I4__MERGE_COMP( NRSEGP, NRSEGC, RADSEGP,
     >                               RADSEGC)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315I4__MERGE_COMP
*.
*.  MODULE VERSION: 0016
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       08 16 85      0000      DENNIS MILLER        BUILD 2
*.       05 07 86      0001      DENNIS MILLER        SPR # 304
*.       07 10 86      0002      DENNIS MILLER        SPR # 60313
*.       07 10 86      0002      DENNIS MILLER        SPR # 60367
*.       10 18 88      0003      DAVID M. LYNCH       SPR # 80378
*.       03 22 90      0004      PAUL U. PISANI       SPR # 90697
*.       07 31 90      0005      R. VISIOLI           SPR # 90775
*.       02 22 91      0006      DENNIS MILLER        SPR # 91256
*.       02 15 91      0006      JOHN DEPHILIP        SPR # 91762
*.       12 03 91      0007      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0008      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0009      Toolset              SPR 91895
*.       03/25/93      0010      Toolset              SPR NA93-06801
*.       01/28/94      0011      Toolset              SPR NA94-01101
*.       03/03/94      0012      Toolset              SPR NA94-05501
*.       04/01/95      0013      Toolset              CCR NA95-11802
*.       06/28/95      0014      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0015      Toolset              CCR NA95-11807
*.       03/16/99      0016      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315I4__MERGE_COMP( NRSEGP, NRSEGC,
*.                                             RADSEGP, RADSEGC )
*.
*.  MODULE FUNCTION:
*.
*.  This routine combines the attributes of two merging components.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT   TYPE        DESCRIPTION
*.    -   -----   ----        -----------
*.    C   AZ1     I*4         Points to first azimuth of elevation scan in
*.                            radial status arrays.
*.    C   CMPFEAT R*4         An array of 16 characteristics for up to 120
*.                            componets for 7 reflectivity levels
*.    C   FIRSTAZ R*4         Pointer for first azimuth in elevation scan.
*.    C   LABC    I*4         Component ID used as a pointer to merge two
*.                            components.
*.    C   LABP    I*4         Component ID used as a pointer to merge two
*.                            components.
*.    C   NRSEG   I*4         Number of segments in the first radial of the
*.                            elevation scan and each succeeding pair of
*.                            radials by reflectivity index.
*.    C   RADSEG  I*4         Subset of SEGMAIN segments array used for
*.                            correlating segments from pairs of adjacent
*.                            radials.
*.    C   RINDX   I*4         Index used to point to current reflectivity
*.                            level for processing segment index array and
*.                            component arrays.
*.    C   FEA_ARA I*4         (CONSTANT)Location of a component's area in
*.                            CMPFEAT array.
*.    C   FEA_CNT I*4         (CONSTANT)Location of the count of the number of
*.                            segments in a component in CMPFEAT array.
*.    C   FEA_FAZ I*4         (CONSTANT)Location of the radial number of a
*.                            component's first (most counter-clockwise)
*.                            segment in the CMPFEAT array.
*.    C   FEA_FBN I*4         (CONSTANT)Location in the CMPFEAT array of the
*.                            beginning bin of a component's segment that
*.                            starts closest to the radar.
*.    C   FEA_FZA I*4         (CONSTANT)Location of the first azimuth in
*.                            radians (most counter-clockwise) segment of a
*.                            component in the CMPFEAT array.
*.    C   FEA_LAZ I*4         (CONSTANT)Location of the radial number of a
*.                            component's last (most clockwise) segment in the
*.                            CMPFEAT array.
*.    C   FEA_LBN I*4         (CONSTANT)Location in the CMPFEAT array of the
*.                            ending bin of a component's segment that ends
*.                            farthest from the radar.
*.    C   FEA_LZA I*4         (CONSTANT)Location of the last azimuth in
*.                            radians (most clockwise) segment of a component
*.                            in the CMPFEAT array.
*.    C   FEA_MRF I*4         (CONSTANT)Location of a component's maximum
*.                            reflectivity in CMPFEAT array.
*.    C   FEA_MWA I*4         (CONSTANT)Location of component's mass-weighted
*.                            area in CMPFEAT array.
*.    C   FEA_XCN I*4         (CONSTANT)Location of a component's centroid's X
*.                            coordinate in CMPFEAT array.
*.    C   FEA_YCN I*4         (CONSTANT)Location of a component's centroid's Y
*.                            coordinate in CMPFEAT array.
*.    C   FEA_ZCR I*4         (CONSTANT)Location in the CMPFEAT array of the
*.                            360-0 degrees azimuth cross-over flag for a
*.                            component.
*.    C   NRDCHR  I*4         (CONSTANT)Number of segment characteristics
*.                            stored in RADSEG array.
*.    C   NRDMAX  I*4         (CONSTANT)Maximum number of segments per
*.                            reflectivity level per radial that can be stored
*.                            in the array RADSEG.
*.    C   RAD_ID  I*4         (CONSTANT)Position of ID labels of segments in
*.                            RADSEG, RADSEGC, and RADSEGP arrays.
*.    P   NRSEGC  I*4         Number of segments
*.    P   NRSEGP  I*4         Number of segment pairs
*.    P   RADSEGC I*4         Current radial segment array
*.    P   RADSEGP I*4         Previous radial segment array
*.
*.    *   OUTPUT  TYPE        DESCRIPTION
*.    -   ------  ----        -----------
*.    C   CMPFEAT R*4         An array of 16 characteristics for up to 120
*.                            componets for 7 reflectivity levels
*.    C   RADSEG  I*4         Subset of SEGMAIN segments array used for
*.                            correlating segments from pairs of adjacent
*.                            radials.
*.    P   RADSEGC I*4         Current radial segment array
*.    P   RADSEGP I*4         Previous radial segment array
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME  TYPE        DESCRIPTION
*.    ----  ----        -----------
*.    IX1   I*4         Loop index used for referencing "first"
*.                      radial-segments.
*.    IXC   I*4         Loop index used for referencing "current"
*.                      radial-segments.
*.    IXP   I*4         Loop index used for referencing "previous" radial
*.                      segment.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315COCC
*.    A315CPCC
*.    A315CQCC
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C               STORM COMPONENTS: MERGE COMP SUBROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach internal common area (COCC)
$INCLUDE A315.INC/G, **A315COCC (NLIST)
C
C**Attach internal common area (CPCC)
$INCLUDE A315.INC/G,**A315CPPC (NLIST)
$INCLUDE            **A315CPCC (NLIST)
C
C**Attach internal common area (CQCC)
$INCLUDE A315.INC/G,**A315CQPC (NLIST)
$INCLUDE            **A315CQCC (NLIST)
C
C*********************** DATA DECLARATIONS **************************
C
      INTEGER  NRSEGP, NRSEGC
      INTEGER RADSEGP(NRDCHR, NRDMAX), RADSEGC(NRDCHR, NRDMAX)
C
      INTEGER IX1, IXP, IXC
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C** Sum the attributes of the merged Components for integrated
C** fields.
C
C** Combine Area.
C
      CMPFEAT( FEA_ARA,LABC,RINDX ) = CMPFEAT( FEA_ARA,LABC,RINDX )
     >                              + CMPFEAT( FEA_ARA,LABP,RINDX )
C
C** Combine mass.
C
      CMPFEAT( FEA_MWA,LABC,RINDX ) = CMPFEAT( FEA_MWA,LABC,RINDX )
     >                              + CMPFEAT( FEA_MWA,LABP,RINDX )
C
C** Combine x and y centroids components.
C
      CMPFEAT( FEA_XCN,LABC,RINDX ) = CMPFEAT( FEA_XCN,LABC,RINDX )
     >                              + CMPFEAT( FEA_XCN,LABP,RINDX )
      CMPFEAT( FEA_YCN,LABC,RINDX ) = CMPFEAT( FEA_YCN,LABC,RINDX )
     >                              + CMPFEAT( FEA_YCN,LABP,RINDX )
C
C** Find maximum reflectivity.
C
      IF (CMPFEAT(FEA_MRF,LABP,RINDX).GT.CMPFEAT(FEA_MRF,LABC,RINDX))
     >     CMPFEAT(FEA_MRF,LABC,RINDX) = CMPFEAT(FEA_MRF,LABP,RINDX)
C
C** Set fields at first azimuth of new, combined Component.
C
C** If Previous Component has lesser first azimuth than Current:
C
      IF (CMPFEAT( FEA_FAZ, LABP, RINDX ) .LT.
     >                          CMPFEAT( FEA_FAZ, LABC, RINDX )) THEN
         CMPFEAT(FEA_FAZ,LABC,RINDX) = CMPFEAT(FEA_FAZ,LABP,RINDX)
         CMPFEAT(FEA_FZA,LABC,RINDX) = CMPFEAT(FEA_FZA,LABP,RINDX)
      END IF
C
C** Set fields at last azimuth of new, combined Component.
C
C** If Previous Component has greater last azimuth than Current:
C
      IF (CMPFEAT( FEA_LAZ, LABP, RINDX ) .GT.
     >                          CMPFEAT( FEA_LAZ,LABC, RINDX )) THEN
         CMPFEAT(FEA_LAZ,LABC,RINDX) = CMPFEAT(FEA_LAZ,LABP,RINDX)
         CMPFEAT(FEA_LZA,LABC,RINDX) = CMPFEAT(FEA_LZA,LABP,RINDX)
      END IF
C
C** Set nearest first bin no. & farthest last bin no. for entire
C** Combined Component:
C
      IF (CMPFEAT(FEA_FBN,LABP,RINDX).LT.CMPFEAT(FEA_FBN,LABC,RINDX))
     >   CMPFEAT(FEA_FBN,LABC,RINDX) = CMPFEAT(FEA_FBN,LABP,RINDX)
C
      IF (CMPFEAT(FEA_LBN,LABP,RINDX).GT.CMPFEAT(FEA_LBN,LABC,RINDX))
     >   CMPFEAT(FEA_LBN,LABC,RINDX) = CMPFEAT(FEA_LBN,LABP,RINDX)
C
C**  Sum the number of segments for both components.
C
      CMPFEAT(FEA_CNT,LABC,RINDX) = CMPFEAT(FEA_CNT,LABC,RINDX)
     >                            + CMPFEAT(FEA_CNT,LABP,RINDX)
C
C** If previous component crosses zero degrees, set CMPFEAT.
C
      IF (CMPFEAT( FEA_ZCR, LABP, RINDX ) .EQ. 1.0) THEN
         CMPFEAT( FEA_ZCR, LABC, RINDX ) = 1.0
      END IF
C
C** Find any other possible branches of merged Component and change
C** their labels to that of Component merged with.
C
C** --In "Previous" radial:
C
      DO 21  IXP = 1, NRSEGP
        IF ( RADSEGP( RAD_ID, IXP) .EQ. LABP ) THEN
           RADSEGP( RAD_ID, IXP)  =  LABC
        END IF
 21   CONTINUE
C
C** --In "Current" radial:
C
      DO 22  IXC = 1, NRSEGC
        IF ( RADSEGC( RAD_ID, IXC ) .EQ. LABP ) THEN
            RADSEGC( RAD_ID, IXC )  =  LABC
         END IF
 22   CONTINUE
C
C** --In "First" radial (if Component existed at start of elev scan):
C
      IF ( CMPFEAT( FEA_FAZ, LABP, RINDX ) .EQ. FIRSTAZ )  THEN
        DO 23  IX1 = 1, NRSEG( RINDX, AZ1 )
          IF( RADSEG( RAD_ID, IX1, RINDX, AZ1 ) .EQ. LABP )
     >          RADSEG( RAD_ID, IX1, RINDX, AZ1 )  =  LABC
 23     CONTINUE
      END IF
C
C**************** END OF PROCESSING FOR SUBROUTINE ******************
C
      RETURN
      END
