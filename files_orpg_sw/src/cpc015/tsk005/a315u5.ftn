C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:41:08 $
C $Id: a315u5.ftn,v 1.3 2002/12/16 19:41:08 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315U5__SORT_COMPONENT_STACK( NCOMP, COMPSTACK )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315U5__SORT_COMPONENT_STACK
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       06 29 95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315U5__SORT_COMPONENT_STACK( NCOMP,
*.                                                       COMPSTACK )
*.
*.  MODULE FUNCTION:
*.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT     TYPE        DESCRIPTION
*.    -   -----     ----        -----------
*.    C   STK_MRF   I*4         (CONSTANT)Index into the Componet Stack for
*.                              the Maximum Reflectivity
*.    C   STK_ZCN   I*4         (CONSTANT)Index into Componet Stack array of
*.                              the componet's height
*.    P   COMPSTACK R*4         An array of componets for a storm cell
*.    P   NCOMP     I*4         Number of componets
*.
*.    *   OUTPUT    TYPE        DESCRIPTION
*.    -   ------    ----        -----------
*.    P   COMPSTACK R*4         An array of componets for a storm cell
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME     TYPE        DESCRIPTION
*.    ----     ----        -----------
*.    CMP_NDX  I*4         Do loop variable for number of cell componets
*.    COMPNDX  I*4         Do loop variable for the number of componets - used
*.                         for sorting
*.    NSTK_CHR I*4         1st dimension of COMPSTAK array and equals number
*.                         of component attributes stored in the array.
*.    TEMP     R*4         Temporary storage to switch componet's attributes
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:
*.
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C             STORM CENTROIDS: SORT COMPONENT STACK ROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach output parameter-definition file (of "STORM_CENTROIDS")
$INCLUDE A315BUF.INC/G,**A315P5C (NLIST)
$INCLUDE A315BUF.INC/G,**A315D5 (NLIST)
C
C*********************** DATA DECLARATIONS **************************
C
      INTEGER  CMP_NDX, COMPNDX, NCOMP
      REAL     TEMP, COMPSTACK( NSTK_CHR, NCOMP )
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C** Sort the components by decreasing height.
C
      DO 90 CMP_NDX = 1, NCOMP-1
         DO 80 COMPNDX = CMP_NDX+1, NCOMP
C
C** Swap the component if the second component has a lower height
C** than the first component.
C
            IF (COMPSTACK( STK_ZCN, COMPNDX ) .LT.
     >          COMPSTACK( STK_ZCN, CMP_NDX ) ) THEN
C
C** Swap heights:
C
               TEMP = COMPSTACK( STK_ZCN, CMP_NDX )
               COMPSTACK( STK_ZCN, CMP_NDX ) =
     >                    COMPSTACK( STK_ZCN, COMPNDX )
               COMPSTACK( STK_ZCN, COMPNDX ) = TEMP
C
C** Swap reflectivities:
C
               TEMP = COMPSTACK( STK_MRF, CMP_NDX )
               COMPSTACK( STK_MRF, CMP_NDX ) =
     >                    COMPSTACK( STK_MRF, COMPNDX )
               COMPSTACK( STK_MRF, COMPNDX ) = TEMP
C
            END IF
C
 80      CONTINUE
 90   CONTINUE
C
C************** END OF PROCESSING FOR SUBROUTINE ********************
C
      RETURN
      END
