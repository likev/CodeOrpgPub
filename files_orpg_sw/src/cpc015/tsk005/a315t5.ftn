C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:41:06 $
C $Id: a315t5.ftn,v 1.3 2002/12/16 19:41:06 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315T5__SORT_BY_VIL( )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315T5__SORT_BY_VIL
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       06 29 95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315T5__SORT_BY_VIL( )
*.
*.  MODULE FUNCTION:
*.
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT    TYPE        DESCRIPTION
*.    -   -----    ----        -----------
*.    C   CELL_CNT I*4         Count of number of storm cells not previously
*.                             deleted by merges and proximity checks.
*.    C   NBR_STMS I*4         Counter for the number of storm cells
*.                             constructed from components before calls to
*.                             merge or delete modules.
*.    C   STORM_ID I*4         An array of storm indices within Centroids.
*.    C   STRMCELL R*4         Array of storm cell characteristics of all
*.                             storm cells built from components.
*.    C   STC_MRF  I*4         (CONSTANT)Location in the STRMCELL array of the
*.                             storm cell's maximum reflectivity (dBZ).
*.    C   STC_MWA  I*4         (CONSTANT)Location in the STRMCELL array of
*.                             mass-weighted area of a storm cell.
*.    C   STC_VIL  I*4         (CONSTANT)Location in the STRMCELL array of the
*.                             storm cell's VIL
*.
*.    *   OUTPUT   TYPE        DESCRIPTION
*.    -   ------   ----        -----------
*.    C   CELL_CNT I*4         Count of number of storm cells not previously
*.                             deleted by merges and proximity checks.
*.    C   STORM_ID I*4         An array of storm indices within Centroids.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME     TYPE        DESCRIPTION
*.    ----     ----        -----------
*.    CELL_NDX I*4         Do loop index for number of cells
*.    CINDX    I*4         Do loop variable used for storm cell index
*.    STINX    I*4         Second storm cell index - used for sorting
*.    STM_NDX  I*4         Do loop variable for the number of storm cells
*.    TEMP_ID  I*4         Temporary storage for Storm Cell ID while swapping
*.                         two cell
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315CNCC
*.    A315CVCC
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:
*.
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C             STORM CENTROIDS: LINK COMPONENTS  ROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach output parameter-definition file (of "STORM_CENTROIDS")
$INCLUDE A315BUF.INC/G,**A315P5C (NLIST)
C
C**Attach internal common area (CNCC)
$INCLUDE A315.INC/G,**A315CNCC (NLIST)
C
C**Attach internal common area (CVCC)
$INCLUDE A315.INC/G,**A315CVPC (NLIST)
$INCLUDE            **A315CVCC (NLIST)
C
C*********************** DATA DECLARATIONS **************************
C
      INTEGER  STM_NDX, CELL_NDX, CINDX, TEMP_ID, STINX
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C** Generate list of active cells (i.e., those not deleted by having
C** their mass set to 0.0)
C
      DO 100 STM_NDX = 1, NBR_STMS
         IF ( STRMCELL( STC_MWA, STM_NDX ) .GT. 0.0 ) THEN
            CELL_CNT = CELL_CNT + 1
            STORM_ID( CELL_CNT ) = STM_NDX
         END IF
 100  CONTINUE
C
C** Sort the cells by decreasing cell-based VIL, then sort by
C** decreasing maximum reflectivity.
C
      DO 90 CELL_NDX = 1, CELL_CNT-1
         DO 80 CINDX = CELL_NDX+1, CELL_CNT
            STINX = STORM_ID( CINDX )
            STM_NDX = STORM_ID( CELL_NDX )
C
C** Swap the two storm cells in list if the first cell has a lower
C** VIL than the second cell.
C
            IF (STRMCELL( STC_VIL, STINX ) .GT.
     >          STRMCELL( STC_VIL, STM_NDX )) THEN
               TEMP_ID = STORM_ID( CELL_NDX )
               STORM_ID( CELL_NDX ) = STORM_ID( CINDX )
               STORM_ID( CINDX ) = TEMP_ID
C
C** If both storm cells have the same VIL, swap the cells if the
C** first cell has a lower maximum reflectivity than the second.
C
            ELSE IF (STRMCELL( STC_VIL, STM_NDX ) .EQ.
     >               STRMCELL( STC_VIL, STINX )) THEN
C
C** Same VIL, check reflectivity.
C
               IF (STRMCELL( STC_MRF, STINX ) .GT.
     >             STRMCELL( STC_MRF, STM_NDX )) THEN
C
C** Swap cells.
C
                  TEMP_ID = STORM_ID( CELL_NDX )
                  STORM_ID( CELL_NDX ) = STORM_ID( CINDX )
                  STORM_ID( CINDX ) = TEMP_ID
               END IF
            END IF
 80      CONTINUE
 90   CONTINUE
C
C************** END OF PROCESSING FOR SUBROUTINE ********************
C
      RETURN
      END
