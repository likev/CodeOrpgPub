C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:41:07 $
C $Id: a315u4.ftn,v 1.3 2002/12/16 19:41:07 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315U4__REMOVE_COMP( )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315U4__REMOVE_COMP
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.        06/28/95      0000       STEVE SMITH         CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315U4__REMOVE_COMP
*.
*.  MODULE FUNCTION:
*.
*.
*.  MODULES CALLED: A315P4__MASS_RANK 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT        TYPE        DESCRIPTION
*.    -   -----        ----        -----------
*.    G   ADPCMPMX     I*4         Maximum number of componets for each
*.                                 reflectivity threshold saved in Storm Data.
*.    G   ONE_RADIAN   R*4         (CONSTANT)PARAMETER VALUE FOR ONE RADIAN
*.    C   CMPFEAT      R*4         An array of 16 characteristics for up to
*.                                 120 componets for 7 reflectivity levels
*.    C   COMPCNT      I*4         Count of the number of components built for
*.                                 each reflectivity level.
*.    C   COMPINDX     I*4         Contains IDs of components in the order in
*.                                 which they are completed which may differ
*.                                 from the order assigned from the circular
*.                                 stack.
*.    C   ELVCOMP      R*4         Stores attributes of component with highest
*.                                 reflectivity level that lies within a
*.                                 component at lower reflectivity levels.
*.    C   NBR_STM_COMP I*4         Counter for the number of storm cell
*.                                 components per elevation scan after
*.                                 omitting redundant components at lower
*.                                 reflectivity thresholds.
*.    C   REF_MAX_NDX  I*4         Lower limit of reflectivity index for
*.                                 processing segments and components.
*.    C   REF_MIN_NDX  I*4         Upper limit of reflectivity index for
*.                                 processing segments and components.
*.    C   RINDX        I*4         Index used to point to current reflectivity
*.                                 level for processing segment index array
*.                                 and component arrays.
*.    C   DLTAR1       R*4         (CONSTANT)Length in km of a range bin.
*.    C   FEA_AZM      I*4         (CONSTANT)Location in the CMPFEAT array of
*.                                 the azimuth (radians) of a component's
*.                                 centroid.
*.    C   FEA_FBN      I*4         (CONSTANT)Location in the CMPFEAT array of
*.                                 the beginning bin of a component's segment
*.                                 that starts closest to the radar.
*.    C   FEA_FZA      I*4         (CONSTANT)Location of the first azimuth in
*.                                 radians (most counter-clockwise) segment of
*.                                 a component in the CMPFEAT array.
*.    C   FEA_LBN      I*4         (CONSTANT)Location in the CMPFEAT array of
*.                                 the ending bin of a component's segment
*.                                 that ends farthest from the radar.
*.    C   FEA_LZA      I*4         (CONSTANT)Location of the last azimuth in
*.                                 radians (most clockwise) segment of a
*.                                 component in the CMPFEAT array.
*.    C   FEA_RNG      I*4         (CONSTANT)Location in the CMPFEAT array of
*.                                 the range (km) to a component's centroid.
*.    C   FEA_ZCR      I*4         (CONSTANT)Location in the CMPFEAT array of
*.                                 the 360-0 degrees azimuth cross-over flag
*.                                 for a component.
*.    C   NCFCHR       I*4         (CONSTANT)Total number of component feature
*.                                 characteristics (attributes).
*.
*.    *   OUTPUT       TYPE        DESCRIPTION
*.    -   ------       ----        -----------
*.    G   ADPCMPMX     I*4         Maximum number of componets for each
*.                                 reflectivity threshold saved in Storm Data.
*.    C   COMPCNT      I*4         Count of the number of components built for
*.                                 each reflectivity level.
*.    C   ELVCOMP      R*4         Stores attributes of component with highest
*.                                 reflectivity level that lies within a
*.                                 component at lower reflectivity levels.
*.    C   MASSRANK     I*4         Rank of components by mass-weighted area in
*.                                 descending order.
*.    C   NBR_STM_COMP I*4         Counter for the number of storm cell
*.                                 components per elevation scan after
*.                                 omitting redundant components at lower
*.                                 reflectivity thresholds.
*.    C   RINDX        I*4         Index used to point to current reflectivity
*.                                 level for processing segment index array
*.                                 and component arrays.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME       TYPE        DESCRIPTION
*.    ----       ----        -----------
*.    CMPAZM     R*4         The azimuth (radians) of a componet's centroid
*.    CMPNDX     I*4         Componet Index
*.    CMPRNG     R*4         The range (km) to a component's centroid.
*.    FEATBAZM   R*4         The first azimuth in radians (most
*.                           counter-clockwise) segment ofa componet
*.    FEATBRNG   R*4         The beginning bin of a component's segment that
*.                           starts closest to the radar.
*.    FEATEAZM   R*4         Last azimuth in radians (most clockwise) segment
*.                           of a component
*.    FEATERNG   R*4         The ending bin of a component's segment that ends
*.                           farthest from the radar.
*.    HLF_FCTR   R*4         Real parameter value of 0.5
*.    ICHR       I*4         Do loop varaible for componet characteristics
*.    IXC        I*4         Do loop variable used for referencing all
*.                           componets at this reflectivity threshold
*.    NCOMP      I*4         Do loop index for number of storm cell componets
*.                           per elevation
*.    NFEAT      I*4         Do loop index
*.    NSTMC_TEMP I*4         Temporary storage for the number of storm
*.                           componets
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A315CSAD
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315CNCC
*.    A315COCC
*.    A315CQCC
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:  None
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C         STORM CELL COMPONENTS:
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach local STORMS Adaptation Data parameter file:
$INCLUDE A315BUF.INC/G,**A315PSAD (NLIST)
$INCLUDE               **A315CSAD (NLIST)
C
C**Attach internal common block (COCC)
$INCLUDE A315.INC/G,**A315CNCC (NLIST)
$INCLUDE            **A315COCC (NLIST)
C
C**Attach internal common block (CQCC)
$INCLUDE A315.INC/G,**A315CQPC (NLIST)
$INCLUDE            **A315CQCC (NLIST)
C
C**Attach internal common block (CSCC)
$INCLUDE A315.INC/G,**A315CSCC (NLIST)
C
$INCLUDE A309.INC/G, **A3PM50 (NLIST)
C
C********************** DATA DECLARATIONS ***************************
C
      INTEGER*4 IXC, ICHR, NFEAT, NCOMP, CMPNDX, NSTMC_TEMP
C
      REAL     CMPAZM, CMPRNG, FEATBAZM, FEATEAZM, FEATBRNG, FEATERNG
      REAL     HLF_FCTR
C
      PARAMETER (HLF_FCTR = 0.5)
C
C******************** DATA INITIALIZATIONS **************************
C
C
C******************* BEGIN MAIN PROCESSING SECTION ******************
C
C** Initialize the number of storm components to zero.
C
      NBR_STM_COMP = 0
C
C** DO FOR ALL reflectivity thresholds, starting from highest
C
      DO 100 RINDX = REF_MAX_NDX, REF_MIN_NDX
         IF ( NBR_STM_COMP .EQ. 0 ) THEN
            IF ( COMPCNT( RINDX ) .GT. ADPCMPMX ) THEN
C
C** If the number of components for this reflectivity threshold
C** greater than maximum allowed, set the number to maximum
C** allowed.
C
               COMPCNT( RINDX ) = ADPCMPMX
            END IF
C
C** DO FOR ALL components this reflectivity threshold.
C
            DO 20 IXC = 1, COMPCNT( RINDX )
               CMPNDX = COMPINDX( IXC, RINDX )
C
C** DO FOR ALL component characteristics
C
               DO 10 ICHR = 1, NCFCHR
C
C** Store the component characteristics in ELVCOMP.
C
                  ELVCOMP( ICHR,IXC ) = CMPFEAT( ICHR,CMPNDX,RINDX )
 10            CONTINUE
C
C** Save the ELVCOMP index for mass ranking.
C
               MASSRANK( IXC ) = IXC
 20         CONTINUE
C
C** If there were any components this reflectivity threshold,
C** update the number of storm components.
C
            NBR_STM_COMP = COMPCNT( RINDX )
         ELSE
            NSTMC_TEMP = NBR_STM_COMP
            DO 50 NFEAT = 1, COMPCNT( RINDX )
               CMPNDX = COMPINDX( NFEAT, RINDX )
               FEATBAZM = CMPFEAT( FEA_FZA, CMPNDX, RINDX )
               FEATEAZM = CMPFEAT( FEA_LZA, CMPNDX, RINDX )
               FEATBRNG = CMPFEAT( FEA_FBN, CMPNDX, RINDX )*DLTAR1
     >                  - HLF_FCTR
               FEATERNG = CMPFEAT( FEA_LBN, CMPNDX, RINDX )*DLTAR1
     >                  - HLF_FCTR
               DO 30 NCOMP = 1, NBR_STM_COMP
                  CMPAZM = ELVCOMP( FEA_AZM, NCOMP ) * ONE_RADIAN
                  CMPRNG = ELVCOMP( FEA_RNG, NCOMP )
C
C** If the component does not cross zero degrees, then ....
C
                  IF (CMPFEAT( FEA_ZCR,CMPNDX,RINDX ) .EQ. 0.0) THEN
                     IF (CMPAZM .GE. FEATBAZM .AND.
     >                   CMPAZM .LE. FEATEAZM .AND.
     >                   CMPRNG .GE. FEATBRNG .AND.
     >                   CMPRNG .LE. FEATERNG) GO TO 50
                  ELSE
C
C** Component does cross zero degrees...
C
                     IF ((CMPAZM.GE.FEATBAZM .OR. CMPAZM.LE.FEATEAZM)
     >                    .AND. CMPRNG .GE. FEATBRNG
     >                    .AND. CMPRNG .LE. FEATERNG) GO TO 50
                  END IF
 30            CONTINUE
               NSTMC_TEMP = NSTMC_TEMP + 1
               IF ( NSTMC_TEMP .GT. ADPCMPMX ) THEN
                  NBR_STM_COMP = NSTMC_TEMP - 1
                  GO TO 200
               END IF
               MASSRANK( NSTMC_TEMP ) = NSTMC_TEMP
               DO 40 ICHR = 1, NCFCHR
                  ELVCOMP( ICHR, NSTMC_TEMP ) =
     >                   CMPFEAT( ICHR, CMPNDX, RINDX )
 40            CONTINUE
 50         CONTINUE
            NBR_STM_COMP = NSTMC_TEMP
         END IF
 100  CONTINUE
C
C**
C
 200  CONTINUE
C
C** Call A315P4 to sort the components in decreasing mass-weighted
C** area order.
C
      CALL A315P4__MASS_RANK
C
C**************** END OF PROCESSING FOR SUBROUTINE ******************
C
      RETURN
      END
