C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:40:32 $
C $Id: a315e7.ftn,v 1.3 2002/12/16 19:40:32 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315E7__FCAST_ERROR( STORMOTION )
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315E7__FCAST_ERROR
*.
*.  MODULE VERSION: 0016
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       08 16 85      0000      DENNIS MILLER        BUILD 2
*.       05 07 86      0001      DENNIS MILLER        SPR # 304
*.       06 12 86      0002      DENNIS MILLER        SPR # 60223
*.       11 15 86      0003      M STEWART            SPR # 60346
*.       11 15 86      0003      M STEWART            SPR # 60650
*.       05 11 89      0004      DENNIS MILLER        SPR # 90299
*.       07 27 89      0004      DENNIS MILLER        SPR # 90423
*.       03 20 90      0005      RICH MIHOCI          SPR # 90697
*.       02 22 91      0006      DENNIS MILLER        SPR # 91256
*.       02 15 91      0006      JOHN DEPHILIP        SPR # 91762
*.       12 03 91      0007      STEVE ANDERSON       SPR # 92740
*.       12/10/91      0008      ED NICHLAS           SPR 92637 PDL Removal
*.       04/24/92      0009      Toolset              SPR 91895
*.       03/25/93      0010      Toolset              SPR NA93-06801
*.       01/28/94      0011      Toolset              SPR NA94-01101
*.       03/03/94      0012      Toolset              SPR NA94-05501
*.       04/01/95      0012      Toolset              CCR NA95-11802
*.       05/25/95      0014      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0015      Toolset              CCR NA95-11807
*.       03/16/99      0016      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315E7__FCAST_ERROR( STORMOTION )
*.
*.  MODULE FUNCTION:
*.
*.    This routine computes Forecast Errors for all Continuing storm
*.  cells.  The errors are determined by extrapolating each
*.  continuing storm cell's previous speed from its previous location
*.  through the time interval to the current volume scan.  The
*.  difference between extrapolated location of each storm cell and
*.  the actual current location is the Forecast Error.  No Forecast
*.  Errors are computed for storm cells without previous histories
*.  (they are set to "UNDEFINED").
*.
*.    The routine goes on to determine the Mean Forecast Error for
*.  each storm cell of the current volume scan. For "Continuing"
*.  storm cells, this is done by increasing the previous summed-total
*.  forecast error for the storm by that contributed by the current
*.  volume scan, and by increasing the previous count of error-
*.  forecasts made by one, then dividing the former by the latter.
*.  For "New" storm cells, since forecast errors are not determined,
*.  the Mean Forecast Error is set to "UNDEFINED".
*.
*.  MODULES CALLED: NONE.
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT      TYPE        DESCRIPTION
*.    -   -----      ----        -----------
*.    G   NSTF_MAX   I*4         (CONSTANT)The maximum number of storm cells
*.                               the array STORMIDTYP may hold.  The array
*.                               provides the storm cell Id attribute.
*.    G   NSTF_MOT   I*4         (CONSTANT)The number of storm motion
*.                               attributes for each storm cell in the array
*.                               STORMOTION. (First dimension)
*.    G   STF_ERR    I*4         (CONSTANT)Offset to the forecast error (km)
*.                               in the STORMOTION part of the
*.                               tracking/forecast output buffer.
*.    G   STF_MFE    I*4         (CONSTANT)Offset to the mean forecast error
*.                               (km) in the STORMOTION part of the
*.                               tracking/forecast output buffer.
*.    G   UNDEF      R*4         (CONSTANT)Value that shows that storm cell
*.                               attributes of motion cannot be calculated
*.                               because there is no storm cell history.
*.    C   CORLTABL   I*4         Correlation table containing IDs to the cells
*.                               for all previous volumes (up to the maximum).
*.    C   IXC        I*4         Index to the current volume scan in the
*.                               forecast error arrays, 1 to NPVOL.
*.    C   IXCUR      I*4         Index to the current volume scan in the
*.                               correlation table
*.    C   IXP        I*4         Index to the previous volume scan in the
*.                               forecast error arrays
*.    C   IXPRE      I*4         Index to the previous volume scan in the
*.                               correlation table
*.    C   NSTMHIST   I*4         Array of the # of cells/volume scan in
*.                               correlation table.
*.    C   NUMERR     I*4         Total number of forecast errors
*.    C   POSITABL   R*4         Table of cell-X and Y centroid positions thru
*.                               the time spanned in the Correlation History
*.                               table.
*.    C   STMSPD     R*4         An array of cell motions including X & Y
*.                               movement (km) in the preceding volume scan
*.                               and speed (km/sec) and direction (deg) for
*.                               the cells history.
*.    C   TIMEINT    R*4         Time interval between present and preceding
*.                               volume scans.
*.    C   TOTERR     R*4         Storm Cell's Total Forecast Error
*.    C   X_DIR      I*4         (CONSTANT)Index to the x-direction of a storm
*.                               cell in the STMSPD and BESTPOS arrays.
*.    C   X_POS      I*4         (CONSTANT)Index to the x-coordinate of a
*.                               storm cell, the first attribute, in the
*.                               POSITABLE array.
*.    C   Y_DIR      I*4         (CONSTANT)Index to the y-direction of a storm
*.                               cell in the STMSPD and BESTPOS arrays.
*.    C   Y_POS      I*4         (CONSTANT)Index to the y-coordinate of a
*.                               storm cell, the second attribute, in the
*.                               POSITABLE array.
*.    P   STORMOTION R*4         2-D array of Storm-Motion attributes per
*.                               volume scan, output by "FORECAST" algorithm.
*.
*.    *   OUTPUT     TYPE        DESCRIPTION
*.    -   ------     ----        -----------
*.    C   IXCUR      I*4         Index to the current volume scan in the
*.                               correlation table
*.    C   NUMERR     I*4         Total number of forecast errors
*.    C   TOTERR     R*4         Storm Cell's Total Forecast Error
*.    P   STORMOTION R*4         2-D array of Storm-Motion attributes per
*.                               volume scan, output by "FORECAST" algorithm.
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME    TYPE        DESCRIPTION
*.    ----    ----        -----------
*.    IC      I*4         Do-loop index for storms of current volume scan.
*.    IP      I*4         Do-loop index for storms of previous volume scan.
*.    XERROR  R*4         Track Error in x-direction (Extrapolation)
*.    XEXTRAP R*4         Extrapolated x-position of storm through time
*.                        interval
*.    YERROR  R*4         Track Error in y-direction (Extrapolation)
*.    YEXTRAP R*4         Extrapolated y-position of storm from
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315C6T
*.    A315CFF
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:
*.
*.  DEVIATION FROM STANDARDS: none
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C      STORM POSITION FORECAST : COMPUTE FORECAST-ERROR  SUBROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
C**Attach output parameter-definition file (of "POSITION_FORECAST")
$INCLUDE A315BUF.INC/G,**A315P7F (NLIST)
C
C**Attach internal common block (of "STORM_TRACK" output variables).
$INCLUDE A315.INC/G,**A315C6T (NLIST)
C
C**Attach internal common block (of "FORECAST" local variables).
$INCLUDE **A315CFF (NLIST)
C
C*********************** DATA DECLARATIONS **************************
C
C** From output buffer:
C
      REAL    STORMOTION( NSTF_MOT,NSTF_MAX )
C
C** Local:
C
      INTEGER  IC, IP
      REAL     XEXTRAP, YEXTRAP, XERROR, YERROR
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C**  Find previous location (in Correlation & History Tables) of each
C**  "Continuing" storm cell (i.e. one for which linked pointer is
C**  positive).
C
      DO 700  IC = 1, NSTMHIST( IXCUR )
         IF ( CORLTABL(IC,IXCUR) .GT. 0 )  THEN
            IP = CORLTABL( IC,IXCUR )
C
C**  Use index of storm cell in previous volume scan to get its prior
C**  position and speed, and extrapolate through time interval (in X
C**  & Y).
C
            XEXTRAP = POSITABL( X_POS,IP,IXPRE ) +
     >                          STMSPD( X_DIR,IP ) * TIMEINT
            YEXTRAP = POSITABL( Y_POS,IP,IXPRE ) +
     >                          STMSPD( Y_DIR,IP ) * TIMEINT
C
C**  Compute Forecast Error (X & Y) as the difference between the
C**  extrapolated and the actual position of the storm cell this
C**  volume scan.
C
            XERROR = XEXTRAP - POSITABL( X_POS,IC,IXCUR )
            YERROR = YEXTRAP - POSITABL( Y_POS,IC,IXCUR )
C
C**  Compute magnitude (km) of the Forecast Error.
C
C**  COMPUTE (FORECAST ERROR) and WRITE (FORECAST ERROR):
C
            STORMOTION( STF_ERR,IC ) = SQRT( XERROR*XERROR +
     >                                       YERROR*YERROR )
C
C**  Add Forecast Error to Total Forecast Error through storm cell's
C**  history, increment Total No. Forecast Errors determined by one,
C**  and set Mean Forecast Error to the quotient of the two.
C
            TOTERR( IC,IXC ) = TOTERR( IP,IXP )
     >                       + STORMOTION( STF_ERR,IC )
            NUMERR( IC,IXC ) = NUMERR( IP,IXP ) + 1
C
C**  COMPUTE (mean FORECAST ERROR) and WRITE (mean FORECAST ERROR):
C
            STORMOTION( STF_MFE,IC ) = TOTERR( IC,IXC )
     >                               / NUMERR( IC,IXC )
         ELSE
C
C**  If reach here, no previous positions found for storm cell (i.e.
C**  is "New").  Set Forecast Error in output buffer to "Undefined".
C
            STORMOTION( STF_ERR,IC ) = UNDEF
C
C**  Initialize Total Forecast Error & No. Forecast Errors determined
C**  for this storm cell to zero, and set Mean Forecast Error to
C**  "Undefined".
C
            TOTERR( IC,IXC ) = 0.0
            NUMERR( IC,IXC ) = 0
            STORMOTION( STF_MFE,IC ) = UNDEF
         END IF
 700  CONTINUE
C
C************** END OF PROCESSING FOR SUBROUTINE ********************
C
      RETURN
      END
