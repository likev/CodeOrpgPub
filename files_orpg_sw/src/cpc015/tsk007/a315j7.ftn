C
C RCS info
C $Author: christie $
C $Locker:  $
C $Date: 2002/12/16 19:40:49 $
C $Id: a315j7.ftn,v 1.3 2002/12/16 19:40:49 christie Exp $
C $Revision: 1.3 $
C $State: Exp $
C
      SUBROUTINE A315J7__TREND_DATA(VOLTIME, STORMAIN, STORMIDTYP)
*.********************************************************************
*.                    M O D U L E  P R O L O G U E
*.
*.  MODULE NAME: A315J7__TREND_DATA
*.
*.  MODULE VERSION: 0002
*.
*.  MODULE LANGUAGE: FORTRAN
*.
*.  CHANGE HISTORY:
*.
*.       DATE          VERSION   PROGRAMMER           NOTES
*.       ----------    -------   ----------------     ---------------
*.       05 25 95      0000      STEVE SMITH          CCR NA94-26302
*.       12/23/96      0001      Toolset              CCR NA95-11807
*.       03/16/99      0002      Toolset              CCR NA98-23803
*.
*.  CALLING SEQUENCE: CALL A315J7__TREND_DATA
*.
*.  MODULE FUNCTION:
*.
*.
*.  MODULES CALLED: ILBYTE, RTL 
*.
*.  PARAMETERS:          (*:  G = GLOBAL, C = COMMON, P = PASSED)
*.
*.    *   INPUT            TYPE        DESCRIPTION
*.    -   -----            ----        -----------
*.    G   CELL_TREND_INDEX I*2         Array containing indexes for trend data
*.                                     in the array CELL_TREND_DATA for each
*.                                     storm cell. Each position in
*.                                     CELL_TREND_INDEX corresponds to a Storm
*.                                     ID.
*.    G   CBASEOFF         I*4         (CONSTANT)Offset pointer for the
*.                                     location of the storm base in the array
*.                                     CELL_TREND_DATA.
*.    G   CHGTOFF          I*4         (CONSTANT)Offset pointer into the
*.                                     CELL_TREND_DATA array for the storm
*.                                     cell centroid height.
*.    G   CTOPOFF          I*4         (CONSTANT)Offset pointer into the
*.                                     CELL_TREND_DATA array for the storm
*.                                     cell top (height of highest component s
*.                                     centroid).
*.    G   MAXZHOFF         I*4         (CONSTANT)Offset pointer into the
*.                                     CELL_TREND_DATA array for the height of
*.                                     the storm cell component with maximum
*.                                     reflectivity.
*.    G   MAXZOFF          I*4         (CONSTANT)Offset pointer into the
*.                                     CELL_TREND_DATA array for the storm
*.                                     cell maximum reflectivity. MAXZOFF =
*.                                     VILOFF + NSTF_NTV = 50 + 10 = 60
*.    G   M_TO_FT          R*4         (CONSTANT)SCALING FACTOR FOR METERS TO
*.                                     FEET
*.    G   NSTF_IDT         I*4         (CONSTANT)The number of attributes for
*.                                     each storm cell in the array STORMIDTYP
*.                                     which contains Storm ID, storm type,
*.                                     and number of volumes tracked.
*.    G   NSTF_MAX         I*4         (CONSTANT)The maximum number of storm
*.                                     cells the array STORMIDTYP may hold.
*.                                     The array provides the storm cell Id
*.                                     attribute.
*.    G   NSTM_CHR         I*4         (CONSTANT)Maximum number of storm
*.                                     characteristics  (dimension of
*.                                     STORMAIN)
*.    G   NSTM_MAX         I*4         (CONSTANT)Maximum number of storms
*.                                     (Dimension for STORMAIN)
*.    G   NVOLOFF          I*4         (CONSTANT)ffset pointer into the
*.                                     CELL_TREND_DATA array for the number of
*.                                     volumes a storm cells been tracked
*.                                     packed as left byte
*.    G   NVOL_CVOL        I*4         (CONSTANT)Offset pointer into the
*.                                     VOLUME_TIMES array for the packed byte
*.                                     variables VOLUME_COUNTER and TIMEPTR.
*.    G   POHOFF           I*4         (CONSTANT)Offset to the POH for a
*.                                     particular cell at a particular volume
*.                                     scan in the cell trend array.
*.    G   POSHOFF          I*4         (CONSTANT)Offset to the POSH for a
*.                                     particular cell at a particular volume
*.                                     scan in the cell trend array.
*.    G   STF_ID           I*4         (CONSTANT)Offset to the cell ID index
*.                                     in the STORMIDTYP part of the
*.                                     tracking/forecast output buffer.
*.    G   STF_TYP          I*4         (CONSTANT)Offset to the cell type in
*.                                     the STORMIDTYP part of the
*.                                     tracking/forecast output buffer.
*.    G   STM_BAS          I*4         (CONSTANT)Index to centroid's base in
*.                                     centroid array.
*.    G   STM_LCB          I*4         (CONSTANT)Index to flag value
*.                                     indicating storm base is from lowest
*.                                     elevation cut in centroid array.
*.    G   STM_LCT          I*4         (CONSTANT)Index to flag value
*.                                     indicating storm top is from highest
*.                                     elevation cut in centroid array.
*.    G   STM_MRF          I*4         (CONSTANT)Index to maximum refelctivity
*.                                     in cetroids array.
*.    G   STM_RFH          I*4         (CONSTANT)Index to height in centroids
*.                                     array.
*.    G   STM_TOP          I*4         (CONSTANT)Index to storm top in array
*.                                     of centroid data.
*.    G   STM_VIL          I*4         (CONSTANT)Index to cell based VIL in
*.                                     array of centroid data.
*.    G   STM_ZCN          I*4         (CONSTANT)Index to storm cell
*.                                     z-position in an array of centroid
*.                                     data.
*.    G   TIMEOFF          I*4         (CONSTANT)Offset pointer for the latest
*.                                     time in the VOLUME_TIMES array.
*.    G   TYP_NEW          I*4         (CONSTANT)Flag that indicates that a
*.                                     storm is newly identified in the
*.                                     current volume scan.
*.    G   UNKNOWN          I*4         (CONSTANT)Flag value for the POSH and
*.                                     POH indicating the cell is beyond
*.                                     processing range.
*.    G   VILOFF           I*4         (CONSTANT)Offset pointer into the
*.                                     CELL_TREND_DATA array for the storm
*.                                     cell-based vertically integrated liquid
*.                                     water. VILOFF = POSHOFF + NSTF_NTV = 40
*.                                     + 10 = 50
*.    C   CELL_POINTERS    I*4         Circular list of the beginning
*.                                     locations of trend data in the array
*.                                     CELL_TREND_DATA
*.    C   CELL_TREND_DATA  I*2         Array of 8 storm cell attributes for up
*.                                     to 13 volumes and up to 100 storm
*.                                     cells.
*.                                     (NSTF_HKT+(NSTF_NTV*NSTF_NTF))*NSTF_MAX=
*.                                     (1+(10*8))*100=8100
*.    C   IXCUR            I*4         Index to the current volume scan in the
*.                                     correlation table
*.    C   NSTMHIST         I*4         Array of the # of cells/volume scan in
*.                                     correlation table.
*.    C   TIMEPTR          I*4         Variable used to point to the location
*.                                     of the latest volume time stored in the
*.                                     array VOLUME_TIMES.
*.    C   VOLUME_COUNTER   I*4         Count of the number of volume scans of
*.                                     storm cell trend data
*.    P   STORMAIN         R*4         2-D array of Storm Cell attributes.
*.    P   STORMIDTYP       I*4         2-D array of Storm Cell IDs, their
*.                                     duration and type.
*.    P   VOLTIME          R*4         Volume scan start time.  Milliseconds
*.                                     past midnight
*.
*.    *   OUTPUT           TYPE        DESCRIPTION
*.    -   ------           ----        -----------
*.    G   CELL_TREND_INDEX I*2         Array containing indexes for trend data
*.                                     in the array CELL_TREND_DATA for each
*.                                     storm cell. Each position in
*.                                     CELL_TREND_INDEX corresponds to a Storm
*.                                     ID.
*.    G   VOLUME_TIMES     I*2         One-dimensional array of volume
*.                                     counters, pointers, and times, in
*.                                     minutes, for trended storm cell
*.                                     attributes. VOLUME_SIZE = 12
*.    C   CELL_TREND_DATA  I*2         Array of 8 storm cell attributes for up
*.                                     to 13 volumes and up to 100 storm
*.                                     cells.
*.                                     (NSTF_HKT+(NSTF_NTV*NSTF_NTF))*NSTF_MAX=
*.                                     (1+(10*8))*100=8100
*.    C   IXCUR            I*4         Index to the current volume scan in the
*.                                     correlation table
*.    C   TIMEPTR          I*4         Variable used to point to the location
*.                                     of the latest volume time stored in the
*.                                     array VOLUME_TIMES.
*.    C   VOLUME_COUNTER   I*4         Count of the number of volume scans of
*.                                     storm cell trend data
*.
*.    *   ACTUAL ARGUMENTS  TYPE        DESCRIPTION
*.    -   ----------------  ----        -----------
*.    C   CELL_POINTERS     I*4         Circular list of the beginning
*.                                      locations of trend data in the array
*.                                      CELL_TREND_DATA
*.    C   CELL_TREND_DATA   I*2         Array of 8 storm cell attributes for
*.                                      up to 13 volumes and up to 100 storm
*.                                      cells.
*.                                      (NSTF_HKT+(NSTF_NTV*NSTF_NTF))*NSTF_MAX
*.                                      =(1+(10*8))*100=8100
*.
*.  DATABASE/FILE REFERENCE:  None
*.
*.  INTERNAL TABLES/WORK AREA:
*.
*.    NAME     TYPE        DESCRIPTION
*.    ----     ----        -----------
*.    BYTESHFT I*4         Multiplier to left shift 8 bits.
*.    CNVKMHFT R*4         Conversion factor for kilometers to hundreds of
*.                         feet.
*.    CNVMSMIN R*4         Conversion factor for milliseconds to minutes
*.    HIGH     I*4         Most significant byte position in halfword.
*.    I        I*4         Do loop counter.
*.    INDEX    I*4         Index into the cell trend data array.
*.    INIT     I*4         Program parameter for 1.
*.    LABEL    I*4         Storm Cell ID index.
*.    LOW      I*4         Least significant byte position in halfword.
*.    NSTF_NTV I*4         Number of past volumes for cell trends data
*.    NUMVOLS  I*4         Temporary variable to store number of volumes of
*.                         trend data for this storm cell.
*.    STATUS   I*4         Status returned from RTL library function.
*.    TPBASOFF I*4         Flag increment to denote cell has componet on the
*.                         highest elevation scan in TREND DATA
*.    VOLPTR   I*4         Temporary variable to store current volume scan
*.                         index.
*.
*.  GLOBAL BLOCKS REFERENCED:
*.
*.    A315TRND
*.
*.  COMMON BLOCKS REFERENCED:
*.
*.    A315C6T
*.    A315TRND
*.
*.  ERROR CONDITIONS:  None
*.
*.  ASSUMPTIONS/RESTRICTIONS:
*.
*.
*.  DEVIATION FROM STANDARDS:  None
*.
*.  COMPILATION INSTRUCTIONS:
*.
*.     Compiled using COMP15.CSS
*.
*.  LINKAGE INSTRUCTIONS:
*.
*.     Linked using LINK15.CSS
*.
*.  MISC:  None
*.
C********************************************************************
C
C                STORM TRACKING: TREND DATA SUBROUTINE
C
C********************************************************************
C
      IMPLICIT NONE
C
$INCLUDE A315.INC/G, **A315C6T (NLIST NEND)
C
$INCLUDE A315BUF.INC/G, **A315P5C (NLIST NEND)
C
$INCLUDE                **A315P7F (NLIST NEND)
C
$INCLUDE                **A315PTRD (NLIST NEND)
C
$INCLUDE                **A315CTRD (NLIST NEND)
C
$INCLUDE A315BUF.INC/G, **A315P9H (NLIST NEND)
C
$INCLUDE A309.INC/G, **A3PM50 (NLIST NEND)
C
C**  Passed arguments.
C
      REAL      VOLTIME, STORMAIN( NSTM_CHR, NSTM_MAX )
      INTEGER   STORMIDTYP( NSTF_IDT, NSTF_MAX )
C
C**  Local variables.
C
      REAL      CNVKMHFT, CNVMSMIN
      INTEGER   VOLPTR, NUMVOLS, INDEX, INIT, STATUS
      INTEGER*4 BYTESHFT, LABEL, HIGH, LOW, I
C
      PARAMETER (INIT = 1, CNVKMHFT = M_TO_FT*10.0, BYTESHFT = 256)
      PARAMETER (HIGH = 1, LOW = 0, CNVMSMIN = 1.0/60000.0)
C
C****************** BEGIN MAIN PROCESSING SECTION *******************
C
C**  Update volume counter.  If at max, leave at max.
C
      VOLUME_COUNTER = VOLUME_COUNTER + 1
      VOLUME_COUNTER = MIN(NSTF_NTV,VOLUME_COUNTER)
C
C**  Update lastest volume time pointer.
C
      TIMEPTR = TIMEPTR + 1
      IF ( TIMEPTR .GT. NSTF_NTV ) TIMEPTR = 1
C
C**  Store the number of volumes and last volume pointer.
C
      VOLUME_TIMES( NVOL_CVOL ) = VOLUME_COUNTER*BYTESHFT + TIMEPTR
C
C**  Store volume time (in minutes).
C
      VOLUME_TIMES( TIMEOFF + TIMEPTR ) = VOLTIME*CNVMSMIN
C
C**  DO FOR ALL STORM CELLS
C
      DO 100 I = 1, NSTMHIST ( IXCUR )
C
C**  Get storm cell label.
C
         LABEL = STORMIDTYP( STF_ID, I )
C
C**  If storm cell is of type "New", Then
C
         IF ( STORMIDTYP( STF_TYP,I ) .EQ. TYP_NEW ) THEN
C
C**  Get storm cell trend data index from storm cell trend data
C**  circular list.
C
            CALL RTL(INDEX, CELL_POINTERS, STATUS)
C
C**  Save cell trend data index for future reference.
C
            CELL_TREND_INDEX( LABEL ) = INDEX
C
C**  Initialize volume pointer, number of volumes, and data pointer.
C
            VOLPTR = INIT
            NUMVOLS = INIT
         ELSE
C
C**  Storm cell is of type "Continuing".  Get storm cell trend data
C**  index.
C
            INDEX = CELL_TREND_INDEX( LABEL )
C
C**  Extract volume pointer and number of volumes from trend data.
C
            CALL ILBYTE(NUMVOLS,CELL_TREND_DATA(INDEX+NVOLOFF),LOW)
            CALL ILBYTE(VOLPTR,CELL_TREND_DATA(INDEX+NVOLOFF),HIGH)
C
C**  If number of volumes not the max, increment it. Otherwise,
C**  set it to the max.
C
            NUMVOLS = NUMVOLS + 1
            IF ( NUMVOLS .GT. NSTF_NTV ) THEN
               NUMVOLS = NSTF_NTV
            END IF
C
C**  Increment volume pointer and data pointer.  If volume pointer
C**  greater than the max, reinitialize it as well as the data
C**  pointer.
C
            VOLPTR = VOLPTR + 1
            IF ( VOLPTR .GT. NSTF_NTV ) THEN
               VOLPTR = INIT
            END IF
         END IF
C
C**  Restore volume pointer and number of volumes in trend data.
C
         CELL_TREND_DATA( INDEX+NVOLOFF ) = NUMVOLS*BYTESHFT + VOLPTR
C
C**  Save storm cell trend data at the cell trend data index. (NOTE:
C**  The Hail Detection Algorithm is responsible for the Probability
C**  of Hail and Probability of Severe Hail Trend Data).
C
C**  Storm Top (100s ft):
C
         IF (STORMAIN( STM_LCT,I ) .GT. 0.) THEN
            CELL_TREND_DATA( INDEX+VOLPTR+CTOPOFF ) =
     >           NINT(STORMAIN( STM_TOP, I ) * CNVKMHFT)
C
C** If the Storm Top component is flagged (i.e. the cell has a
C** component on the highest elevation scan), then denote the flag
C** value in the Trend Data by adding 1000 to the Storm Top.
C
         ELSE
            CELL_TREND_DATA( INDEX+VOLPTR+CTOPOFF ) =
     >           NINT(STORMAIN( STM_TOP, I ) * CNVKMHFT + TPBASOFF)
         END IF
C
C**  Storm Base (100s ft):
C
         IF (STORMAIN( STM_LCB,I ) .GT. 0.) THEN
            CELL_TREND_DATA( INDEX+VOLPTR+CBASEOFF ) =
     >           NINT(STORMAIN( STM_BAS, I ) * CNVKMHFT)
C
C** If the Storm Base component is flagged (i.e. the cell has a
C** component on the lowest elevation scan), then denote the flag
C** value in the Trend Data by adding 1000 to the Storm Base.
C
         ELSE
            CELL_TREND_DATA( INDEX+VOLPTR+CBASEOFF ) =
     >           NINT(STORMAIN( STM_BAS, I ) * CNVKMHFT + TPBASOFF)
         END IF
C
C**  Height of Maximum Reflectivity (100s ft):
C
         CELL_TREND_DATA( INDEX+VOLPTR+MAXZHOFF ) =
     >        NINT(STORMAIN( STM_RFH, I ) * CNVKMHFT)
C
C**  Cell-Based VIL (kg/m**2):
C
         CELL_TREND_DATA( INDEX+VOLPTR+VILOFF ) =
     >        NINT(STORMAIN( STM_VIL, I ))
C
C**  Maximum Reflectivity (dBZ):
C
         CELL_TREND_DATA( INDEX+VOLPTR+MAXZOFF ) =
     >        NINT(STORMAIN( STM_MRF, I ))
C
C**  Centroid Height (100s ft):
C
         CELL_TREND_DATA( INDEX+VOLPTR+CHGTOFF ) =
     >        NINT(STORMAIN( STM_ZCN, I ) * CNVKMHFT)
C
C**  Initialize the Probability of Hail to UNKNOWN
C
         CELL_TREND_DATA( INDEX+VOLPTR+POHOFF ) = UNKNOWN
C
C**  Initialize the Probability of Severe Hail to UNKNOWN
C
         CELL_TREND_DATA( INDEX+VOLPTR+POSHOFF ) = UNKNOWN
C
 100  CONTINUE
C
C************ END OF PROCESSING FOR SUBROUTINE **********************
C
      RETURN
      END
